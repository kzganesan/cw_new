From: "Saved by Internet Explorer 11"
Subject: GET Api/CardRequests/{id}
Date: Fri, 16 Feb 2018 16:46:31 -0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_00AA_01D3A745.B2D630C0"
X-MimeOLE: Produced By Microsoft MimeOLE V6.3.9600.16384

This is a multi-part message in MIME format.

------=_NextPart_000_00AA_01D3A745.B2D630C0
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cardwizard-web:444/Help/Api/GET-Api-CardRequests-id

=EF=BB=BF<!DOCTYPE HTML>
<!DOCTYPE html PUBLIC "" ""><HTML lang=3D"en"><HEAD><META =
content=3D"IE=3D11.0000"=20
http-equiv=3D"X-UA-Compatible">
    =20
<META charset=3D"utf-8">    =20
<META http-equiv=3D"X-UA-Compatible" content=3D"IE=3Dedge,chrome=3D1">   =
  <TITLE>GET=20
Api/CardRequests/{id}</TITLE>    =20
<META name=3D"viewport" content=3D"width=3Ddevice-width, =
initial-scale=3D1, maximum-scale=3D1">=20
    <LINK href=3D"/Content/images/32x32Datacard_Light.png" =
rel=3D"shortcut icon"=20
type=3D"image/x-icon">     <LINK =
href=3D"https://cardwizard-web:444/Content/normalize.css"=20
rel=3D"stylesheet"> <LINK =
href=3D"https://cardwizard-web:444/Content/typography.css"=20
rel=3D"stylesheet"> <LINK =
href=3D"https://cardwizard-web:444/Content/main.css" rel=3D"stylesheet"> =

<LINK href=3D"https://cardwizard-web:444/Content/buttons.css" =
rel=3D"stylesheet">=20
<LINK href=3D"https://cardwizard-web:444/Content/color.css" =
rel=3D"stylesheet">=20
<LINK href=3D"https://cardwizard-web:444/Content/panel_boxes.css"=20
rel=3D"stylesheet"> <LINK =
href=3D"https://cardwizard-web:444/Content/form_layout.css"=20
rel=3D"stylesheet"> <LINK =
href=3D"https://cardwizard-web:444/Content/menus.css" =
rel=3D"stylesheet">=20
<LINK href=3D"https://cardwizard-web:444/Content/toolbars.css" =
rel=3D"stylesheet">  =20
  <!--[if lt IE 9]><script =
src=3D"//html5shiv.googlecode.com/svn/trunk/html5.js"></script><![endif]-=
->=20
   =20
<META name=3D"description" content=3D"CardWizard API">=20
<META name=3D"GENERATOR" content=3D"MSHTML 11.00.9600.16438"></HEAD>=20
<BODY>
<DIV class=3D"header_nav"><A =
href=3D"https://cardwizard-web:444/Help/Api/"><IMG=20
width=3D"130" height=3D"17" class=3D"logo" alt=3D"CardWizard" =
src=3D"https://cardwizard-web:444/Content/images/logo_cardwizard.png"></A=
>=20
       =20
<UL class=3D"dropdown_nav">
  <LI><IMG width=3D"55" height=3D"15" =
src=3D"https://cardwizard-web:444/Content/images/logo_datacard.png">=20
              </LI></UL></DIV>
<DIV class=3D"masthead">        GET Api/CardRequests/{id}     </DIV>
<DIV class=3D"content_pane">
<DIV class=3D"links"></DIV><LINK =
href=3D"https://cardwizard-web:444/Areas/HelpPage/HelpPage.css"=20
rel=3D"stylesheet" type=3D"text/css">=20
<DIV class=3D"help-page" id=3D"body"><SECTION class=3D"featured">
<DIV class=3D"content-wrapper">
<P><A href=3D"https://cardwizard-web:444/Help">Help Page Home</A>        =
    =20
</P></DIV></SECTION><SECTION class=3D"content-wrapper main-content =
clear-fix">
<H1>GET Api/CardRequests/{id}</H1>
<DIV>
<P> Retrieve the current status of a particular Card Request  </P>
<H3>Required Permissions</H3>
<P>None.</P>
<H2>Request Information</H2>
<H3>Headers/Cookies</H3>
<TABLE class=3D"help-page-table">
  <THEAD>
  <TR>
    <TH>Name</TH>
    <TH>Description</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD class=3D"parameter-name"><B>JWT</B></TD>
    <TD class=3D"parameter-documentation">
<PRE>OAuth Token</PRE></TD></TR></TBODY></TABLE>
<H3>URI Parameters</H3>
<TABLE class=3D"help-page-table">
  <THEAD>
  <TR>
    <TH>Name</TH>
    <TH>Description</TH>
    <TH>Type</TH>
    <TH>Additional information</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD class=3D"parameter-name">id</TD>
    <TD class=3D"parameter-documentation">
      <P>The ID of the Card Request you want the status of</P></TD>
    <TD class=3D"parameter-type">                        string          =
       =20
         </TD>
    <TD class=3D"parameter-annotations">
      <P>Required</P></TD></TR></TBODY></TABLE>
<H3>Body Parameters</H3>
<P></P>
<P>None.</P>
<H2>Response Information</H2>
<P>A CardRequestStatusModel filled with the current status of the card=20
request.</P>
<H4><A =
href=3D"https://cardwizard-web:444/Help/ResourceModel?modelName=3DDCG.Web=
API.Models.CardRequestStatusModel">DCG.WebAPI.Models.CardRequestStatusMod=
el</A>=20
</H4>
<TABLE class=3D"help-page-table">
  <THEAD>
  <TR>
    <TH>Name</TH>
    <TH>Description</TH>
    <TH>Type</TH>
    <TH>Additional information</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD class=3D"parameter-name">CardRequestID</TD>
    <TD class=3D"parameter-documentation">
      <P></P></TD>
    <TD class=3D"parameter-type">                        string          =
       =20
         </TD>
    <TD class=3D"parameter-annotations">
      <P>None.</P></TD></TR>
  <TR>
    <TD class=3D"parameter-name">Status</TD>
    <TD class=3D"parameter-documentation">
      <P></P></TD>
    <TD class=3D"parameter-type"><A =
href=3D"https://cardwizard-web:444/Help/ResourceModel?modelName=3DDCG.Car=
d.CardRequestStatusEnum">DCG.Card.CardRequestStatusEnum</A>=20
                          </TD>
    <TD class=3D"parameter-annotations">
      <P>None.</P></TD></TR>
  <TR>
    <TD class=3D"parameter-name">PINOffset</TD>
    <TD class=3D"parameter-documentation">
      <P></P></TD>
    <TD class=3D"parameter-type">                        string          =
       =20
         </TD>
    <TD class=3D"parameter-annotations">
      <P>None.</P></TD></TR>
  <TR>
    <TD class=3D"parameter-name">PVV</TD>
    <TD class=3D"parameter-documentation">
      <P></P></TD>
    <TD class=3D"parameter-type">                        string          =
       =20
         </TD>
    <TD class=3D"parameter-annotations">
      <P>None.</P></TD></TR>
  <TR>
    <TD class=3D"parameter-name">ErrorID</TD>
    <TD class=3D"parameter-documentation">
      <P></P></TD>
    <TD class=3D"parameter-type"><A =
href=3D"https://cardwizard-web:444/Help/ResourceModel?modelName=3DDCG.Car=
d.CardRequestErrorEnum">DCG.Card.CardRequestErrorEnum</A>=20
                          </TD>
    <TD class=3D"parameter-annotations">
      <P>None.</P></TD></TR>
  <TR>
    <TD class=3D"parameter-name">ErrorDescription</TD>
    <TD class=3D"parameter-documentation">
      <P></P></TD>
    <TD class=3D"parameter-type">                        string          =
       =20
         </TD>
    <TD class=3D"parameter-annotations">
      <P>None.</P></TD></TR>
  <TR>
    <TD class=3D"parameter-name">DeviceErrorID</TD>
    <TD class=3D"parameter-documentation">
      <P></P></TD>
    <TD class=3D"parameter-type">                        integer         =
       =20
          </TD>
    <TD class=3D"parameter-annotations">
      <P>None.</P></TD></TR>
  <TR>
    <TD class=3D"parameter-name">DeviceErrorDescription</TD>
    <TD class=3D"parameter-documentation">
      <P></P></TD>
    <TD class=3D"parameter-type">                        string          =
       =20
         </TD>
    <TD class=3D"parameter-annotations">
      <P>None.</P></TD></TR>
  <TR>
    <TD class=3D"parameter-name">DeviceErrorCodes</TD>
    <TD class=3D"parameter-documentation">
      <P></P></TD>
    <TD class=3D"parameter-type">                                =
Collection of=20
      string                     </TD>
    <TD class=3D"parameter-annotations">
      <P>None.</P></TD></TR>
  <TR>
    <TD class=3D"parameter-name">PrinterQueuePosition</TD>
    <TD class=3D"parameter-documentation">
      <P></P></TD>
    <TD class=3D"parameter-type">                        integer         =
       =20
          </TD>
    <TD class=3D"parameter-annotations">
      <P>None.</P></TD></TR>
  <TR>
    <TD class=3D"parameter-name">CardMailerPrinted</TD>
    <TD class=3D"parameter-documentation">
      <P></P></TD>
    <TD class=3D"parameter-type">                        boolean         =
       =20
          </TD>
    <TD class=3D"parameter-annotations">
      <P>None.</P></TD></TR>
  <TR>
    <TD class=3D"parameter-name">PINMailerPrinted</TD>
    <TD class=3D"parameter-documentation">
      <P></P></TD>
    <TD class=3D"parameter-type">                        boolean         =
       =20
          </TD>
    <TD class=3D"parameter-annotations">
      <P>None.</P></TD></TR>
  <TR>
    <TD class=3D"parameter-name">Track1Data</TD>
    <TD class=3D"parameter-documentation">
      <P></P></TD>
    <TD class=3D"parameter-type">                        string          =
       =20
         </TD>
    <TD class=3D"parameter-annotations">
      <P>None.</P></TD></TR>
  <TR>
    <TD class=3D"parameter-name">Track2Data</TD>
    <TD class=3D"parameter-documentation">
      <P></P></TD>
    <TD class=3D"parameter-type">                        string          =
       =20
         </TD>
    <TD class=3D"parameter-annotations">
      <P>None.</P></TD></TR>
  <TR>
    <TD class=3D"parameter-name">Track3Data</TD>
    <TD class=3D"parameter-documentation">
      <P></P></TD>
    <TD class=3D"parameter-type">                        string          =
       =20
         </TD>
    <TD class=3D"parameter-annotations">
      <P>None.</P></TD></TR>
  <TR>
    <TD class=3D"parameter-name">RequestedTrackItem</TD>
    <TD class=3D"parameter-documentation">
      <P></P></TD>
    <TD class=3D"parameter-type">                        string          =
       =20
         </TD>
    <TD class=3D"parameter-annotations">
      <P>None.</P></TD></TR></TBODY></TABLE>
<H3>Response body formats</H3>
<DIV>
<H4 class=3D"sample-header">application/json, text/json</H4>
<DIV class=3D"sample-content"><SPAN><B>Sample:</B></SPAN>=20
<PRE class=3D"wrapped">{=0A=
  "cardRequestID": "sample string 1",=0A=
  "status": 2,=0A=
  "pinOffset": "1234",=0A=
  "pvv": "5678",=0A=
  "errorID": 2,=0A=
  "errorDescription": "Error Description",=0A=
  "deviceErrorID": 3,=0A=
  "deviceErrorDescription": "Device Error Description",=0A=
  "deviceErrorCodes": [=0A=
    "155",=0A=
    "175"=0A=
  ],=0A=
  "printerQueuePosition": 4,=0A=
  "cardMailerPrinted": true,=0A=
  "pinMailerPrinted": true,=0A=
  "track1Data": "Track 1 Data",=0A=
  "track2Data": "Track 2 Data",=0A=
  "track3Data": "Track 3 Data",=0A=
  "requestedTrackItem": "Requested Track Item"=0A=
}=0A=
</PRE></DIV>
<H4 class=3D"sample-header">application/xml, text/xml</H4>
<DIV class=3D"sample-content"><SPAN><B>Sample:</B></SPAN>=20
<PRE class=3D"wrapped">&lt;CardRequestStatusModel =
xmlns:xsd=3D"http://www.w3.org/2001/XMLSchema" =
xmlns:xsi=3D"http://www.w3.org/2001/XMLSchema-instance"&gt;=0A=
  &lt;CardRequestID&gt;sample string 1&lt;/CardRequestID&gt;=0A=
  &lt;Status&gt;InPrinterQueue&lt;/Status&gt;=0A=
  &lt;PINOffset&gt;1234&lt;/PINOffset&gt;=0A=
  &lt;PVV&gt;5678&lt;/PVV&gt;=0A=
  &lt;ErrorID&gt;CardMailerPrintFail&lt;/ErrorID&gt;=0A=
  &lt;ErrorDescription&gt;Error Description&lt;/ErrorDescription&gt;=0A=
  &lt;DeviceErrorID&gt;3&lt;/DeviceErrorID&gt;=0A=
  &lt;DeviceErrorDescription&gt;Device Error =
Description&lt;/DeviceErrorDescription&gt;=0A=
  &lt;DeviceErrorCodes&gt;=0A=
    &lt;string&gt;155&lt;/string&gt;=0A=
    &lt;string&gt;175&lt;/string&gt;=0A=
  &lt;/DeviceErrorCodes&gt;=0A=
  &lt;PrinterQueuePosition&gt;4&lt;/PrinterQueuePosition&gt;=0A=
  &lt;CardMailerPrinted&gt;true&lt;/CardMailerPrinted&gt;=0A=
  &lt;PINMailerPrinted&gt;true&lt;/PINMailerPrinted&gt;=0A=
  &lt;Track1Data&gt;Track 1 Data&lt;/Track1Data&gt;=0A=
  &lt;Track2Data&gt;Track 2 Data&lt;/Track2Data&gt;=0A=
  &lt;Track3Data&gt;Track 3 Data&lt;/Track3Data&gt;=0A=
  &lt;RequestedTrackItem&gt;Requested Track =
Item&lt;/RequestedTrackItem&gt;=0A=
&lt;/CardRequestStatusModel&gt;=0A=
</PRE></DIV></DIV></DIV></SECTION></DIV><BR><BR><BR><BR>
<DIV class=3D"copyright">
<P>=C2=A9 2014-2018 Entrust Datacard Corporation. All rights =
reserved..<BR>          =20
     Datacard and CardWizard are registered trademarks and service marks =
of=20
Entrust Datacard Corporation in the United States and other countries.   =
       =20
  </P></DIV></DIV>
<SCRIPT =
src=3D"https://cardwizard-web:444/Scripts/jquery-2.0.3.js"></SCRIPT>
            =20
<SCRIPT =
src=3D"https://cardwizard-web:444/Scripts/panel_boxes.js"></SCRIPT>
     </BODY></HTML>

------=_NextPart_000_00AA_01D3A745.B2D630C0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://cardwizard-web:444/Content/images/logo_cardwizard.png

iVBORw0KGgoAAAANSUhEUgAAAIIAAAARCAYAAAAR8XQQAAAACXBIWXMAAAsTAAALEwEAmpwYAAAK
T2lDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVNnVFPpFj333vRCS4iAlEtvUhUIIFJCi4AU
kSYqIQkQSoghodkVUcERRUUEG8igiAOOjoCMFVEsDIoK2AfkIaKOg6OIisr74Xuja9a89+bN/rXX
Pues852zzwfACAyWSDNRNYAMqUIeEeCDx8TG4eQuQIEKJHAAEAizZCFz/SMBAPh+PDwrIsAHvgAB
eNMLCADATZvAMByH/w/qQplcAYCEAcB0kThLCIAUAEB6jkKmAEBGAYCdmCZTAKAEAGDLY2LjAFAt
AGAnf+bTAICd+Jl7AQBblCEVAaCRACATZYhEAGg7AKzPVopFAFgwABRmS8Q5ANgtADBJV2ZIALC3
AMDOEAuyAAgMADBRiIUpAAR7AGDIIyN4AISZABRG8lc88SuuEOcqAAB4mbI8uSQ5RYFbCC1xB1dX
Lh4ozkkXKxQ2YQJhmkAuwnmZGTKBNA/g88wAAKCRFRHgg/P9eM4Ors7ONo62Dl8t6r8G/yJiYuP+
5c+rcEAAAOF0ftH+LC+zGoA7BoBt/qIl7gRoXgugdfeLZrIPQLUAoOnaV/Nw+H48PEWhkLnZ2eXk
5NhKxEJbYcpXff5nwl/AV/1s+X48/Pf14L7iJIEyXYFHBPjgwsz0TKUcz5IJhGLc5o9H/LcL//wd
0yLESWK5WCoU41EScY5EmozzMqUiiUKSKcUl0v9k4t8s+wM+3zUAsGo+AXuRLahdYwP2SycQWHTA
4vcAAPK7b8HUKAgDgGiD4c93/+8//UegJQCAZkmScQAAXkQkLlTKsz/HCAAARKCBKrBBG/TBGCzA
BhzBBdzBC/xgNoRCJMTCQhBCCmSAHHJgKayCQiiGzbAdKmAv1EAdNMBRaIaTcA4uwlW4Dj1wD/ph
CJ7BKLyBCQRByAgTYSHaiAFiilgjjggXmYX4IcFIBBKLJCDJiBRRIkuRNUgxUopUIFVIHfI9cgI5
h1xGupE7yAAygvyGvEcxlIGyUT3UDLVDuag3GoRGogvQZHQxmo8WoJvQcrQaPYw2oefQq2gP2o8+
Q8cwwOgYBzPEbDAuxsNCsTgsCZNjy7EirAyrxhqwVqwDu4n1Y8+xdwQSgUXACTYEd0IgYR5BSFhM
WE7YSKggHCQ0EdoJNwkDhFHCJyKTqEu0JroR+cQYYjIxh1hILCPWEo8TLxB7iEPENyQSiUMyJ7mQ
AkmxpFTSEtJG0m5SI+ksqZs0SBojk8naZGuyBzmULCAryIXkneTD5DPkG+Qh8lsKnWJAcaT4U+Io
UspqShnlEOU05QZlmDJBVaOaUt2ooVQRNY9aQq2htlKvUYeoEzR1mjnNgxZJS6WtopXTGmgXaPdp
r+h0uhHdlR5Ol9BX0svpR+iX6AP0dwwNhhWDx4hnKBmbGAcYZxl3GK+YTKYZ04sZx1QwNzHrmOeZ
D5lvVVgqtip8FZHKCpVKlSaVGyovVKmqpqreqgtV81XLVI+pXlN9rkZVM1PjqQnUlqtVqp1Q61Mb
U2epO6iHqmeob1Q/pH5Z/YkGWcNMw09DpFGgsV/jvMYgC2MZs3gsIWsNq4Z1gTXEJrHN2Xx2KruY
/R27iz2qqaE5QzNKM1ezUvOUZj8H45hx+Jx0TgnnKKeX836K3hTvKeIpG6Y0TLkxZVxrqpaXllir
SKtRq0frvTau7aedpr1Fu1n7gQ5Bx0onXCdHZ4/OBZ3nU9lT3acKpxZNPTr1ri6qa6UbobtEd79u
p+6Ynr5egJ5Mb6feeb3n+hx9L/1U/W36p/VHDFgGswwkBtsMzhg8xTVxbzwdL8fb8VFDXcNAQ6Vh
lWGX4YSRudE8o9VGjUYPjGnGXOMk423GbcajJgYmISZLTepN7ppSTbmmKaY7TDtMx83MzaLN1pk1
mz0x1zLnm+eb15vft2BaeFostqi2uGVJsuRaplnutrxuhVo5WaVYVVpds0atna0l1rutu6cRp7lO
k06rntZnw7Dxtsm2qbcZsOXYBtuutm22fWFnYhdnt8Wuw+6TvZN9un2N/T0HDYfZDqsdWh1+c7Ry
FDpWOt6azpzuP33F9JbpL2dYzxDP2DPjthPLKcRpnVOb00dnF2e5c4PziIuJS4LLLpc+Lpsbxt3I
veRKdPVxXeF60vWdm7Obwu2o26/uNu5p7ofcn8w0nymeWTNz0MPIQ+BR5dE/C5+VMGvfrH5PQ0+B
Z7XnIy9jL5FXrdewt6V3qvdh7xc+9j5yn+M+4zw33jLeWV/MN8C3yLfLT8Nvnl+F30N/I/9k/3r/
0QCngCUBZwOJgUGBWwL7+Hp8Ib+OPzrbZfay2e1BjKC5QRVBj4KtguXBrSFoyOyQrSH355jOkc5p
DoVQfujW0Adh5mGLw34MJ4WHhVeGP45wiFga0TGXNXfR3ENz30T6RJZE3ptnMU85ry1KNSo+qi5q
PNo3ujS6P8YuZlnM1VidWElsSxw5LiquNm5svt/87fOH4p3iC+N7F5gvyF1weaHOwvSFpxapLhIs
OpZATIhOOJTwQRAqqBaMJfITdyWOCnnCHcJnIi/RNtGI2ENcKh5O8kgqTXqS7JG8NXkkxTOlLOW5
hCepkLxMDUzdmzqeFpp2IG0yPTq9MYOSkZBxQqohTZO2Z+pn5mZ2y6xlhbL+xW6Lty8elQfJa7OQ
rAVZLQq2QqboVFoo1yoHsmdlV2a/zYnKOZarnivN7cyzytuQN5zvn//tEsIS4ZK2pYZLVy0dWOa9
rGo5sjxxedsK4xUFK4ZWBqw8uIq2Km3VT6vtV5eufr0mek1rgV7ByoLBtQFr6wtVCuWFfevc1+1d
T1gvWd+1YfqGnRs+FYmKrhTbF5cVf9go3HjlG4dvyr+Z3JS0qavEuWTPZtJm6ebeLZ5bDpaql+aX
Dm4N2dq0Dd9WtO319kXbL5fNKNu7g7ZDuaO/PLi8ZafJzs07P1SkVPRU+lQ27tLdtWHX+G7R7ht7
vPY07NXbW7z3/T7JvttVAVVN1WbVZftJ+7P3P66Jqun4lvttXa1ObXHtxwPSA/0HIw6217nU1R3S
PVRSj9Yr60cOxx++/p3vdy0NNg1VjZzG4iNwRHnk6fcJ3/ceDTradox7rOEH0x92HWcdL2pCmvKa
RptTmvtbYlu6T8w+0dbq3nr8R9sfD5w0PFl5SvNUyWna6YLTk2fyz4ydlZ19fi753GDborZ752PO
32oPb++6EHTh0kX/i+c7vDvOXPK4dPKy2+UTV7hXmq86X23qdOo8/pPTT8e7nLuarrlca7nuer21
e2b36RueN87d9L158Rb/1tWeOT3dvfN6b/fF9/XfFt1+cif9zsu72Xcn7q28T7xf9EDtQdlD3YfV
P1v+3Njv3H9qwHeg89HcR/cGhYPP/pH1jw9DBY+Zj8uGDYbrnjg+OTniP3L96fynQ89kzyaeF/6i
/suuFxYvfvjV69fO0ZjRoZfyl5O/bXyl/erA6xmv28bCxh6+yXgzMV70VvvtwXfcdx3vo98PT+R8
IH8o/2j5sfVT0Kf7kxmTk/8EA5jz/GMzLdsAAAAgY0hSTQAAeiUAAICDAAD5/wAAgOkAAHUwAADq
YAAAOpgAABdvkl/FRgAABn9JREFUeNrsmnmIl0UYxz9bZllpmV10GZvdmuZmZmTYQdotHVBZKURU
RGDRQRBlBtJFREU33ZZZlFlp92Waaanbrh26mmVp19oaWVnitz/6vvQw/N5jbY3+6IFhZp555pl3
Zp55nmeeeesk0U7YEzgY6Af0BXYElgGfAJ8CtwFrWTfYCtgcWA78wf/w74GkKmk/SbdKWqy/oEnS
1ZIGSepUkUdRapA0U3/DKkk31eB9uKQ2pxWSNkva25K0UNIDknYMNOMTmq8kTZF0lNs7S/rBbQND
v9uNuyHghhrXlPC+0/VDanxTlqYl335CaPs2mfsuSd8VkuZLukXSloHui4SuRdJjkvZy+xBJD0ua
JOnJOH4VAXgpbNDT3jQ6MPWQ1KracFNCe0XSPjhpz4MlkrqbZlIB3XDTzHf9vMB7tnHTA+4S46Ym
vB8KC58H85JvH5u07x/adi3g834QmrYcmpWS6i00oyXNkPRhHH+DAmUxBpgDDAV+Ao4HTgE+7GCl
NMImYQ0wBOgGPOq2C4FNAu3+Sd8BOTwvcdvFgICewAUJzfPmd4JNG8DVzuc67+u8E9DH5f6uA+zt
vDnnOz7wGFkaALS6rSWhbUjqB+TwPA04CLje9QOBkxKaazzeecDvXtPRLn8M3Ak8WGYaNpQ0MZGo
oztYC8R0t8d4PeD2DWP3D/iFxjU7fyJHIwwPuHeMm5xzapF0vnFrJXUJJz1T332S9ehn/DTXRxbw
jmlUzolH0jfJ3O7L0QjZ2HWSvjbulkQjjAp9HzFuVtE+1NIIdwGnhvoCYOp6dFOyE/9DwH0BvO2U
OZ5dgV4uP1xyaiJkfDcuoPnMeR3QHZjn+n7O++Voon2cN1X4jk7AVS4/F7QOwPbAdsncGsrcO2BF
soZFc9umiFkqCMcC55bQdDRs4fzXgPvZZmJI2JTMLHwPTHG5lzcuDzqHfosK6H5M+mSb1A3YNfCY
EdTx1jZpa31jKoMzgd1cvjbHLCwB3glC2KWAXw+gPsfMRFgVhLyyIFxag6YXcOh6FIS6inTZYn1k
Kf+tQCucA9wLzPJGEvyOKvCjtVK2IZlGeChohEwbLE6EuL3aIPM7sNA3W7g2DD5KhMuA+z23TYHV
wMR/ugmpIByUQ/c8cPa/oB2KIDuVjXYsmwsE4Thrtr5eqPOB99o53txEEOQFXw30Dt/T9A+1QTq3
VcDCAmf4DAt6PbDSDvxXHS0Ieaezm23XYuA6q+xdjM/sb2/gRGCcbxszgtrvCGgIpybmtRbryXBK
BIxfh/EyQTje5qfFC9/k0zqi5MZQSxtMraENojA3VpjbPcDrLrcCL3TE4qaC8EoJfU9P6k2rzpXA
W8AOVtmTgCst4YPMr0wYfna+UcBtZF6TgIFWgXuFq9E8b1DeYk0ALrKK3cQaoorDGmFe8AdifU4y
blM7tMHYnGjqzi7f4HGOKJjb3UGw6is4lZ3WRRAuDxtTFXoDn9v2pXAg8G6Jx7o6aJ3oCJ3o1N3q
OfvW3azyMy97J3vdKXwHTHf51JI5bBvKKxONQPBNauHnV9QGLwMzCzQdwO6e29YhnN+1Rp/3gaUV
57ZNDWe8VBA+9elpbYcg9PBG3FYgKG/kbBbBvvW3xw4wOLQvCou1CDjMaViF4MtTzo8u8MDrgLNc
XhFuEEuTdWhMNAJ+D1lQURuMKTF5zWFuw8O3NeRcHZ+tIAib+TCV3SxyQ8w7OQBTFY50v5kFNC3m
m441INDMlnSPpJ/CmwaS7nf98aRvFmAamxNQ2sFBIkk6OQn6fCnpBUkLQr87Ev6vhraexnWRtMa4
xoQ+DSi95vqvbotpvGkmmObenADTZTkBpcE1gm5ZQGmOnwa+DTSnFwWUyqJ+QyS9UUEQRodHIZUI
Q32NccbVoI2PPnPCosR+2SJOKYgszjBuQslbw1RJXRP+N4Zvifgm48eXCMJbBWvRlgjzBQmvF42f
mCMIG0haZtx1BW8NayTdXBbhrav4DN0bGOWrSs8a7Q/4SoO92GNr0Kz1NXRMcLzSq+sx9hWW2PNf
Hq5Mne2YLknUah+/hTzjb8Sm6MvgcO3ra9lTwOG+8WTwi9XyxzlP7oNsMiYH/BF28JqSt5eMd4t9
o2EFJvF34HFgpE3Aq8DXoX2g3zJa7ZyfYvzkEFE8zPux3D7IGcG8ArQ53rCsNJizDv8j7OEAU4OD
KvV2Fg8NDk+jP2KpN30a8Brwzf8P//9N+HMAqIPEZWuSa/EAAAAASUVORK5CYII=

------=_NextPart_000_00AA_01D3A745.B2D630C0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://cardwizard-web:444/Content/images/logo_datacard.png

iVBORw0KGgoAAAANSUhEUgAAADcAAAAPCAYAAABA8leGAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAu9JREFUeNrUltlLVFEcx+/MODozTWVmqdWYLSZYttGiZYSFUVFYRkQP
Bf0H/Q899dRD/0BvRY9J0EIPpVIRSaBGi4ktk2Valns4Tt8DnwuHGzNzKcE68OHMnPW3nxtIp9O1
juPUibCYEdMiKCbEJ9Epepz/px0Ta0UyIOXMQAM8ES0s2iy2ihXikbjj8/Aq8XKOFTxvHBPkzyT9
jLXgmbgq3ot6sdvHoTvE/n/FhXk55k1ototVYiO/o3h5qRglbI2ntomDYkw0ij7RL/aJxeI7EfDR
Ot/sWScCGLOb8eUYMyKGxH1RILaLFGevFgvFdfab9Fov3vLfCfowwCsEM8oUiiNimbgmfojjnGPi
e5h+FE6LGBFgLmy2zj2EYg/ElDiJAePs+yZuiBLuNEqOiD3W3mqREOfob3J/oV/lXA+GULAUwU0o
DyC8EeqpGGf8IV4rQkgzNsj+eeTlJjzygd4YcD5ropw1DKXIMUjfKy6LKxQPc89d7mzDCDnD0m1h
LNKDJ6PkYQ3zoQz7LqJ8A1Z2KFBVGCjJ2Bdxydp3ASWPinKR7zl3hL6PHB/CiG79mPbruSXE9gAF
Z404S/i05dhby9qfossaj3F3JMO+A6JJvBDvctwRd3PM2/wotwsPd7D+BBX0Vo59MQpLN4XIblOE
UqU1FiGfqokKY7jXPuQzhlsEWZXL9wh3WGyhIpo8KsNScdZUZrm0hnAuQPCV1pz7Du7lPTUKnSK0
KixZiihe2VovkVVHISnmzt9yzpTXMxxcQizfE63MJ8mPDQj7Oculz/FEPQbq98y1I1Az5f0xoZvi
46GJIjOGoTO1VvJ4J09WiPrguF8oMUqp21JZPrmCVMc3JG45YTrOGQErT+JUs06smWBugvkohuqy
xhw8UUbOFeNBt5CVY+CvHrkqeE87iKhxV7k/beaiBZkSeo7b5N8qZysZJ8fyCOt8/ttjYavP86xx
mQ1DmShqmS3lZrMleMz9GCqcwTi3TZX+JcAAAmG4+xaEj3cAAAAASUVORK5CYII=

------=_NextPart_000_00AA_01D3A745.B2D630C0
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cardwizard-web:444/Content/normalize.css

article {
	display: block;
}
aside {
	display: block;
}
details {
	display: block;
}
figcaption {
	display: block;
}
figure {
	display: block;
}
footer {
	display: block;
}
header {
	display: block;
}
hgroup {
	display: block;
}
main {
	display: block;
}
nav {
	display: block;
}
section {
	display: block;
}
summary {
	display: block;
}
audio {
	display: inline-block;
}
canvas {
	display: inline-block;
}
video {
	display: inline-block;
}
audio:not([controls]) {
	height: 0px; display: none;
}
[hidden] {
	display: none;
}
html {
	background: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: =
sans-serif; -ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%;
}
body {
	margin: 0px;
}
a:focus {
	outline: dotted thin;
}
a:active {
	outline: 0px;
}
a:hover {
	outline: 0px;
}
h1 {
	margin: 0.67em 0px; font-size: 2em;
}
abbr[title] {
	border-bottom-color: currentColor; border-bottom-width: 1px; =
border-bottom-style: dotted;
}
b {
	font-weight: bold;
}
strong {
	font-weight: bold;
}
dfn {
	font-style: italic;
}
hr {
	height: 0px; box-sizing: content-box; -moz-box-sizing: content-box;
}
mark {
	background: rgb(255, 255, 0); color: rgb(0, 0, 0);
}
code {
	font-family: monospace, serif; font-size: 1em;
}
kbd {
	font-family: monospace, serif; font-size: 1em;
}
pre {
	font-family: monospace, serif; font-size: 1em;
}
samp {
	font-family: monospace, serif; font-size: 1em;
}
pre {
	white-space: pre-wrap;
}
q {
	quotes: "=93" "=94" "=91" "=92";
}
small {
	font-size: 80%;
}
sub {
	line-height: 0; font-size: 75%; vertical-align: baseline; position: =
relative;
}
sup {
	line-height: 0; font-size: 75%; vertical-align: baseline; position: =
relative;
}
sup {
	top: -0.5em;
}
sub {
	bottom: -0.25em;
}
img {
	border: 0px currentColor; border-image: none;
}
svg:not(:root) {
	overflow: hidden;
}
figure {
	margin: 0px;
}
fieldset {
	margin: 0px 2px; padding: 0.35em 0.62em 0.75em; border: 1px solid =
rgb(192, 192, 192); border-image: none;
}
legend {
	padding: 0px; border: 0px currentColor; border-image: none;
}
button {
	margin: 0px; font-family: inherit; font-size: 100%;
}
input {
	margin: 0px; font-family: inherit; font-size: 100%;
}
select {
	margin: 0px; font-family: inherit; font-size: 100%;
}
textarea {
	margin: 0px; font-family: inherit; font-size: 100%;
}
button {
	line-height: normal;
}
input {
	line-height: normal;
}
button {
	text-transform: none;
}
select {
	text-transform: none;
}
button {
	cursor: pointer; -webkit-appearance: button;
}
html input[type=3D'button'] {
	cursor: pointer; -webkit-appearance: button;
}
input[type=3D'reset'] {
	cursor: pointer; -webkit-appearance: button;
}
input[type=3D'submit'] {
	cursor: pointer; -webkit-appearance: button;
}
button[disabled] {
	cursor: default;
}
html input[disabled] {
	cursor: default;
}
input[type=3D'checkbox'] {
	padding: 0px; box-sizing: border-box;
}
input[type=3D'radio'] {
	padding: 0px; box-sizing: border-box;
}
input[type=3D'search'] {
	box-sizing: content-box; -moz-box-sizing: content-box; =
-webkit-appearance: textfield; -webkit-box-sizing: content-box;
}
textarea {
	overflow: auto; vertical-align: top;
}
table {
	border-collapse: collapse; border-spacing: 0;
}

------=_NextPart_000_00AA_01D3A745.B2D630C0
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cardwizard-web:444/Content/typography.css

@font-face {
	font-family: AlternateGotNo3D;
	src: url(../Content/fonts/alternategotno3d-webfont.eot?) format("eot"), =
url(../Content/fonts/alternategotno3d-webfont.woff) format("woff"), =
url(../Content/fonts/alternategotno3d-webfont.ttf) format("truetype");
}
p {
	font: 13px/1.45em "Helvetica Neue", "Arial", sans-serif; margin: 0px =
0px 7px; padding: 0px 0px 7px; font-size-adjust: none; font-stretch: =
normal;
}
.modal h2 {
	background: linear-gradient(rgb(65, 126, 219) 0%, rgb(25, 53, 124) =
100%) rgb(39, 78, 157); font: 500 19px/1.2em "AlternateGotNo3D", =
"Arial", "Helvetica", sans-serif; margin: 0px; padding: 12px 13px 10px; =
border-radius: 4px 4px 0px 0px; color: rgb(255, 255, 255); =
text-transform: uppercase; font-size-adjust: none; font-stretch: normal; =
box-shadow: 0px 2px 1px rgba(0,0,0,0.3);
}
.panel_box h3 {
	background: rgb(239, 239, 239); font: 700 13px/1.2em "Arial", =
"Helvetica", sans-serif; margin: 0px; padding: 10px 7px; border-radius: =
4px; color: rgb(68, 68, 68); text-transform: none; font-size-adjust: =
none; font-stretch: normal;
}
h4 {
	font: bold 14px/1.2em "Helvetica Neue", "Arial", sans-serif; margin: =
0px; padding: 10px 0px 0px; color: rgb(85, 85, 85); font-size-adjust: =
none; font-stretch: normal;
}
h5 {
	font: 14px/1.2em "Helvetica Neue", "Arial", sans-serif; margin: 0px; =
padding: 10px 0px 0px; color: rgb(85, 85, 85); font-size-adjust: none; =
font-stretch: normal;
}
h6 {
	font: bold 13px/1.2em "Helvetica Neue", "Arial", sans-serif; margin: =
0px; padding: 10px 0px 0px; color: rgb(136, 136, 136); font-size-adjust: =
none; font-stretch: normal;
}
.pageTitle {
	background: url("images/pageTitleBG.jpg") left top; margin: 0px; =
padding: 1px 0px 0px; height: 49px;
}
.pageTitle p {
	font: 20px/1.2em "Helvetica Neue", "Arial", "Helvetica", sans-serif; =
margin: 13px; padding: 0px; color: rgb(255, 255, 255); font-size-adjust: =
none; font-stretch: normal;
}
.formLabel {
	font: 12px/1.25em "Helvetica Neue", "Arial", sans-serif; text-align: =
right; color: rgb(63, 63, 63); font-size-adjust: none; font-stretch: =
normal;
}
.textNote {
	font: 12px/1.25em "Helvetica Neue", "Arial", sans-serif; color: =
rgb(136, 136, 136); padding-top: 0px; margin-top: 0px; font-size-adjust: =
none; font-stretch: normal;
}
.link {
	color: rgb(52, 128, 211);
}
.linkHover {
	color: rgb(52, 128, 211); text-decoration: underline;
}

------=_NextPart_000_00AA_01D3A745.B2D630C0
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cardwizard-web:444/Content/main.css

.wrap::before {
	display: table; content: " ";
}
.wrap::after {
	display: table; content: " ";
}
.wrap::after {
	clear: both;
}
hr {
	border-width: 1px 0px 0px; border-style: solid none none; border-color: =
rgb(204, 204, 204) currentColor currentColor; margin: 20px 0px; =
border-image: none;
}
h3 {
	color: rgb(0, 81, 149);
}
.masthead {
	background: url("images/bg_masthead.png") -180px -85px rgb(106, 192, =
229); font: 500 20px/1em "Arial", "Helvetica", sand-serif; padding: 20px =
20px 17px; left: 0px; top: 40px; right: 0px; color: rgb(255, 255, 255); =
position: fixed; z-index: 4; font-size-adjust: none; font-stretch: =
normal;
}
.masthead .logo {
	float: right;
}
.content_pane {
	font: 500 13px/1.4em "Arial", "Helvetica", sand-serif; margin: 97px =
20px 60px; padding: 5px; color: rgb(84, 84, 84); position: relative; =
font-size-adjust: none; font-stretch: normal;
}
.copyright .logo {
	float: right;
}
.bg {
	left: 0px; top: 0px; width: 100%; height: 100%; position: absolute; =
z-index: -5000;
}
.html {
	height: 100%;
}
.item_detail {
	border-width: 0px 1px 1px; border-style: solid; border-color: rgb(204, =
204, 204); border-image: none;
}
.item_detail h3 {
	padding: 0px 0px 0px 10px;
}
.item_detail .detail_info {
	float: left;
}
.item_detail .card {
	padding: 10px; float: right;
}
.action_bar {
	background: rgb(242, 242, 242); padding: 15px 20px; left: 225px; =
height: 30px; right: 0px; bottom: 0px; border-top-color: rgb(213, 215, =
223); border-top-width: 1px; border-top-style: solid; position: fixed;
}
.action_bar button {
	float: left;
}
.action_bar .printer {
	background: rgb(248, 248, 248); font: 500 12px/1.2em "Arial", =
"Helvetica", sand-serif; padding: 8px 12px 4px; border-radius: 4px; =
border: 1px solid rgb(212, 212, 212); border-image: none; width: 340px; =
color: rgb(68, 68, 68); float: right; font-size-adjust: none; =
font-stretch: normal; box-shadow: inset 0px 1px 1px rgba(0,0,0,0.3), 0px =
1px #fff;
}
.action_bar img {
	padding: 0px 10px 2px 0px; vertical-align: middle;
}
.action_bar .status {
	font-weight: bold;
}
.action_bar .good.status {
	color: rgb(55, 164, 12);
}
.action_bar .bad.status {
	color: rgb(210, 7, 11);
}
.action_bar a {
	color: rgb(68, 68, 68); text-decoration: underline; float: right;
}
a {
	color: rgb(0, 81, 149); text-decoration: none;
}
a:hover {
	text-decoration: underline;
}
a:visited {
=09
}

------=_NextPart_000_00AA_01D3A745.B2D630C0
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cardwizard-web:444/Content/buttons.css

button {
	border-width: 1px; border-style: solid; border-color: rgb(204, 204, =
204) rgb(102, 102, 102) rgb(102, 102, 102) rgb(204, 204, 204); font: 500 =
13px/1.2em "Arial", "Helvetica", sand-serif; border-radius: 4px; width: =
125px; height: 25px; color: rgb(71, 71, 71); margin-right: 10px; =
font-size-adjust: none; font-stretch: normal; background-color: rgb(246, =
246, 246);
}
.button_bg {
	background: linear-gradient(rgb(250, 250, 250) 18%, rgb(224, 224, 224) =
59%) rgb(246, 246, 246);
}
.button_bg:active {
	background: linear-gradient(rgb(224, 224, 224) 42%, rgb(250, 250, 250) =
87%) rgb(224, 224, 224); border-color: rgb(102, 102, 102) rgb(204, 204, =
204) rgb(204, 204, 204) rgb(102, 102, 102);
}
.button_bg_primary {
	background: linear-gradient(rgb(255, 238, 204) 42%, rgb(246, 190, 86) =
71%) rgb(245, 200, 116);
}
.button_bg_primary:active {
	background: rgb(246, 190, 86); border-color: rgb(102, 102, 102) =
rgb(204, 204, 204) rgb(204, 204, 204);
}
.button_bg:hover {
	border-color: rgb(78, 128, 183) rgb(1, 43, 88) rgb(1, 43, 88) rgb(78, =
128, 183);
}
.button_bg_primary:hover {
	border-color: rgb(78, 128, 183) rgb(1, 43, 88) rgb(1, 43, 88) rgb(78, =
128, 183);
}
[disabled].button_bg {
	border: 1px solid rgb(204, 204, 204); border-image: none; color: =
rgb(204, 204, 204); filter: none; background-image: none; =
background-color: rgb(246, 246, 246);
}
[disabled].button_bg:active {
	border: 1px solid rgb(204, 204, 204); border-image: none; color: =
rgb(204, 204, 204); filter: none; background-image: none; =
background-color: rgb(246, 246, 246);
}
button.img {
	padding-top: 5px;
}
button.img img {
	float: left;
}
button.big {
	width: 150px; height: 30px;
}

------=_NextPart_000_00AA_01D3A745.B2D630C0
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cardwizard-web:444/Content/color.css

.white {
	background-color: rgb(255, 255, 255);
}
.lightGrey {
	background-color: rgb(242, 242, 242);
}
.mediumGrey {
	background-color: rgb(134, 134, 134);
}
.mediumDarkGrey {
	background-color: rgb(77, 77, 77);
}
.darkGrey {
	background-color: rgb(63, 63, 63);
}
.black {
	background-color: rgb(0, 0, 0);
}
.brightBlue {
	background-color: rgb(17, 192, 227);
}
.applicationBarGradient {
	background: linear-gradient(rgb(65, 126, 219) 0%, rgb(25, 53, 124) =
100%) rgb(39, 78, 157);
}
.iconGradient {
	background: linear-gradient(rgb(70, 127, 187) 0%, rgb(0, 56, 120) 100%) =
rgb(39, 78, 157);
}
.accordionGradient {
	background: linear-gradient(rgb(235, 235, 235) 0%, rgb(202, 202, 202) =
100%) rgb(217, 217, 217);
}
.panelBoxGradient {
	background: linear-gradient(rgb(242, 242, 242) 0%, rgb(231, 231, 231) =
100%) rgb(239, 239, 239);
}
.yellowButtonGradient {
	background: linear-gradient(rgb(255, 238, 204) 42%, rgb(246, 190, 86) =
71%) rgb(245, 200, 116);
}
.block {
	margin: 0px 10px 0px 0px; width: 290px; height: 50px; float: left;
}
.blockBorder {
	margin: 0px 10px 0px 0px; border: 1px solid rgb(221, 221, 221); =
border-image: none; width: 290px; height: 50px; float: left;
}
.textNote {
	margin: -10px 0px 0px; width: 290px; padding-top: 0px; float: left;
}
.clear {
	clear: both;
}

------=_NextPart_000_00AA_01D3A745.B2D630C0
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cardwizard-web:444/Content/panel_boxes.css

.panel_box {
	font: 500 13px/1.2em "Arial", "Helvetica", sand-serif; border-radius: =
4px; border: 1px solid rgb(217, 217, 217); border-image: none; color: =
rgb(68, 68, 68); font-size-adjust: none; font-stretch: normal;
}
.panel_box h3 {
	background: linear-gradient(rgb(242, 242, 242) 0%, rgb(231, 231, 231) =
100%) rgb(239, 239, 239); margin: 0px; padding: 10px 7px; border-radius: =
4px; font-size: 13px; font-weight: 700; cursor: pointer;
}
.panel_box .control {
	width: 20px; height: 15px; float: left; background-image: =
url("images/icon_panel_box_open.png");
}
.panel_box .icon_help {
	float: right;
}
.panel_box .content {
	display: none; position: relative;
}
.open .content {
	display: block;
}
.panel_box .text {
	padding: 0px 10px;
}
.open.panel_box {
	border-radius: 4px 4px 0px 0px; border-bottom-color: rgb(217, 217, =
217); border-bottom-width: 1px; border-bottom-style: solid;
}
.open.panel_box h3 {
	border-radius: 4px 4px 0px 0px; border-bottom-color: rgb(217, 217, =
217); border-bottom-width: 1px; border-bottom-style: solid;
}
.open.panel_box .control {
	background-image: url("images/icon_panel_box_close.png");
}

------=_NextPart_000_00AA_01D3A745.B2D630C0
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cardwizard-web:444/Content/form_layout.css

div.form-group {
	padding: 10px 0px; width: 500px; margin-top: 20px; border-top-color: =
rgb(217, 217, 217); border-top-width: 1px; border-top-style: solid;
}
div.form-group-logon {
	width: 625px; text-align: right; margin-top: 20px;
}
div.form-group h3 {
	font: 700 14px/1.2em "Arial", "Helvetica", sand-serif; color: rgb(51, =
51, 51); font-size-adjust: none; font-stretch: normal;
}
div.form-group p.description {
	font: 500 12px/1.2em "Arial", "Helvetica", sand-serif; color: rgb(153, =
153, 153); font-size-adjust: none; font-stretch: normal;
}
div.f-block {
	margin: 10px 0px;
}
label {
	font: 500 13px/1.2em "Arial", "Helvetica", sand-serif; margin: 12px 5px =
3px 0px; width: 150px; text-align: right; color: rgb(110, 120, 129); =
display: inline-block; font-size-adjust: none; font-stretch: normal;
}
label.textarea {
	height: 200px; vertical-align: top;
}
.label-disabled {
	color: rgb(207, 211, 215);
}
input {
	font: 500 13px/1.2em "Arial", "Helvetica", sand-serif; margin: 1px; =
padding: 2px 5px; border-radius: 4px; border: 1px solid rgb(141, 161, =
184); border-image: none; width: 200px; height: 25px; display: =
inline-block; font-size-adjust: none; font-stretch: normal;
}
input:focus {
	border-width: 2px; border-color: rgb(104, 165, 219); margin: 0px;
}
input:disabled {
	border: 1px solid rgb(207, 211, 215); border-image: none;
}
input.highlight {
	border-color: rgb(240, 0, 0);
}
input[type=3D'checkbox'] {
	margin: 3px 0px; border: 0px currentColor; border-image: none; top: =
1px; width: 20px; height: 15px; position: relative;
}
select {
	background: none; font: 500 13px/1.2em "Arial", "Helvetica", =
sand-serif; padding: 2px; border-radius: 4px; border: 1px solid rgb(141, =
161, 184); border-image: none; height: 25px; font-size-adjust: none; =
font-stretch: normal;
}
select.logon {
	background: none; font: 500 13px/1.2em "Arial", "Helvetica", =
sand-serif; margin: 1px; padding: 2px 5px; border-radius: 4px; border: =
1px solid rgb(141, 161, 184); border-image: none; width: 212px; height: =
25px; font-size-adjust: none; font-stretch: normal;
}
option {
	padding: 3px;
}
textarea {
	font: 500 13px/1.2em "Arial", "Helvetica", sand-serif; margin: 7px 1px =
1px; padding: 5px; border-radius: 4px; border: 1px solid rgb(141, 161, =
184); border-image: none; width: 325px; height: 200px; color: rgb(51, =
51, 51); display: inline-block; font-size-adjust: none; font-stretch: =
normal;
}
textarea:focus {
	border-width: 2px; border-color: rgb(104, 165, 219); margin: 6px 0px =
0px;
}
.text {
	font: 500 13px/1.2em "Arial", "Helvetica", sand-serif; color: rgb(110, =
120, 129); font-size-adjust: none; font-stretch: normal;
}
.tip {
	font: 500 13px/1.2em "Arial", "Helvetica", sand-serif; width: 16px; =
height: 16px; color: rgb(153, 153, 153); display: inline-block; cursor: =
pointer; font-size-adjust: none; font-stretch: normal;
}
.tip img {
	margin-top: -3px; vertical-align: middle;
}
.tip_tip {
	background: rgb(235, 243, 251); font: 500 13px/1.2em "Arial", =
"Helvetica", sand-serif; padding: 10px; border-radius: 4px; border: 1px =
solid rgb(151, 151, 151); border-image: none; color: rgb(102, 102, 102); =
display: block !important; position: absolute !important; max-width: =
175px; font-size-adjust: none; font-stretch: normal; box-shadow: 0px 0px =
7px rgba(0,0,0,0.5);
}
.tip_tip .arrow {
	background: url("images/icon_tooltip_arrow.png") no-repeat left top; =
width: 26px; height: 13px; bottom: -13px; position: absolute; z-index: =
5;
}

------=_NextPart_000_00AA_01D3A745.B2D630C0
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cardwizard-web:444/Content/menus.css

.menu {
	background: linear-gradient(rgb(250, 250, 250) 0%, rgb(224, 224, 224) =
100%) rgb(240, 240, 240); font: 500 12px/1.2em "Arial", "Helvetica", =
sand-serif; padding: 3px 5px 3px 10px; border-radius: 4px; border: 1px =
solid rgb(204, 204, 204); border-image: none; color: rgb(68, 68, 68); =
display: inline-block; position: relative; cursor: pointer; min-width: =
125px; font-size-adjust: none; font-stretch: normal;
}
.menu .title {
	float: left;
}
.on.menu .title {
	font-weight: 700;
}
.links {
	left: 0px; text-align: right; right: 0px;
}
.menu .arrow {
	padding-left: 5px; margin-left: 10px; border-left-color: rgb(170, 170, =
170); border-left-width: 1px; border-left-style: solid; float: right; =
display: inline-block;
}
.menu .arrow img {
	top: -1px; position: relative;
}
.menuselect {
	font: inherit; margin: 0px; padding: 0px; width: 180px; color: inherit; =
font-size-adjust: inherit; font-stretch: inherit;
}
.menu ul {
	background: linear-gradient(rgb(227, 227, 227) 0%, rgb(255, 255, 255) =
100%) rgb(240, 240, 240); border-width: 0px 1px 1px; border-style: none =
solid solid; border-color: currentColor rgb(204, 204, 204) rgb(204, 204, =
204); list-style: none; margin: 0px; padding: 5px 0px; border-image: =
none; left: -1px; top: 18px; display: none; position: absolute; z-index: =
1; min-width: 100%; box-shadow: 0px 1px 1px rgba(0,0,0,0.2);
}
.menu ul ul {
	background: rgb(255, 255, 255); border-top-color: rgb(204, 204, 204); =
border-top-width: 1px; border-top-style: solid;
}
.menu a {
	padding: 5px 5px 5px 10px; color: rgb(0, 42, 79); font-weight: 500; =
text-decoration: none; display: block; white-space: nowrap;
}
.menu a:hover {
	background: rgb(198, 241, 255);
}
.menu a .ui-menu-icon {
	background: url("images/icon_right_arrow.png") no-repeat center; =
padding: 0px 3px; width: 6px; height: 12px; float: right; display: =
inline-block;
}
.header_nav {
	background: linear-gradient(rgb(65, 126, 219) 0%, rgb(25, 53, 124) =
100%) rgb(39, 78, 157); font: 500 12px/1.2em "Arial", "Helvetica", =
sand-serif; padding: 12px 13px 10px; left: 0px; top: 0px; height: 18px; =
right: 0px; position: fixed; z-index: 5; font-size-adjust: none; =
font-stretch: normal; box-shadow: 0px 2px 1px rgba(0,0,0,0.3);
}
.header_nav .logo {
	float: left;
}
.header_nav ul.dropdown_nav {
	list-style: none; margin: 0px; float: right;
}
.header_nav ul.dropdown_nav > li {
	margin-left: 30px; float: left;
}
.header_nav .menu {
	background: none; border-color: transparent; top: -5px; height: 25px; =
padding-left: 5px; filter: none; position: relative; min-width: 50px;
}
.header_nav .menu .title {
	padding: 2px 7px; color: rgb(199, 216, 235); font-size: 11px; =
font-weight: bold;
}
.header_nav .menu .arrow {
	background: url("images/icon_header_down_arrow.png") no-repeat center; =
border-width: 0px 1px 0px 0px; border-style: none solid none none; =
border-color: currentColor rgb(56, 113, 177) currentColor currentColor; =
margin: 0px; padding: 2px 7px; border-image: none; width: 6px; height: =
12px; float: left; display: inline-block;
}
.header_nav .on.menu {
	background: rgb(255, 255, 255); border-color: rgb(204, 204, 204); =
border-radius: 4px;
}
.header_nav .on.menu .title {
	color: rgb(0, 42, 89);
}
.header_nav .on.menu .arrow {
	border-right-color: rgb(223, 225, 231); border-right-width: 1px; =
border-right-style: solid; background-image: =
url("images/icon_up_arrow.png");
}
.header_nav .menu ul.menu_items {
	background: rgb(255, 255, 255); margin: 0px; padding: 0px; top: 28px; =
filter: none; min-width: 125px;
}
.header_nav .menu ul.menu_items li {
	line-height: 8px; font-size: 13px; border-top-color: rgb(223, 225, =
231); border-top-width: 1px; border-top-style: solid;
}
.header_nav .menu ul.menu_items li:first-child {
	border: currentColor; border-image: none;
}
.header_nav .menu ul.menu_items li a {
	padding: 10px;
}

------=_NextPart_000_00AA_01D3A745.B2D630C0
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cardwizard-web:444/Content/toolbars.css

.toolbar {
=09
}
.toolbar::before {
	display: table; content: " ";
}
.toolbar::after {
	display: table; content: " ";
}
.toolbar::after {
	clear: both;
}
.toolbar .menu {
	float: left;
}
.toolbar .actions {
	height: 22px; margin-left: 7px; border-left-color: rgb(125, 179, 232); =
border-left-width: 1px; border-left-style: solid; float: left;
}
.toolbar .actions i {
	margin: 0px; padding: 0px 3px; width: 23px; height: 22px; =
border-right-color: rgb(125, 179, 232); border-right-width: 1px; =
border-right-style: solid; float: left;
}
.toolbar .actions i.edit {
	background: url("images/icon_edit.png") no-repeat center;
}
.toolbar .actions i.edit:hover {
	background-image: url("images/icon_edit_on.png");
}
.toolbar .actions i.edit:active {
	background-image: url("images/icon_edit_active.png");
}
.toolbar .actions i.add {
	background: url("images/icon_add.png") no-repeat center;
}
.toolbar .actions i.add:hover {
	background-image: url("images/icon_add_on.png");
}
.toolbar .actions i.add:active {
	background-image: url("images/icon_add_active.png");
}
.toolbar .actions i.delete {
	background: url("images/icon_delete.png") no-repeat center;
}
.toolbar .actions i.delete:hover {
	background-image: url("images/icon_delete_on.png");
}
.toolbar .actions i.delete:active {
	background-image: url("images/icon_delete_active.png");
}
.toolbar .search {
	float: right;
}
.toolbar .search form {
	top: -6px; height: 22px; position: relative;
}
.toolbar .search label {
	font-size: 12px; margin-top: 0px;
}
.toolbar .search input {
	width: 150px; height: 16px;
}
.toolbar .search img {
	top: 5px; position: relative;
}

------=_NextPart_000_00AA_01D3A745.B2D630C0
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cardwizard-web:444/Areas/HelpPage/HelpPage.css

.help-page h4 {
	margin: 1.33em 0px; padding: 0px; font-size: 1em;
}
.help-page pre.wrapped {
	white-space: pre-wrap;
}
.help-page .warning-message-container {
	background: rgb(239, 220, 169); padding: 0px 10px; border: 1px solid =
rgb(204, 204, 204); border-image: none; color: rgb(82, 82, 82); =
margin-top: 20px;
}
.help-page-table {
	margin: 0px 0px 20px; width: 100%; text-align: left; border-top-color: =
rgb(212, 212, 212); border-top-width: 0px; border-top-style: solid; =
border-collapse: collapse;
}
.help-page-table th {
	padding: 5px 6px; text-align: left; font-weight: bold; =
border-bottom-color: rgb(212, 212, 212); border-bottom-width: 1px; =
border-bottom-style: solid; background-color: rgb(239, 239, 239);
}
.help-page-table td {
	padding: 10px 8px; vertical-align: top; border-bottom-color: rgb(212, =
212, 212); border-bottom-width: 1px; border-bottom-style: solid;
}
.help-page-table pre {
	margin: 0px; padding: 0px; font-family: inherit; font-size: 100%;
}
.help-page-table p {
	margin: 0px; padding: 0px; font-family: inherit; font-size: 100%;
}
.help-page-table tbody tr:hover td {
	background-color: rgb(255, 238, 204);
}
.help-page a:hover {
	background-color: transparent;
}
.help-page .sample-header {
	background: rgb(0, 73, 126); border-width: 2px 2px medium; =
border-style: solid solid none; border-color: rgb(212, 212, 212) =
rgb(212, 212, 212) currentColor; margin: 10px 0px 0px; padding: 8px =
15px; border-image: none; color: rgb(255, 255, 255); display: =
inline-block;
}
.help-page .sample-content {
	background: rgb(255, 255, 255); margin: 0px 0px 10px; padding: 15px =
20px; border: 2px solid rgb(212, 212, 212); border-image: none; display: =
block;
}
.help-page .api-name {
	width: 40%;
}
.help-page .api-documentation {
	width: 60%;
}
.help-page .parameter-name {
	width: 20%;
}
.help-page .parameter-documentation {
	width: 40%;
}
.help-page .parameter-type {
	width: 20%;
}
.help-page .parameter-annotations {
	width: 20%;
}

------=_NextPart_000_00AA_01D3A745.B2D630C0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cardwizard-web:444/Scripts/jquery-2.0.3.js

/*!=0A=
 * jQuery JavaScript Library v2.0.3=0A=
 * http://jquery.com/=0A=
 *=0A=
 * Includes Sizzle.js=0A=
 * http://sizzlejs.com/=0A=
 *=0A=
 * Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors=0A=
 * Released under the MIT license=0A=
 * http://jquery.org/license=0A=
 *=0A=
 * Date: 2013-07-03T13:30Z=0A=
 */=0A=
(function( window, undefined ) {=0A=
=0A=
// Can't do this because several apps including ASP.NET trace=0A=
// the stack via arguments.caller.callee and Firefox dies if=0A=
// you try to trace through "use strict" call chains. (#13335)=0A=
// Support: Firefox 18+=0A=
//"use strict";=0A=
var=0A=
	// A central reference to the root jQuery(document)=0A=
	rootjQuery,=0A=
=0A=
	// The deferred used on DOM ready=0A=
	readyList,=0A=
=0A=
	// Support: IE9=0A=
	// For `typeof xmlNode.method` instead of `xmlNode.method !=3D=3D =
undefined`=0A=
	core_strundefined =3D typeof undefined,=0A=
=0A=
	// Use the correct document accordingly with window argument (sandbox)=0A=
	location =3D window.location,=0A=
	document =3D window.document,=0A=
	docElem =3D document.documentElement,=0A=
=0A=
	// Map over jQuery in case of overwrite=0A=
	_jQuery =3D window.jQuery,=0A=
=0A=
	// Map over the $ in case of overwrite=0A=
	_$ =3D window.$,=0A=
=0A=
	// [[Class]] -> type pairs=0A=
	class2type =3D {},=0A=
=0A=
	// List of deleted data cache ids, so we can reuse them=0A=
	core_deletedIds =3D [],=0A=
=0A=
	core_version =3D "2.0.3",=0A=
=0A=
	// Save a reference to some core methods=0A=
	core_concat =3D core_deletedIds.concat,=0A=
	core_push =3D core_deletedIds.push,=0A=
	core_slice =3D core_deletedIds.slice,=0A=
	core_indexOf =3D core_deletedIds.indexOf,=0A=
	core_toString =3D class2type.toString,=0A=
	core_hasOwn =3D class2type.hasOwnProperty,=0A=
	core_trim =3D core_version.trim,=0A=
=0A=
	// Define a local copy of jQuery=0A=
	jQuery =3D function( selector, context ) {=0A=
		// The jQuery object is actually just the init constructor 'enhanced'=0A=
		return new jQuery.fn.init( selector, context, rootjQuery );=0A=
	},=0A=
=0A=
	// Used for matching numbers=0A=
	core_pnum =3D /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,=0A=
=0A=
	// Used for splitting on whitespace=0A=
	core_rnotwhite =3D /\S+/g,=0A=
=0A=
	// A simple way to check for HTML strings=0A=
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)=0A=
	// Strict HTML recognition (#11290: must start with <)=0A=
	rquickExpr =3D /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,=0A=
=0A=
	// Match a standalone tag=0A=
	rsingleTag =3D /^<(\w+)\s*\/?>(?:<\/\1>|)$/,=0A=
=0A=
	// Matches dashed string for camelizing=0A=
	rmsPrefix =3D /^-ms-/,=0A=
	rdashAlpha =3D /-([\da-z])/gi,=0A=
=0A=
	// Used by jQuery.camelCase as callback to replace()=0A=
	fcamelCase =3D function( all, letter ) {=0A=
		return letter.toUpperCase();=0A=
	},=0A=
=0A=
	// The ready event handler and self cleanup method=0A=
	completed =3D function() {=0A=
		document.removeEventListener( "DOMContentLoaded", completed, false );=0A=
		window.removeEventListener( "load", completed, false );=0A=
		jQuery.ready();=0A=
	};=0A=
=0A=
jQuery.fn =3D jQuery.prototype =3D {=0A=
	// The current version of jQuery being used=0A=
	jquery: core_version,=0A=
=0A=
	constructor: jQuery,=0A=
	init: function( selector, context, rootjQuery ) {=0A=
		var match, elem;=0A=
=0A=
		// HANDLE: $(""), $(null), $(undefined), $(false)=0A=
		if ( !selector ) {=0A=
			return this;=0A=
		}=0A=
=0A=
		// Handle HTML strings=0A=
		if ( typeof selector =3D=3D=3D "string" ) {=0A=
			if ( selector.charAt(0) =3D=3D=3D "<" && selector.charAt( =
selector.length - 1 ) =3D=3D=3D ">" && selector.length >=3D 3 ) {=0A=
				// Assume that strings that start and end with <> are HTML and skip =
the regex check=0A=
				match =3D [ null, selector, null ];=0A=
=0A=
			} else {=0A=
				match =3D rquickExpr.exec( selector );=0A=
			}=0A=
=0A=
			// Match html or make sure no context is specified for #id=0A=
			if ( match && (match[1] || !context) ) {=0A=
=0A=
				// HANDLE: $(html) -> $(array)=0A=
				if ( match[1] ) {=0A=
					context =3D context instanceof jQuery ? context[0] : context;=0A=
=0A=
					// scripts is true for back-compat=0A=
					jQuery.merge( this, jQuery.parseHTML(=0A=
						match[1],=0A=
						context && context.nodeType ? context.ownerDocument || context : =
document,=0A=
						true=0A=
					) );=0A=
=0A=
					// HANDLE: $(html, props)=0A=
					if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) =
) {=0A=
						for ( match in context ) {=0A=
							// Properties of context are called as methods if possible=0A=
							if ( jQuery.isFunction( this[ match ] ) ) {=0A=
								this[ match ]( context[ match ] );=0A=
=0A=
							// ...and otherwise set as attributes=0A=
							} else {=0A=
								this.attr( match, context[ match ] );=0A=
							}=0A=
						}=0A=
					}=0A=
=0A=
					return this;=0A=
=0A=
				// HANDLE: $(#id)=0A=
				} else {=0A=
					elem =3D document.getElementById( match[2] );=0A=
=0A=
					// Check parentNode to catch when Blackberry 4.6 returns=0A=
					// nodes that are no longer in the document #6963=0A=
					if ( elem && elem.parentNode ) {=0A=
						// Inject the element directly into the jQuery object=0A=
						this.length =3D 1;=0A=
						this[0] =3D elem;=0A=
					}=0A=
=0A=
					this.context =3D document;=0A=
					this.selector =3D selector;=0A=
					return this;=0A=
				}=0A=
=0A=
			// HANDLE: $(expr, $(...))=0A=
			} else if ( !context || context.jquery ) {=0A=
				return ( context || rootjQuery ).find( selector );=0A=
=0A=
			// HANDLE: $(expr, context)=0A=
			// (which is just equivalent to: $(context).find(expr)=0A=
			} else {=0A=
				return this.constructor( context ).find( selector );=0A=
			}=0A=
=0A=
		// HANDLE: $(DOMElement)=0A=
		} else if ( selector.nodeType ) {=0A=
			this.context =3D this[0] =3D selector;=0A=
			this.length =3D 1;=0A=
			return this;=0A=
=0A=
		// HANDLE: $(function)=0A=
		// Shortcut for document ready=0A=
		} else if ( jQuery.isFunction( selector ) ) {=0A=
			return rootjQuery.ready( selector );=0A=
		}=0A=
=0A=
		if ( selector.selector !=3D=3D undefined ) {=0A=
			this.selector =3D selector.selector;=0A=
			this.context =3D selector.context;=0A=
		}=0A=
=0A=
		return jQuery.makeArray( selector, this );=0A=
	},=0A=
=0A=
	// Start with an empty selector=0A=
	selector: "",=0A=
=0A=
	// The default length of a jQuery object is 0=0A=
	length: 0,=0A=
=0A=
	toArray: function() {=0A=
		return core_slice.call( this );=0A=
	},=0A=
=0A=
	// Get the Nth element in the matched element set OR=0A=
	// Get the whole matched element set as a clean array=0A=
	get: function( num ) {=0A=
		return num =3D=3D null ?=0A=
=0A=
			// Return a 'clean' array=0A=
			this.toArray() :=0A=
=0A=
			// Return just the object=0A=
			( num < 0 ? this[ this.length + num ] : this[ num ] );=0A=
	},=0A=
=0A=
	// Take an array of elements and push it onto the stack=0A=
	// (returning the new matched element set)=0A=
	pushStack: function( elems ) {=0A=
=0A=
		// Build a new jQuery matched element set=0A=
		var ret =3D jQuery.merge( this.constructor(), elems );=0A=
=0A=
		// Add the old object onto the stack (as a reference)=0A=
		ret.prevObject =3D this;=0A=
		ret.context =3D this.context;=0A=
=0A=
		// Return the newly-formed element set=0A=
		return ret;=0A=
	},=0A=
=0A=
	// Execute a callback for every element in the matched set.=0A=
	// (You can seed the arguments with an array of args, but this is=0A=
	// only used internally.)=0A=
	each: function( callback, args ) {=0A=
		return jQuery.each( this, callback, args );=0A=
	},=0A=
=0A=
	ready: function( fn ) {=0A=
		// Add the callback=0A=
		jQuery.ready.promise().done( fn );=0A=
=0A=
		return this;=0A=
	},=0A=
=0A=
	slice: function() {=0A=
		return this.pushStack( core_slice.apply( this, arguments ) );=0A=
	},=0A=
=0A=
	first: function() {=0A=
		return this.eq( 0 );=0A=
	},=0A=
=0A=
	last: function() {=0A=
		return this.eq( -1 );=0A=
	},=0A=
=0A=
	eq: function( i ) {=0A=
		var len =3D this.length,=0A=
			j =3D +i + ( i < 0 ? len : 0 );=0A=
		return this.pushStack( j >=3D 0 && j < len ? [ this[j] ] : [] );=0A=
	},=0A=
=0A=
	map: function( callback ) {=0A=
		return this.pushStack( jQuery.map(this, function( elem, i ) {=0A=
			return callback.call( elem, i, elem );=0A=
		}));=0A=
	},=0A=
=0A=
	end: function() {=0A=
		return this.prevObject || this.constructor(null);=0A=
	},=0A=
=0A=
	// For internal use only.=0A=
	// Behaves like an Array's method, not like a jQuery method.=0A=
	push: core_push,=0A=
	sort: [].sort,=0A=
	splice: [].splice=0A=
};=0A=
=0A=
// Give the init function the jQuery prototype for later instantiation=0A=
jQuery.fn.init.prototype =3D jQuery.fn;=0A=
=0A=
jQuery.extend =3D jQuery.fn.extend =3D function() {=0A=
	var options, name, src, copy, copyIsArray, clone,=0A=
		target =3D arguments[0] || {},=0A=
		i =3D 1,=0A=
		length =3D arguments.length,=0A=
		deep =3D false;=0A=
=0A=
	// Handle a deep copy situation=0A=
	if ( typeof target =3D=3D=3D "boolean" ) {=0A=
		deep =3D target;=0A=
		target =3D arguments[1] || {};=0A=
		// skip the boolean and the target=0A=
		i =3D 2;=0A=
	}=0A=
=0A=
	// Handle case when target is a string or something (possible in deep =
copy)=0A=
	if ( typeof target !=3D=3D "object" && !jQuery.isFunction(target) ) {=0A=
		target =3D {};=0A=
	}=0A=
=0A=
	// extend jQuery itself if only one argument is passed=0A=
	if ( length =3D=3D=3D i ) {=0A=
		target =3D this;=0A=
		--i;=0A=
	}=0A=
=0A=
	for ( ; i < length; i++ ) {=0A=
		// Only deal with non-null/undefined values=0A=
		if ( (options =3D arguments[ i ]) !=3D null ) {=0A=
			// Extend the base object=0A=
			for ( name in options ) {=0A=
				src =3D target[ name ];=0A=
				copy =3D options[ name ];=0A=
=0A=
				// Prevent never-ending loop=0A=
				if ( target =3D=3D=3D copy ) {=0A=
					continue;=0A=
				}=0A=
=0A=
				// Recurse if we're merging plain objects or arrays=0A=
				if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray =
=3D jQuery.isArray(copy)) ) ) {=0A=
					if ( copyIsArray ) {=0A=
						copyIsArray =3D false;=0A=
						clone =3D src && jQuery.isArray(src) ? src : [];=0A=
=0A=
					} else {=0A=
						clone =3D src && jQuery.isPlainObject(src) ? src : {};=0A=
					}=0A=
=0A=
					// Never move original objects, clone them=0A=
					target[ name ] =3D jQuery.extend( deep, clone, copy );=0A=
=0A=
				// Don't bring in undefined values=0A=
				} else if ( copy !=3D=3D undefined ) {=0A=
					target[ name ] =3D copy;=0A=
				}=0A=
			}=0A=
		}=0A=
	}=0A=
=0A=
	// Return the modified object=0A=
	return target;=0A=
};=0A=
=0A=
jQuery.extend({=0A=
	// Unique for each copy of jQuery on the page=0A=
	expando: "jQuery" + ( core_version + Math.random() ).replace( /\D/g, "" =
),=0A=
=0A=
	noConflict: function( deep ) {=0A=
		if ( window.$ =3D=3D=3D jQuery ) {=0A=
			window.$ =3D _$;=0A=
		}=0A=
=0A=
		if ( deep && window.jQuery =3D=3D=3D jQuery ) {=0A=
			window.jQuery =3D _jQuery;=0A=
		}=0A=
=0A=
		return jQuery;=0A=
	},=0A=
=0A=
	// Is the DOM ready to be used? Set to true once it occurs.=0A=
	isReady: false,=0A=
=0A=
	// A counter to track how many items to wait for before=0A=
	// the ready event fires. See #6781=0A=
	readyWait: 1,=0A=
=0A=
	// Hold (or release) the ready event=0A=
	holdReady: function( hold ) {=0A=
		if ( hold ) {=0A=
			jQuery.readyWait++;=0A=
		} else {=0A=
			jQuery.ready( true );=0A=
		}=0A=
	},=0A=
=0A=
	// Handle when the DOM is ready=0A=
	ready: function( wait ) {=0A=
=0A=
		// Abort if there are pending holds or we're already ready=0A=
		if ( wait =3D=3D=3D true ? --jQuery.readyWait : jQuery.isReady ) {=0A=
			return;=0A=
		}=0A=
=0A=
		// Remember that the DOM is ready=0A=
		jQuery.isReady =3D true;=0A=
=0A=
		// If a normal DOM Ready event fired, decrement, and wait if need be=0A=
		if ( wait !=3D=3D true && --jQuery.readyWait > 0 ) {=0A=
			return;=0A=
		}=0A=
=0A=
		// If there are functions bound, to execute=0A=
		readyList.resolveWith( document, [ jQuery ] );=0A=
=0A=
		// Trigger any bound ready events=0A=
		if ( jQuery.fn.trigger ) {=0A=
			jQuery( document ).trigger("ready").off("ready");=0A=
		}=0A=
	},=0A=
=0A=
	// See test/unit/core.js for details concerning isFunction.=0A=
	// Since version 1.3, DOM methods and functions like alert=0A=
	// aren't supported. They return false on IE (#2968).=0A=
	isFunction: function( obj ) {=0A=
		return jQuery.type(obj) =3D=3D=3D "function";=0A=
	},=0A=
=0A=
	isArray: Array.isArray,=0A=
=0A=
	isWindow: function( obj ) {=0A=
		return obj !=3D null && obj =3D=3D=3D obj.window;=0A=
	},=0A=
=0A=
	isNumeric: function( obj ) {=0A=
		return !isNaN( parseFloat(obj) ) && isFinite( obj );=0A=
	},=0A=
=0A=
	type: function( obj ) {=0A=
		if ( obj =3D=3D null ) {=0A=
			return String( obj );=0A=
		}=0A=
		// Support: Safari <=3D 5.1 (functionish RegExp)=0A=
		return typeof obj =3D=3D=3D "object" || typeof obj =3D=3D=3D =
"function" ?=0A=
			class2type[ core_toString.call(obj) ] || "object" :=0A=
			typeof obj;=0A=
	},=0A=
=0A=
	isPlainObject: function( obj ) {=0A=
		// Not plain objects:=0A=
		// - Any object or value whose internal [[Class]] property is not =
"[object Object]"=0A=
		// - DOM nodes=0A=
		// - window=0A=
		if ( jQuery.type( obj ) !=3D=3D "object" || obj.nodeType || =
jQuery.isWindow( obj ) ) {=0A=
			return false;=0A=
		}=0A=
=0A=
		// Support: Firefox <20=0A=
		// The try/catch suppresses exceptions thrown when attempting to access=0A=
		// the "constructor" property of certain host objects, ie. =
|window.location|=0A=
		// https://bugzilla.mozilla.org/show_bug.cgi?id=3D814622=0A=
		try {=0A=
			if ( obj.constructor &&=0A=
					!core_hasOwn.call( obj.constructor.prototype, "isPrototypeOf" ) ) {=0A=
				return false;=0A=
			}=0A=
		} catch ( e ) {=0A=
			return false;=0A=
		}=0A=
=0A=
		// If the function hasn't returned already, we're confident that=0A=
		// |obj| is a plain object, created by {} or constructed with new =
Object=0A=
		return true;=0A=
	},=0A=
=0A=
	isEmptyObject: function( obj ) {=0A=
		var name;=0A=
		for ( name in obj ) {=0A=
			return false;=0A=
		}=0A=
		return true;=0A=
	},=0A=
=0A=
	error: function( msg ) {=0A=
		throw new Error( msg );=0A=
	},=0A=
=0A=
	// data: string of html=0A=
	// context (optional): If specified, the fragment will be created in =
this context, defaults to document=0A=
	// keepScripts (optional): If true, will include scripts passed in the =
html string=0A=
	parseHTML: function( data, context, keepScripts ) {=0A=
		if ( !data || typeof data !=3D=3D "string" ) {=0A=
			return null;=0A=
		}=0A=
		if ( typeof context =3D=3D=3D "boolean" ) {=0A=
			keepScripts =3D context;=0A=
			context =3D false;=0A=
		}=0A=
		context =3D context || document;=0A=
=0A=
		var parsed =3D rsingleTag.exec( data ),=0A=
			scripts =3D !keepScripts && [];=0A=
=0A=
		// Single tag=0A=
		if ( parsed ) {=0A=
			return [ context.createElement( parsed[1] ) ];=0A=
		}=0A=
=0A=
		parsed =3D jQuery.buildFragment( [ data ], context, scripts );=0A=
=0A=
		if ( scripts ) {=0A=
			jQuery( scripts ).remove();=0A=
		}=0A=
=0A=
		return jQuery.merge( [], parsed.childNodes );=0A=
	},=0A=
=0A=
	parseJSON: JSON.parse,=0A=
=0A=
	// Cross-browser xml parsing=0A=
	parseXML: function( data ) {=0A=
		var xml, tmp;=0A=
		if ( !data || typeof data !=3D=3D "string" ) {=0A=
			return null;=0A=
		}=0A=
=0A=
		// Support: IE9=0A=
		try {=0A=
			tmp =3D new DOMParser();=0A=
			xml =3D tmp.parseFromString( data , "text/xml" );=0A=
		} catch ( e ) {=0A=
			xml =3D undefined;=0A=
		}=0A=
=0A=
		if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {=0A=
			jQuery.error( "Invalid XML: " + data );=0A=
		}=0A=
		return xml;=0A=
	},=0A=
=0A=
	noop: function() {},=0A=
=0A=
	// Evaluates a script in a global context=0A=
	globalEval: function( code ) {=0A=
		var script,=0A=
				indirect =3D eval;=0A=
=0A=
		code =3D jQuery.trim( code );=0A=
=0A=
		if ( code ) {=0A=
			// If the code includes a valid, prologue position=0A=
			// strict mode pragma, execute code by injecting a=0A=
			// script tag into the document.=0A=
			if ( code.indexOf("use strict") =3D=3D=3D 1 ) {=0A=
				script =3D document.createElement("script");=0A=
				script.text =3D code;=0A=
				document.head.appendChild( script ).parentNode.removeChild( script );=0A=
			} else {=0A=
			// Otherwise, avoid the DOM node creation, insertion=0A=
			// and removal by using an indirect global eval=0A=
				indirect( code );=0A=
			}=0A=
		}=0A=
	},=0A=
=0A=
	// Convert dashed to camelCase; used by the css and data modules=0A=
	// Microsoft forgot to hump their vendor prefix (#9572)=0A=
	camelCase: function( string ) {=0A=
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, =
fcamelCase );=0A=
	},=0A=
=0A=
	nodeName: function( elem, name ) {=0A=
		return elem.nodeName && elem.nodeName.toLowerCase() =3D=3D=3D =
name.toLowerCase();=0A=
	},=0A=
=0A=
	// args is for internal usage only=0A=
	each: function( obj, callback, args ) {=0A=
		var value,=0A=
			i =3D 0,=0A=
			length =3D obj.length,=0A=
			isArray =3D isArraylike( obj );=0A=
=0A=
		if ( args ) {=0A=
			if ( isArray ) {=0A=
				for ( ; i < length; i++ ) {=0A=
					value =3D callback.apply( obj[ i ], args );=0A=
=0A=
					if ( value =3D=3D=3D false ) {=0A=
						break;=0A=
					}=0A=
				}=0A=
			} else {=0A=
				for ( i in obj ) {=0A=
					value =3D callback.apply( obj[ i ], args );=0A=
=0A=
					if ( value =3D=3D=3D false ) {=0A=
						break;=0A=
					}=0A=
				}=0A=
			}=0A=
=0A=
		// A special, fast, case for the most common use of each=0A=
		} else {=0A=
			if ( isArray ) {=0A=
				for ( ; i < length; i++ ) {=0A=
					value =3D callback.call( obj[ i ], i, obj[ i ] );=0A=
=0A=
					if ( value =3D=3D=3D false ) {=0A=
						break;=0A=
					}=0A=
				}=0A=
			} else {=0A=
				for ( i in obj ) {=0A=
					value =3D callback.call( obj[ i ], i, obj[ i ] );=0A=
=0A=
					if ( value =3D=3D=3D false ) {=0A=
						break;=0A=
					}=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		return obj;=0A=
	},=0A=
=0A=
	trim: function( text ) {=0A=
		return text =3D=3D null ? "" : core_trim.call( text );=0A=
	},=0A=
=0A=
	// results is for internal usage only=0A=
	makeArray: function( arr, results ) {=0A=
		var ret =3D results || [];=0A=
=0A=
		if ( arr !=3D null ) {=0A=
			if ( isArraylike( Object(arr) ) ) {=0A=
				jQuery.merge( ret,=0A=
					typeof arr =3D=3D=3D "string" ?=0A=
					[ arr ] : arr=0A=
				);=0A=
			} else {=0A=
				core_push.call( ret, arr );=0A=
			}=0A=
		}=0A=
=0A=
		return ret;=0A=
	},=0A=
=0A=
	inArray: function( elem, arr, i ) {=0A=
		return arr =3D=3D null ? -1 : core_indexOf.call( arr, elem, i );=0A=
	},=0A=
=0A=
	merge: function( first, second ) {=0A=
		var l =3D second.length,=0A=
			i =3D first.length,=0A=
			j =3D 0;=0A=
=0A=
		if ( typeof l =3D=3D=3D "number" ) {=0A=
			for ( ; j < l; j++ ) {=0A=
				first[ i++ ] =3D second[ j ];=0A=
			}=0A=
		} else {=0A=
			while ( second[j] !=3D=3D undefined ) {=0A=
				first[ i++ ] =3D second[ j++ ];=0A=
			}=0A=
		}=0A=
=0A=
		first.length =3D i;=0A=
=0A=
		return first;=0A=
	},=0A=
=0A=
	grep: function( elems, callback, inv ) {=0A=
		var retVal,=0A=
			ret =3D [],=0A=
			i =3D 0,=0A=
			length =3D elems.length;=0A=
		inv =3D !!inv;=0A=
=0A=
		// Go through the array, only saving the items=0A=
		// that pass the validator function=0A=
		for ( ; i < length; i++ ) {=0A=
			retVal =3D !!callback( elems[ i ], i );=0A=
			if ( inv !=3D=3D retVal ) {=0A=
				ret.push( elems[ i ] );=0A=
			}=0A=
		}=0A=
=0A=
		return ret;=0A=
	},=0A=
=0A=
	// arg is for internal usage only=0A=
	map: function( elems, callback, arg ) {=0A=
		var value,=0A=
			i =3D 0,=0A=
			length =3D elems.length,=0A=
			isArray =3D isArraylike( elems ),=0A=
			ret =3D [];=0A=
=0A=
		// Go through the array, translating each of the items to their=0A=
		if ( isArray ) {=0A=
			for ( ; i < length; i++ ) {=0A=
				value =3D callback( elems[ i ], i, arg );=0A=
=0A=
				if ( value !=3D null ) {=0A=
					ret[ ret.length ] =3D value;=0A=
				}=0A=
			}=0A=
=0A=
		// Go through every key on the object,=0A=
		} else {=0A=
			for ( i in elems ) {=0A=
				value =3D callback( elems[ i ], i, arg );=0A=
=0A=
				if ( value !=3D null ) {=0A=
					ret[ ret.length ] =3D value;=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		// Flatten any nested arrays=0A=
		return core_concat.apply( [], ret );=0A=
	},=0A=
=0A=
	// A global GUID counter for objects=0A=
	guid: 1,=0A=
=0A=
	// Bind a function to a context, optionally partially applying any=0A=
	// arguments.=0A=
	proxy: function( fn, context ) {=0A=
		var tmp, args, proxy;=0A=
=0A=
		if ( typeof context =3D=3D=3D "string" ) {=0A=
			tmp =3D fn[ context ];=0A=
			context =3D fn;=0A=
			fn =3D tmp;=0A=
		}=0A=
=0A=
		// Quick check to determine if target is callable, in the spec=0A=
		// this throws a TypeError, but we will just return undefined.=0A=
		if ( !jQuery.isFunction( fn ) ) {=0A=
			return undefined;=0A=
		}=0A=
=0A=
		// Simulated bind=0A=
		args =3D core_slice.call( arguments, 2 );=0A=
		proxy =3D function() {=0A=
			return fn.apply( context || this, args.concat( core_slice.call( =
arguments ) ) );=0A=
		};=0A=
=0A=
		// Set the guid of unique handler to the same of original handler, so =
it can be removed=0A=
		proxy.guid =3D fn.guid =3D fn.guid || jQuery.guid++;=0A=
=0A=
		return proxy;=0A=
	},=0A=
=0A=
	// Multifunctional method to get and set values of a collection=0A=
	// The value/s can optionally be executed if it's a function=0A=
	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {=0A=
		var i =3D 0,=0A=
			length =3D elems.length,=0A=
			bulk =3D key =3D=3D null;=0A=
=0A=
		// Sets many values=0A=
		if ( jQuery.type( key ) =3D=3D=3D "object" ) {=0A=
			chainable =3D true;=0A=
			for ( i in key ) {=0A=
				jQuery.access( elems, fn, i, key[i], true, emptyGet, raw );=0A=
			}=0A=
=0A=
		// Sets one value=0A=
		} else if ( value !=3D=3D undefined ) {=0A=
			chainable =3D true;=0A=
=0A=
			if ( !jQuery.isFunction( value ) ) {=0A=
				raw =3D true;=0A=
			}=0A=
=0A=
			if ( bulk ) {=0A=
				// Bulk operations run against the entire set=0A=
				if ( raw ) {=0A=
					fn.call( elems, value );=0A=
					fn =3D null;=0A=
=0A=
				// ...except when executing function values=0A=
				} else {=0A=
					bulk =3D fn;=0A=
					fn =3D function( elem, key, value ) {=0A=
						return bulk.call( jQuery( elem ), value );=0A=
					};=0A=
				}=0A=
			}=0A=
=0A=
			if ( fn ) {=0A=
				for ( ; i < length; i++ ) {=0A=
					fn( elems[i], key, raw ? value : value.call( elems[i], i, fn( =
elems[i], key ) ) );=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		return chainable ?=0A=
			elems :=0A=
=0A=
			// Gets=0A=
			bulk ?=0A=
				fn.call( elems ) :=0A=
				length ? fn( elems[0], key ) : emptyGet;=0A=
	},=0A=
=0A=
	now: Date.now,=0A=
=0A=
	// A method for quickly swapping in/out CSS properties to get correct =
calculations.=0A=
	// Note: this method belongs to the css module but it's needed here for =
the support module.=0A=
	// If support gets modularized, this method should be moved back to the =
css module.=0A=
	swap: function( elem, options, callback, args ) {=0A=
		var ret, name,=0A=
			old =3D {};=0A=
=0A=
		// Remember the old values, and insert the new ones=0A=
		for ( name in options ) {=0A=
			old[ name ] =3D elem.style[ name ];=0A=
			elem.style[ name ] =3D options[ name ];=0A=
		}=0A=
=0A=
		ret =3D callback.apply( elem, args || [] );=0A=
=0A=
		// Revert the old values=0A=
		for ( name in options ) {=0A=
			elem.style[ name ] =3D old[ name ];=0A=
		}=0A=
=0A=
		return ret;=0A=
	}=0A=
});=0A=
=0A=
jQuery.ready.promise =3D function( obj ) {=0A=
	if ( !readyList ) {=0A=
=0A=
		readyList =3D jQuery.Deferred();=0A=
=0A=
		// Catch cases where $(document).ready() is called after the browser =
event has already occurred.=0A=
		// we once tried to use readyState "interactive" here, but it caused =
issues like the one=0A=
		// discovered by ChrisS here: =
http://bugs.jquery.com/ticket/12282#comment:15=0A=
		if ( document.readyState =3D=3D=3D "complete" ) {=0A=
			// Handle it asynchronously to allow scripts the opportunity to delay =
ready=0A=
			setTimeout( jQuery.ready );=0A=
=0A=
		} else {=0A=
=0A=
			// Use the handy event callback=0A=
			document.addEventListener( "DOMContentLoaded", completed, false );=0A=
=0A=
			// A fallback to window.onload, that will always work=0A=
			window.addEventListener( "load", completed, false );=0A=
		}=0A=
	}=0A=
	return readyList.promise( obj );=0A=
};=0A=
=0A=
// Populate the class2type map=0A=
jQuery.each("Boolean Number String Function Array Date RegExp Object =
Error".split(" "), function(i, name) {=0A=
	class2type[ "[object " + name + "]" ] =3D name.toLowerCase();=0A=
});=0A=
=0A=
function isArraylike( obj ) {=0A=
	var length =3D obj.length,=0A=
		type =3D jQuery.type( obj );=0A=
=0A=
	if ( jQuery.isWindow( obj ) ) {=0A=
		return false;=0A=
	}=0A=
=0A=
	if ( obj.nodeType =3D=3D=3D 1 && length ) {=0A=
		return true;=0A=
	}=0A=
=0A=
	return type =3D=3D=3D "array" || type !=3D=3D "function" &&=0A=
		( length =3D=3D=3D 0 ||=0A=
		typeof length =3D=3D=3D "number" && length > 0 && ( length - 1 ) in =
obj );=0A=
}=0A=
=0A=
// All jQuery objects should point back to these=0A=
rootjQuery =3D jQuery(document);=0A=
/*!=0A=
 * Sizzle CSS Selector Engine v1.9.4-pre=0A=
 * http://sizzlejs.com/=0A=
 *=0A=
 * Copyright 2013 jQuery Foundation, Inc. and other contributors=0A=
 * Released under the MIT license=0A=
 * http://jquery.org/license=0A=
 *=0A=
 * Date: 2013-06-03=0A=
 */=0A=
(function( window, undefined ) {=0A=
=0A=
var i,=0A=
	support,=0A=
	cachedruns,=0A=
	Expr,=0A=
	getText,=0A=
	isXML,=0A=
	compile,=0A=
	outermostContext,=0A=
	sortInput,=0A=
=0A=
	// Local document vars=0A=
	setDocument,=0A=
	document,=0A=
	docElem,=0A=
	documentIsHTML,=0A=
	rbuggyQSA,=0A=
	rbuggyMatches,=0A=
	matches,=0A=
	contains,=0A=
=0A=
	// Instance-specific data=0A=
	expando =3D "sizzle" + -(new Date()),=0A=
	preferredDoc =3D window.document,=0A=
	dirruns =3D 0,=0A=
	done =3D 0,=0A=
	classCache =3D createCache(),=0A=
	tokenCache =3D createCache(),=0A=
	compilerCache =3D createCache(),=0A=
	hasDuplicate =3D false,=0A=
	sortOrder =3D function( a, b ) {=0A=
		if ( a =3D=3D=3D b ) {=0A=
			hasDuplicate =3D true;=0A=
			return 0;=0A=
		}=0A=
		return 0;=0A=
	},=0A=
=0A=
	// General-purpose constants=0A=
	strundefined =3D typeof undefined,=0A=
	MAX_NEGATIVE =3D 1 << 31,=0A=
=0A=
	// Instance methods=0A=
	hasOwn =3D ({}).hasOwnProperty,=0A=
	arr =3D [],=0A=
	pop =3D arr.pop,=0A=
	push_native =3D arr.push,=0A=
	push =3D arr.push,=0A=
	slice =3D arr.slice,=0A=
	// Use a stripped-down indexOf if we can't use a native one=0A=
	indexOf =3D arr.indexOf || function( elem ) {=0A=
		var i =3D 0,=0A=
			len =3D this.length;=0A=
		for ( ; i < len; i++ ) {=0A=
			if ( this[i] =3D=3D=3D elem ) {=0A=
				return i;=0A=
			}=0A=
		}=0A=
		return -1;=0A=
	},=0A=
=0A=
	booleans =3D =
"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden=
|ismap|loop|multiple|open|readonly|required|scoped",=0A=
=0A=
	// Regular expressions=0A=
=0A=
	// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace=0A=
	whitespace =3D "[\\x20\\t\\r\\n\\f]",=0A=
	// http://www.w3.org/TR/css3-syntax/#characters=0A=
	characterEncoding =3D "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",=0A=
=0A=
	// Loosely modeled on CSS identifier characters=0A=
	// An unquoted value should be a CSS identifier =
http://www.w3.org/TR/css3-selectors/#attribute-selectors=0A=
	// Proper syntax: =
http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier=0A=
	identifier =3D characterEncoding.replace( "w", "w#" ),=0A=
=0A=
	// Acceptable operators =
http://www.w3.org/TR/selectors/#attribute-selectors=0A=
	attributes =3D "\\[" + whitespace + "*(" + characterEncoding + ")" + =
whitespace +=0A=
		"*(?:([*^$|!~]?=3D)" + whitespace + =
"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + identifier + ")|)|)" + =
whitespace + "*\\]",=0A=
=0A=
	// Prefer arguments quoted,=0A=
	//   then not containing pseudos/brackets,=0A=
	//   then attribute selectors/non-parenthetical expressions,=0A=
	//   then anything else=0A=
	// These preferences are here to reduce the number of selectors=0A=
	//   needing tokenize in the PSEUDO preFilter=0A=
	pseudos =3D ":(" + characterEncoding + =
")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|" + =
attributes.replace( 3, 8 ) + ")*)|.*)\\)|)",=0A=
=0A=
	// Leading and non-escaped trailing whitespace, capturing some =
non-whitespace characters preceding the latter=0A=
	rtrim =3D new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" =
+ whitespace + "+$", "g" ),=0A=
=0A=
	rcomma =3D new RegExp( "^" + whitespace + "*," + whitespace + "*" ),=0A=
	rcombinators =3D new RegExp( "^" + whitespace + "*([>+~]|" + whitespace =
+ ")" + whitespace + "*" ),=0A=
=0A=
	rsibling =3D new RegExp( whitespace + "*[+~]" ),=0A=
	rattributeQuotes =3D new RegExp( "=3D" + whitespace + "*([^\\]'\"]*)" + =
whitespace + "*\\]", "g" ),=0A=
=0A=
	rpseudo =3D new RegExp( pseudos ),=0A=
	ridentifier =3D new RegExp( "^" + identifier + "$" ),=0A=
=0A=
	matchExpr =3D {=0A=
		"ID": new RegExp( "^#(" + characterEncoding + ")" ),=0A=
		"CLASS": new RegExp( "^\\.(" + characterEncoding + ")" ),=0A=
		"TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" =
),=0A=
		"ATTR": new RegExp( "^" + attributes ),=0A=
		"PSEUDO": new RegExp( "^" + pseudos ),=0A=
		"CHILD": new RegExp( =
"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +=0A=
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + =
whitespace +=0A=
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),=0A=
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),=0A=
		// For use in libraries implementing .is()=0A=
		// We use this for POS matching in `select`=0A=
		"needsContext": new RegExp( "^" + whitespace + =
"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +=0A=
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=3D[^-]|$)", =
"i" )=0A=
	},=0A=
=0A=
	rnative =3D /^[^{]+\{\s*\[native \w/,=0A=
=0A=
	// Easily-parseable/retrievable ID or TAG or CLASS selectors=0A=
	rquickExpr =3D /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,=0A=
=0A=
	rinputs =3D /^(?:input|select|textarea|button)$/i,=0A=
	rheader =3D /^h\d$/i,=0A=
=0A=
	rescape =3D /'|\\/g,=0A=
=0A=
	// CSS escapes =
http://www.w3.org/TR/CSS21/syndata.html#escaped-characters=0A=
	runescape =3D new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + =
whitespace + ")|.)", "ig" ),=0A=
	funescape =3D function( _, escaped, escapedWhitespace ) {=0A=
		var high =3D "0x" + escaped - 0x10000;=0A=
		// NaN means non-codepoint=0A=
		// Support: Firefox=0A=
		// Workaround erroneous numeric interpretation of +"0x"=0A=
		return high !=3D=3D high || escapedWhitespace ?=0A=
			escaped :=0A=
			// BMP codepoint=0A=
			high < 0 ?=0A=
				String.fromCharCode( high + 0x10000 ) :=0A=
				// Supplemental Plane codepoint (surrogate pair)=0A=
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );=0A=
	};=0A=
=0A=
// Optimize for push.apply( _, NodeList )=0A=
try {=0A=
	push.apply(=0A=
		(arr =3D slice.call( preferredDoc.childNodes )),=0A=
		preferredDoc.childNodes=0A=
	);=0A=
	// Support: Android<4.0=0A=
	// Detect silently failing push.apply=0A=
	arr[ preferredDoc.childNodes.length ].nodeType;=0A=
} catch ( e ) {=0A=
	push =3D { apply: arr.length ?=0A=
=0A=
		// Leverage slice if possible=0A=
		function( target, els ) {=0A=
			push_native.apply( target, slice.call(els) );=0A=
		} :=0A=
=0A=
		// Support: IE<9=0A=
		// Otherwise append directly=0A=
		function( target, els ) {=0A=
			var j =3D target.length,=0A=
				i =3D 0;=0A=
			// Can't trust NodeList.length=0A=
			while ( (target[j++] =3D els[i++]) ) {}=0A=
			target.length =3D j - 1;=0A=
		}=0A=
	};=0A=
}=0A=
=0A=
function Sizzle( selector, context, results, seed ) {=0A=
	var match, elem, m, nodeType,=0A=
		// QSA vars=0A=
		i, groups, old, nid, newContext, newSelector;=0A=
=0A=
	if ( ( context ? context.ownerDocument || context : preferredDoc ) =
!=3D=3D document ) {=0A=
		setDocument( context );=0A=
	}=0A=
=0A=
	context =3D context || document;=0A=
	results =3D results || [];=0A=
=0A=
	if ( !selector || typeof selector !=3D=3D "string" ) {=0A=
		return results;=0A=
	}=0A=
=0A=
	if ( (nodeType =3D context.nodeType) !=3D=3D 1 && nodeType !=3D=3D 9 ) {=0A=
		return [];=0A=
	}=0A=
=0A=
	if ( documentIsHTML && !seed ) {=0A=
=0A=
		// Shortcuts=0A=
		if ( (match =3D rquickExpr.exec( selector )) ) {=0A=
			// Speed-up: Sizzle("#ID")=0A=
			if ( (m =3D match[1]) ) {=0A=
				if ( nodeType =3D=3D=3D 9 ) {=0A=
					elem =3D context.getElementById( m );=0A=
					// Check parentNode to catch when Blackberry 4.6 returns=0A=
					// nodes that are no longer in the document #6963=0A=
					if ( elem && elem.parentNode ) {=0A=
						// Handle the case where IE, Opera, and Webkit return items=0A=
						// by name instead of ID=0A=
						if ( elem.id =3D=3D=3D m ) {=0A=
							results.push( elem );=0A=
							return results;=0A=
						}=0A=
					} else {=0A=
						return results;=0A=
					}=0A=
				} else {=0A=
					// Context is not a document=0A=
					if ( context.ownerDocument && (elem =3D =
context.ownerDocument.getElementById( m )) &&=0A=
						contains( context, elem ) && elem.id =3D=3D=3D m ) {=0A=
						results.push( elem );=0A=
						return results;=0A=
					}=0A=
				}=0A=
=0A=
			// Speed-up: Sizzle("TAG")=0A=
			} else if ( match[2] ) {=0A=
				push.apply( results, context.getElementsByTagName( selector ) );=0A=
				return results;=0A=
=0A=
			// Speed-up: Sizzle(".CLASS")=0A=
			} else if ( (m =3D match[3]) && support.getElementsByClassName && =
context.getElementsByClassName ) {=0A=
				push.apply( results, context.getElementsByClassName( m ) );=0A=
				return results;=0A=
			}=0A=
		}=0A=
=0A=
		// QSA path=0A=
		if ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {=0A=
			nid =3D old =3D expando;=0A=
			newContext =3D context;=0A=
			newSelector =3D nodeType =3D=3D=3D 9 && selector;=0A=
=0A=
			// qSA works strangely on Element-rooted queries=0A=
			// We can work around this by specifying an extra ID on the root=0A=
			// and working up from there (Thanks to Andrew Dupont for the =
technique)=0A=
			// IE 8 doesn't work on object elements=0A=
			if ( nodeType =3D=3D=3D 1 && context.nodeName.toLowerCase() !=3D=3D =
"object" ) {=0A=
				groups =3D tokenize( selector );=0A=
=0A=
				if ( (old =3D context.getAttribute("id")) ) {=0A=
					nid =3D old.replace( rescape, "\\$&" );=0A=
				} else {=0A=
					context.setAttribute( "id", nid );=0A=
				}=0A=
				nid =3D "[id=3D'" + nid + "'] ";=0A=
=0A=
				i =3D groups.length;=0A=
				while ( i-- ) {=0A=
					groups[i] =3D nid + toSelector( groups[i] );=0A=
				}=0A=
				newContext =3D rsibling.test( selector ) && context.parentNode || =
context;=0A=
				newSelector =3D groups.join(",");=0A=
			}=0A=
=0A=
			if ( newSelector ) {=0A=
				try {=0A=
					push.apply( results,=0A=
						newContext.querySelectorAll( newSelector )=0A=
					);=0A=
					return results;=0A=
				} catch(qsaError) {=0A=
				} finally {=0A=
					if ( !old ) {=0A=
						context.removeAttribute("id");=0A=
					}=0A=
				}=0A=
			}=0A=
		}=0A=
	}=0A=
=0A=
	// All others=0A=
	return select( selector.replace( rtrim, "$1" ), context, results, seed =
);=0A=
}=0A=
=0A=
/**=0A=
 * Create key-value caches of limited size=0A=
 * @returns {Function(string, Object)} Returns the Object data after =
storing it on itself with=0A=
 *	property name the (space-suffixed) string and (if the cache is larger =
than Expr.cacheLength)=0A=
 *	deleting the oldest entry=0A=
 */=0A=
function createCache() {=0A=
	var keys =3D [];=0A=
=0A=
	function cache( key, value ) {=0A=
		// Use (key + " ") to avoid collision with native prototype properties =
(see Issue #157)=0A=
		if ( keys.push( key +=3D " " ) > Expr.cacheLength ) {=0A=
			// Only keep the most recent entries=0A=
			delete cache[ keys.shift() ];=0A=
		}=0A=
		return (cache[ key ] =3D value);=0A=
	}=0A=
	return cache;=0A=
}=0A=
=0A=
/**=0A=
 * Mark a function for special use by Sizzle=0A=
 * @param {Function} fn The function to mark=0A=
 */=0A=
function markFunction( fn ) {=0A=
	fn[ expando ] =3D true;=0A=
	return fn;=0A=
}=0A=
=0A=
/**=0A=
 * Support testing using an element=0A=
 * @param {Function} fn Passed the created div and expects a boolean =
result=0A=
 */=0A=
function assert( fn ) {=0A=
	var div =3D document.createElement("div");=0A=
=0A=
	try {=0A=
		return !!fn( div );=0A=
	} catch (e) {=0A=
		return false;=0A=
	} finally {=0A=
		// Remove from its parent by default=0A=
		if ( div.parentNode ) {=0A=
			div.parentNode.removeChild( div );=0A=
		}=0A=
		// release memory in IE=0A=
		div =3D null;=0A=
	}=0A=
}=0A=
=0A=
/**=0A=
 * Adds the same handler for all of the specified attrs=0A=
 * @param {String} attrs Pipe-separated list of attributes=0A=
 * @param {Function} handler The method that will be applied=0A=
 */=0A=
function addHandle( attrs, handler ) {=0A=
	var arr =3D attrs.split("|"),=0A=
		i =3D attrs.length;=0A=
=0A=
	while ( i-- ) {=0A=
		Expr.attrHandle[ arr[i] ] =3D handler;=0A=
	}=0A=
}=0A=
=0A=
/**=0A=
 * Checks document order of two siblings=0A=
 * @param {Element} a=0A=
 * @param {Element} b=0A=
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 =
if a follows b=0A=
 */=0A=
function siblingCheck( a, b ) {=0A=
	var cur =3D b && a,=0A=
		diff =3D cur && a.nodeType =3D=3D=3D 1 && b.nodeType =3D=3D=3D 1 &&=0A=
			( ~b.sourceIndex || MAX_NEGATIVE ) -=0A=
			( ~a.sourceIndex || MAX_NEGATIVE );=0A=
=0A=
	// Use IE sourceIndex if available on both nodes=0A=
	if ( diff ) {=0A=
		return diff;=0A=
	}=0A=
=0A=
	// Check if b follows a=0A=
	if ( cur ) {=0A=
		while ( (cur =3D cur.nextSibling) ) {=0A=
			if ( cur =3D=3D=3D b ) {=0A=
				return -1;=0A=
			}=0A=
		}=0A=
	}=0A=
=0A=
	return a ? 1 : -1;=0A=
}=0A=
=0A=
/**=0A=
 * Returns a function to use in pseudos for input types=0A=
 * @param {String} type=0A=
 */=0A=
function createInputPseudo( type ) {=0A=
	return function( elem ) {=0A=
		var name =3D elem.nodeName.toLowerCase();=0A=
		return name =3D=3D=3D "input" && elem.type =3D=3D=3D type;=0A=
	};=0A=
}=0A=
=0A=
/**=0A=
 * Returns a function to use in pseudos for buttons=0A=
 * @param {String} type=0A=
 */=0A=
function createButtonPseudo( type ) {=0A=
	return function( elem ) {=0A=
		var name =3D elem.nodeName.toLowerCase();=0A=
		return (name =3D=3D=3D "input" || name =3D=3D=3D "button") && =
elem.type =3D=3D=3D type;=0A=
	};=0A=
}=0A=
=0A=
/**=0A=
 * Returns a function to use in pseudos for positionals=0A=
 * @param {Function} fn=0A=
 */=0A=
function createPositionalPseudo( fn ) {=0A=
	return markFunction(function( argument ) {=0A=
		argument =3D +argument;=0A=
		return markFunction(function( seed, matches ) {=0A=
			var j,=0A=
				matchIndexes =3D fn( [], seed.length, argument ),=0A=
				i =3D matchIndexes.length;=0A=
=0A=
			// Match elements found at the specified indexes=0A=
			while ( i-- ) {=0A=
				if ( seed[ (j =3D matchIndexes[i]) ] ) {=0A=
					seed[j] =3D !(matches[j] =3D seed[j]);=0A=
				}=0A=
			}=0A=
		});=0A=
	});=0A=
}=0A=
=0A=
/**=0A=
 * Detect xml=0A=
 * @param {Element|Object} elem An element or a document=0A=
 */=0A=
isXML =3D Sizzle.isXML =3D function( elem ) {=0A=
	// documentElement is verified for cases where it doesn't yet exist=0A=
	// (such as loading iframes in IE - #4833)=0A=
	var documentElement =3D elem && (elem.ownerDocument || =
elem).documentElement;=0A=
	return documentElement ? documentElement.nodeName !=3D=3D "HTML" : =
false;=0A=
};=0A=
=0A=
// Expose support vars for convenience=0A=
support =3D Sizzle.support =3D {};=0A=
=0A=
/**=0A=
 * Sets document-related variables once based on the current document=0A=
 * @param {Element|Object} [doc] An element or document object to use to =
set the document=0A=
 * @returns {Object} Returns the current document=0A=
 */=0A=
setDocument =3D Sizzle.setDocument =3D function( node ) {=0A=
	var doc =3D node ? node.ownerDocument || node : preferredDoc,=0A=
		parent =3D doc.defaultView;=0A=
=0A=
	// If no document and documentElement is available, return=0A=
	if ( doc =3D=3D=3D document || doc.nodeType !=3D=3D 9 || =
!doc.documentElement ) {=0A=
		return document;=0A=
	}=0A=
=0A=
	// Set our document=0A=
	document =3D doc;=0A=
	docElem =3D doc.documentElement;=0A=
=0A=
	// Support tests=0A=
	documentIsHTML =3D !isXML( doc );=0A=
=0A=
	// Support: IE>8=0A=
	// If iframe document is assigned to "document" variable and if iframe =
has been reloaded,=0A=
	// IE will throw "permission denied" error when accessing "document" =
variable, see jQuery #13936=0A=
	// IE6-8 do not support the defaultView property so parent will be =
undefined=0A=
	if ( parent && parent.attachEvent && parent !=3D=3D parent.top ) {=0A=
		parent.attachEvent( "onbeforeunload", function() {=0A=
			setDocument();=0A=
		});=0A=
	}=0A=
=0A=
	/* Attributes=0A=
	---------------------------------------------------------------------- =
*/=0A=
=0A=
	// Support: IE<8=0A=
	// Verify that getAttribute really returns attributes and not =
properties (excepting IE8 booleans)=0A=
	support.attributes =3D assert(function( div ) {=0A=
		div.className =3D "i";=0A=
		return !div.getAttribute("className");=0A=
	});=0A=
=0A=
	/* getElement(s)By*=0A=
	---------------------------------------------------------------------- =
*/=0A=
=0A=
	// Check if getElementsByTagName("*") returns only elements=0A=
	support.getElementsByTagName =3D assert(function( div ) {=0A=
		div.appendChild( doc.createComment("") );=0A=
		return !div.getElementsByTagName("*").length;=0A=
	});=0A=
=0A=
	// Check if getElementsByClassName can be trusted=0A=
	support.getElementsByClassName =3D assert(function( div ) {=0A=
		div.innerHTML =3D "<div class=3D'a'></div><div class=3D'a i'></div>";=0A=
=0A=
		// Support: Safari<4=0A=
		// Catch class over-caching=0A=
		div.firstChild.className =3D "i";=0A=
		// Support: Opera<10=0A=
		// Catch gEBCN failure to find non-leading classes=0A=
		return div.getElementsByClassName("i").length =3D=3D=3D 2;=0A=
	});=0A=
=0A=
	// Support: IE<10=0A=
	// Check if getElementById returns elements by name=0A=
	// The broken getElementById methods don't pick up programatically-set =
names,=0A=
	// so use a roundabout getElementsByName test=0A=
	support.getById =3D assert(function( div ) {=0A=
		docElem.appendChild( div ).id =3D expando;=0A=
		return !doc.getElementsByName || !doc.getElementsByName( expando =
).length;=0A=
	});=0A=
=0A=
	// ID find and filter=0A=
	if ( support.getById ) {=0A=
		Expr.find["ID"] =3D function( id, context ) {=0A=
			if ( typeof context.getElementById !=3D=3D strundefined && =
documentIsHTML ) {=0A=
				var m =3D context.getElementById( id );=0A=
				// Check parentNode to catch when Blackberry 4.6 returns=0A=
				// nodes that are no longer in the document #6963=0A=
				return m && m.parentNode ? [m] : [];=0A=
			}=0A=
		};=0A=
		Expr.filter["ID"] =3D function( id ) {=0A=
			var attrId =3D id.replace( runescape, funescape );=0A=
			return function( elem ) {=0A=
				return elem.getAttribute("id") =3D=3D=3D attrId;=0A=
			};=0A=
		};=0A=
	} else {=0A=
		// Support: IE6/7=0A=
		// getElementById is not reliable as a find shortcut=0A=
		delete Expr.find["ID"];=0A=
=0A=
		Expr.filter["ID"] =3D  function( id ) {=0A=
			var attrId =3D id.replace( runescape, funescape );=0A=
			return function( elem ) {=0A=
				var node =3D typeof elem.getAttributeNode !=3D=3D strundefined && =
elem.getAttributeNode("id");=0A=
				return node && node.value =3D=3D=3D attrId;=0A=
			};=0A=
		};=0A=
	}=0A=
=0A=
	// Tag=0A=
	Expr.find["TAG"] =3D support.getElementsByTagName ?=0A=
		function( tag, context ) {=0A=
			if ( typeof context.getElementsByTagName !=3D=3D strundefined ) {=0A=
				return context.getElementsByTagName( tag );=0A=
			}=0A=
		} :=0A=
		function( tag, context ) {=0A=
			var elem,=0A=
				tmp =3D [],=0A=
				i =3D 0,=0A=
				results =3D context.getElementsByTagName( tag );=0A=
=0A=
			// Filter out possible comments=0A=
			if ( tag =3D=3D=3D "*" ) {=0A=
				while ( (elem =3D results[i++]) ) {=0A=
					if ( elem.nodeType =3D=3D=3D 1 ) {=0A=
						tmp.push( elem );=0A=
					}=0A=
				}=0A=
=0A=
				return tmp;=0A=
			}=0A=
			return results;=0A=
		};=0A=
=0A=
	// Class=0A=
	Expr.find["CLASS"] =3D support.getElementsByClassName && function( =
className, context ) {=0A=
		if ( typeof context.getElementsByClassName !=3D=3D strundefined && =
documentIsHTML ) {=0A=
			return context.getElementsByClassName( className );=0A=
		}=0A=
	};=0A=
=0A=
	/* QSA/matchesSelector=0A=
	---------------------------------------------------------------------- =
*/=0A=
=0A=
	// QSA and matchesSelector support=0A=
=0A=
	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)=0A=
	rbuggyMatches =3D [];=0A=
=0A=
	// qSa(:focus) reports false when true (Chrome 21)=0A=
	// We allow this because of a bug in IE8/9 that throws an error=0A=
	// whenever `document.activeElement` is accessed on an iframe=0A=
	// So, we allow :focus to pass through QSA all the time to avoid the IE =
error=0A=
	// See http://bugs.jquery.com/ticket/13378=0A=
	rbuggyQSA =3D [];=0A=
=0A=
	if ( (support.qsa =3D rnative.test( doc.querySelectorAll )) ) {=0A=
		// Build QSA regex=0A=
		// Regex strategy adopted from Diego Perini=0A=
		assert(function( div ) {=0A=
			// Select is set to empty string on purpose=0A=
			// This is to test IE's treatment of not explicitly=0A=
			// setting a boolean content attribute,=0A=
			// since its presence should be enough=0A=
			// http://bugs.jquery.com/ticket/12359=0A=
			div.innerHTML =3D "<select><option selected=3D''></option></select>";=0A=
=0A=
			// Support: IE8=0A=
			// Boolean attributes and "value" are not treated correctly=0A=
			if ( !div.querySelectorAll("[selected]").length ) {=0A=
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );=0A=
			}=0A=
=0A=
			// Webkit/Opera - :checked should return selected option elements=0A=
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked=0A=
			// IE8 throws error here and will not see later tests=0A=
			if ( !div.querySelectorAll(":checked").length ) {=0A=
				rbuggyQSA.push(":checked");=0A=
			}=0A=
		});=0A=
=0A=
		assert(function( div ) {=0A=
=0A=
			// Support: Opera 10-12/IE8=0A=
			// ^=3D $=3D *=3D and empty values=0A=
			// Should not select anything=0A=
			// Support: Windows 8 Native Apps=0A=
			// The type attribute is restricted during .innerHTML assignment=0A=
			var input =3D doc.createElement("input");=0A=
			input.setAttribute( "type", "hidden" );=0A=
			div.appendChild( input ).setAttribute( "t", "" );=0A=
=0A=
			if ( div.querySelectorAll("[t^=3D'']").length ) {=0A=
				rbuggyQSA.push( "[*^$]=3D" + whitespace + "*(?:''|\"\")" );=0A=
			}=0A=
=0A=
			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements =
are still enabled)=0A=
			// IE8 throws error here and will not see later tests=0A=
			if ( !div.querySelectorAll(":enabled").length ) {=0A=
				rbuggyQSA.push( ":enabled", ":disabled" );=0A=
			}=0A=
=0A=
			// Opera 10-11 does not throw on post-comma invalid pseudos=0A=
			div.querySelectorAll("*,:x");=0A=
			rbuggyQSA.push(",.*:");=0A=
		});=0A=
	}=0A=
=0A=
	if ( (support.matchesSelector =3D rnative.test( (matches =3D =
docElem.webkitMatchesSelector ||=0A=
		docElem.mozMatchesSelector ||=0A=
		docElem.oMatchesSelector ||=0A=
		docElem.msMatchesSelector) )) ) {=0A=
=0A=
		assert(function( div ) {=0A=
			// Check to see if it's possible to do matchesSelector=0A=
			// on a disconnected node (IE 9)=0A=
			support.disconnectedMatch =3D matches.call( div, "div" );=0A=
=0A=
			// This should fail with an exception=0A=
			// Gecko does not error, returns false instead=0A=
			matches.call( div, "[s!=3D'']:x" );=0A=
			rbuggyMatches.push( "!=3D", pseudos );=0A=
		});=0A=
	}=0A=
=0A=
	rbuggyQSA =3D rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );=0A=
	rbuggyMatches =3D rbuggyMatches.length && new RegExp( =
rbuggyMatches.join("|") );=0A=
=0A=
	/* Contains=0A=
	---------------------------------------------------------------------- =
*/=0A=
=0A=
	// Element contains another=0A=
	// Purposefully does not implement inclusive descendent=0A=
	// As in, an element does not contain itself=0A=
	contains =3D rnative.test( docElem.contains ) || =
docElem.compareDocumentPosition ?=0A=
		function( a, b ) {=0A=
			var adown =3D a.nodeType =3D=3D=3D 9 ? a.documentElement : a,=0A=
				bup =3D b && b.parentNode;=0A=
			return a =3D=3D=3D bup || !!( bup && bup.nodeType =3D=3D=3D 1 && (=0A=
				adown.contains ?=0A=
					adown.contains( bup ) :=0A=
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16=0A=
			));=0A=
		} :=0A=
		function( a, b ) {=0A=
			if ( b ) {=0A=
				while ( (b =3D b.parentNode) ) {=0A=
					if ( b =3D=3D=3D a ) {=0A=
						return true;=0A=
					}=0A=
				}=0A=
			}=0A=
			return false;=0A=
		};=0A=
=0A=
	/* Sorting=0A=
	---------------------------------------------------------------------- =
*/=0A=
=0A=
	// Document order sorting=0A=
	sortOrder =3D docElem.compareDocumentPosition ?=0A=
	function( a, b ) {=0A=
=0A=
		// Flag for duplicate removal=0A=
		if ( a =3D=3D=3D b ) {=0A=
			hasDuplicate =3D true;=0A=
			return 0;=0A=
		}=0A=
=0A=
		var compare =3D b.compareDocumentPosition && a.compareDocumentPosition =
&& a.compareDocumentPosition( b );=0A=
=0A=
		if ( compare ) {=0A=
			// Disconnected nodes=0A=
			if ( compare & 1 ||=0A=
				(!support.sortDetached && b.compareDocumentPosition( a ) =3D=3D=3D =
compare) ) {=0A=
=0A=
				// Choose the first element that is related to our preferred document=0A=
				if ( a =3D=3D=3D doc || contains(preferredDoc, a) ) {=0A=
					return -1;=0A=
				}=0A=
				if ( b =3D=3D=3D doc || contains(preferredDoc, b) ) {=0A=
					return 1;=0A=
				}=0A=
=0A=
				// Maintain original order=0A=
				return sortInput ?=0A=
					( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :=0A=
					0;=0A=
			}=0A=
=0A=
			return compare & 4 ? -1 : 1;=0A=
		}=0A=
=0A=
		// Not directly comparable, sort on existence of method=0A=
		return a.compareDocumentPosition ? -1 : 1;=0A=
	} :=0A=
	function( a, b ) {=0A=
		var cur,=0A=
			i =3D 0,=0A=
			aup =3D a.parentNode,=0A=
			bup =3D b.parentNode,=0A=
			ap =3D [ a ],=0A=
			bp =3D [ b ];=0A=
=0A=
		// Exit early if the nodes are identical=0A=
		if ( a =3D=3D=3D b ) {=0A=
			hasDuplicate =3D true;=0A=
			return 0;=0A=
=0A=
		// Parentless nodes are either documents or disconnected=0A=
		} else if ( !aup || !bup ) {=0A=
			return a =3D=3D=3D doc ? -1 :=0A=
				b =3D=3D=3D doc ? 1 :=0A=
				aup ? -1 :=0A=
				bup ? 1 :=0A=
				sortInput ?=0A=
				( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :=0A=
				0;=0A=
=0A=
		// If the nodes are siblings, we can do a quick check=0A=
		} else if ( aup =3D=3D=3D bup ) {=0A=
			return siblingCheck( a, b );=0A=
		}=0A=
=0A=
		// Otherwise we need full lists of their ancestors for comparison=0A=
		cur =3D a;=0A=
		while ( (cur =3D cur.parentNode) ) {=0A=
			ap.unshift( cur );=0A=
		}=0A=
		cur =3D b;=0A=
		while ( (cur =3D cur.parentNode) ) {=0A=
			bp.unshift( cur );=0A=
		}=0A=
=0A=
		// Walk down the tree looking for a discrepancy=0A=
		while ( ap[i] =3D=3D=3D bp[i] ) {=0A=
			i++;=0A=
		}=0A=
=0A=
		return i ?=0A=
			// Do a sibling check if the nodes have a common ancestor=0A=
			siblingCheck( ap[i], bp[i] ) :=0A=
=0A=
			// Otherwise nodes in our document sort first=0A=
			ap[i] =3D=3D=3D preferredDoc ? -1 :=0A=
			bp[i] =3D=3D=3D preferredDoc ? 1 :=0A=
			0;=0A=
	};=0A=
=0A=
	return doc;=0A=
};=0A=
=0A=
Sizzle.matches =3D function( expr, elements ) {=0A=
	return Sizzle( expr, null, null, elements );=0A=
};=0A=
=0A=
Sizzle.matchesSelector =3D function( elem, expr ) {=0A=
	// Set document vars if needed=0A=
	if ( ( elem.ownerDocument || elem ) !=3D=3D document ) {=0A=
		setDocument( elem );=0A=
	}=0A=
=0A=
	// Make sure that attribute selectors are quoted=0A=
	expr =3D expr.replace( rattributeQuotes, "=3D'$1']" );=0A=
=0A=
	if ( support.matchesSelector && documentIsHTML &&=0A=
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&=0A=
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {=0A=
=0A=
		try {=0A=
			var ret =3D matches.call( elem, expr );=0A=
=0A=
			// IE 9's matchesSelector returns false on disconnected nodes=0A=
			if ( ret || support.disconnectedMatch ||=0A=
					// As well, disconnected nodes are said to be in a document=0A=
					// fragment in IE 9=0A=
					elem.document && elem.document.nodeType !=3D=3D 11 ) {=0A=
				return ret;=0A=
			}=0A=
		} catch(e) {}=0A=
	}=0A=
=0A=
	return Sizzle( expr, document, null, [elem] ).length > 0;=0A=
};=0A=
=0A=
Sizzle.contains =3D function( context, elem ) {=0A=
	// Set document vars if needed=0A=
	if ( ( context.ownerDocument || context ) !=3D=3D document ) {=0A=
		setDocument( context );=0A=
	}=0A=
	return contains( context, elem );=0A=
};=0A=
=0A=
Sizzle.attr =3D function( elem, name ) {=0A=
	// Set document vars if needed=0A=
	if ( ( elem.ownerDocument || elem ) !=3D=3D document ) {=0A=
		setDocument( elem );=0A=
	}=0A=
=0A=
	var fn =3D Expr.attrHandle[ name.toLowerCase() ],=0A=
		// Don't get fooled by Object.prototype properties (jQuery #13807)=0A=
		val =3D fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?=0A=
			fn( elem, name, !documentIsHTML ) :=0A=
			undefined;=0A=
=0A=
	return val =3D=3D=3D undefined ?=0A=
		support.attributes || !documentIsHTML ?=0A=
			elem.getAttribute( name ) :=0A=
			(val =3D elem.getAttributeNode(name)) && val.specified ?=0A=
				val.value :=0A=
				null :=0A=
		val;=0A=
};=0A=
=0A=
Sizzle.error =3D function( msg ) {=0A=
	throw new Error( "Syntax error, unrecognized expression: " + msg );=0A=
};=0A=
=0A=
/**=0A=
 * Document sorting and removing duplicates=0A=
 * @param {ArrayLike} results=0A=
 */=0A=
Sizzle.uniqueSort =3D function( results ) {=0A=
	var elem,=0A=
		duplicates =3D [],=0A=
		j =3D 0,=0A=
		i =3D 0;=0A=
=0A=
	// Unless we *know* we can detect duplicates, assume their presence=0A=
	hasDuplicate =3D !support.detectDuplicates;=0A=
	sortInput =3D !support.sortStable && results.slice( 0 );=0A=
	results.sort( sortOrder );=0A=
=0A=
	if ( hasDuplicate ) {=0A=
		while ( (elem =3D results[i++]) ) {=0A=
			if ( elem =3D=3D=3D results[ i ] ) {=0A=
				j =3D duplicates.push( i );=0A=
			}=0A=
		}=0A=
		while ( j-- ) {=0A=
			results.splice( duplicates[ j ], 1 );=0A=
		}=0A=
	}=0A=
=0A=
	return results;=0A=
};=0A=
=0A=
/**=0A=
 * Utility function for retrieving the text value of an array of DOM =
nodes=0A=
 * @param {Array|Element} elem=0A=
 */=0A=
getText =3D Sizzle.getText =3D function( elem ) {=0A=
	var node,=0A=
		ret =3D "",=0A=
		i =3D 0,=0A=
		nodeType =3D elem.nodeType;=0A=
=0A=
	if ( !nodeType ) {=0A=
		// If no nodeType, this is expected to be an array=0A=
		for ( ; (node =3D elem[i]); i++ ) {=0A=
			// Do not traverse comment nodes=0A=
			ret +=3D getText( node );=0A=
		}=0A=
	} else if ( nodeType =3D=3D=3D 1 || nodeType =3D=3D=3D 9 || nodeType =
=3D=3D=3D 11 ) {=0A=
		// Use textContent for elements=0A=
		// innerText usage removed for consistency of new lines (see #11153)=0A=
		if ( typeof elem.textContent =3D=3D=3D "string" ) {=0A=
			return elem.textContent;=0A=
		} else {=0A=
			// Traverse its children=0A=
			for ( elem =3D elem.firstChild; elem; elem =3D elem.nextSibling ) {=0A=
				ret +=3D getText( elem );=0A=
			}=0A=
		}=0A=
	} else if ( nodeType =3D=3D=3D 3 || nodeType =3D=3D=3D 4 ) {=0A=
		return elem.nodeValue;=0A=
	}=0A=
	// Do not include comment or processing instruction nodes=0A=
=0A=
	return ret;=0A=
};=0A=
=0A=
Expr =3D Sizzle.selectors =3D {=0A=
=0A=
	// Can be adjusted by the user=0A=
	cacheLength: 50,=0A=
=0A=
	createPseudo: markFunction,=0A=
=0A=
	match: matchExpr,=0A=
=0A=
	attrHandle: {},=0A=
=0A=
	find: {},=0A=
=0A=
	relative: {=0A=
		">": { dir: "parentNode", first: true },=0A=
		" ": { dir: "parentNode" },=0A=
		"+": { dir: "previousSibling", first: true },=0A=
		"~": { dir: "previousSibling" }=0A=
	},=0A=
=0A=
	preFilter: {=0A=
		"ATTR": function( match ) {=0A=
			match[1] =3D match[1].replace( runescape, funescape );=0A=
=0A=
			// Move the given value to match[3] whether quoted or unquoted=0A=
			match[3] =3D ( match[4] || match[5] || "" ).replace( runescape, =
funescape );=0A=
=0A=
			if ( match[2] =3D=3D=3D "~=3D" ) {=0A=
				match[3] =3D " " + match[3] + " ";=0A=
			}=0A=
=0A=
			return match.slice( 0, 4 );=0A=
		},=0A=
=0A=
		"CHILD": function( match ) {=0A=
			/* matches from matchExpr["CHILD"]=0A=
				1 type (only|nth|...)=0A=
				2 what (child|of-type)=0A=
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)=0A=
				4 xn-component of xn+y argument ([+-]?\d*n|)=0A=
				5 sign of xn-component=0A=
				6 x of xn-component=0A=
				7 sign of y-component=0A=
				8 y of y-component=0A=
			*/=0A=
			match[1] =3D match[1].toLowerCase();=0A=
=0A=
			if ( match[1].slice( 0, 3 ) =3D=3D=3D "nth" ) {=0A=
				// nth-* requires argument=0A=
				if ( !match[3] ) {=0A=
					Sizzle.error( match[0] );=0A=
				}=0A=
=0A=
				// numeric x and y parameters for Expr.filter.CHILD=0A=
				// remember that false/true cast respectively to 0/1=0A=
				match[4] =3D +( match[4] ? match[5] + (match[6] || 1) : 2 * ( =
match[3] =3D=3D=3D "even" || match[3] =3D=3D=3D "odd" ) );=0A=
				match[5] =3D +( ( match[7] + match[8] ) || match[3] =3D=3D=3D "odd" =
);=0A=
=0A=
			// other types prohibit arguments=0A=
			} else if ( match[3] ) {=0A=
				Sizzle.error( match[0] );=0A=
			}=0A=
=0A=
			return match;=0A=
		},=0A=
=0A=
		"PSEUDO": function( match ) {=0A=
			var excess,=0A=
				unquoted =3D !match[5] && match[2];=0A=
=0A=
			if ( matchExpr["CHILD"].test( match[0] ) ) {=0A=
				return null;=0A=
			}=0A=
=0A=
			// Accept quoted arguments as-is=0A=
			if ( match[3] && match[4] !=3D=3D undefined ) {=0A=
				match[2] =3D match[4];=0A=
=0A=
			// Strip excess characters from unquoted arguments=0A=
			} else if ( unquoted && rpseudo.test( unquoted ) &&=0A=
				// Get excess from tokenize (recursively)=0A=
				(excess =3D tokenize( unquoted, true )) &&=0A=
				// advance to the next closing parenthesis=0A=
				(excess =3D unquoted.indexOf( ")", unquoted.length - excess ) - =
unquoted.length) ) {=0A=
=0A=
				// excess is a negative index=0A=
				match[0] =3D match[0].slice( 0, excess );=0A=
				match[2] =3D unquoted.slice( 0, excess );=0A=
			}=0A=
=0A=
			// Return only captures needed by the pseudo filter method (type and =
argument)=0A=
			return match.slice( 0, 3 );=0A=
		}=0A=
	},=0A=
=0A=
	filter: {=0A=
=0A=
		"TAG": function( nodeNameSelector ) {=0A=
			var nodeName =3D nodeNameSelector.replace( runescape, funescape =
).toLowerCase();=0A=
			return nodeNameSelector =3D=3D=3D "*" ?=0A=
				function() { return true; } :=0A=
				function( elem ) {=0A=
					return elem.nodeName && elem.nodeName.toLowerCase() =3D=3D=3D =
nodeName;=0A=
				};=0A=
		},=0A=
=0A=
		"CLASS": function( className ) {=0A=
			var pattern =3D classCache[ className + " " ];=0A=
=0A=
			return pattern ||=0A=
				(pattern =3D new RegExp( "(^|" + whitespace + ")" + className + "(" =
+ whitespace + "|$)" )) &&=0A=
				classCache( className, function( elem ) {=0A=
					return pattern.test( typeof elem.className =3D=3D=3D "string" && =
elem.className || typeof elem.getAttribute !=3D=3D strundefined && =
elem.getAttribute("class") || "" );=0A=
				});=0A=
		},=0A=
=0A=
		"ATTR": function( name, operator, check ) {=0A=
			return function( elem ) {=0A=
				var result =3D Sizzle.attr( elem, name );=0A=
=0A=
				if ( result =3D=3D null ) {=0A=
					return operator =3D=3D=3D "!=3D";=0A=
				}=0A=
				if ( !operator ) {=0A=
					return true;=0A=
				}=0A=
=0A=
				result +=3D "";=0A=
=0A=
				return operator =3D=3D=3D "=3D" ? result =3D=3D=3D check :=0A=
					operator =3D=3D=3D "!=3D" ? result !=3D=3D check :=0A=
					operator =3D=3D=3D "^=3D" ? check && result.indexOf( check ) =
=3D=3D=3D 0 :=0A=
					operator =3D=3D=3D "*=3D" ? check && result.indexOf( check ) > -1 :=0A=
					operator =3D=3D=3D "$=3D" ? check && result.slice( -check.length ) =
=3D=3D=3D check :=0A=
					operator =3D=3D=3D "~=3D" ? ( " " + result + " " ).indexOf( check ) =
> -1 :=0A=
					operator =3D=3D=3D "|=3D" ? result =3D=3D=3D check || result.slice( =
0, check.length + 1 ) =3D=3D=3D check + "-" :=0A=
					false;=0A=
			};=0A=
		},=0A=
=0A=
		"CHILD": function( type, what, argument, first, last ) {=0A=
			var simple =3D type.slice( 0, 3 ) !=3D=3D "nth",=0A=
				forward =3D type.slice( -4 ) !=3D=3D "last",=0A=
				ofType =3D what =3D=3D=3D "of-type";=0A=
=0A=
			return first =3D=3D=3D 1 && last =3D=3D=3D 0 ?=0A=
=0A=
				// Shortcut for :nth-*(n)=0A=
				function( elem ) {=0A=
					return !!elem.parentNode;=0A=
				} :=0A=
=0A=
				function( elem, context, xml ) {=0A=
					var cache, outerCache, node, diff, nodeIndex, start,=0A=
						dir =3D simple !=3D=3D forward ? "nextSibling" : "previousSibling",=0A=
						parent =3D elem.parentNode,=0A=
						name =3D ofType && elem.nodeName.toLowerCase(),=0A=
						useCache =3D !xml && !ofType;=0A=
=0A=
					if ( parent ) {=0A=
=0A=
						// :(first|last|only)-(child|of-type)=0A=
						if ( simple ) {=0A=
							while ( dir ) {=0A=
								node =3D elem;=0A=
								while ( (node =3D node[ dir ]) ) {=0A=
									if ( ofType ? node.nodeName.toLowerCase() =3D=3D=3D name : =
node.nodeType =3D=3D=3D 1 ) {=0A=
										return false;=0A=
									}=0A=
								}=0A=
								// Reverse direction for :only-* (if we haven't yet done so)=0A=
								start =3D dir =3D type =3D=3D=3D "only" && !start && =
"nextSibling";=0A=
							}=0A=
							return true;=0A=
						}=0A=
=0A=
						start =3D [ forward ? parent.firstChild : parent.lastChild ];=0A=
=0A=
						// non-xml :nth-child(...) stores cache data on `parent`=0A=
						if ( forward && useCache ) {=0A=
							// Seek `elem` from a previously-cached index=0A=
							outerCache =3D parent[ expando ] || (parent[ expando ] =3D {});=0A=
							cache =3D outerCache[ type ] || [];=0A=
							nodeIndex =3D cache[0] =3D=3D=3D dirruns && cache[1];=0A=
							diff =3D cache[0] =3D=3D=3D dirruns && cache[2];=0A=
							node =3D nodeIndex && parent.childNodes[ nodeIndex ];=0A=
=0A=
							while ( (node =3D ++nodeIndex && node && node[ dir ] ||=0A=
=0A=
								// Fallback to seeking `elem` from the start=0A=
								(diff =3D nodeIndex =3D 0) || start.pop()) ) {=0A=
=0A=
								// When found, cache indexes on `parent` and break=0A=
								if ( node.nodeType =3D=3D=3D 1 && ++diff && node =3D=3D=3D elem =
) {=0A=
									outerCache[ type ] =3D [ dirruns, nodeIndex, diff ];=0A=
									break;=0A=
								}=0A=
							}=0A=
=0A=
						// Use previously-cached element index if available=0A=
						} else if ( useCache && (cache =3D (elem[ expando ] || (elem[ =
expando ] =3D {}))[ type ]) && cache[0] =3D=3D=3D dirruns ) {=0A=
							diff =3D cache[1];=0A=
=0A=
						// xml :nth-child(...) or :nth-last-child(...) or =
:nth(-last)?-of-type(...)=0A=
						} else {=0A=
							// Use the same loop as above to seek `elem` from the start=0A=
							while ( (node =3D ++nodeIndex && node && node[ dir ] ||=0A=
								(diff =3D nodeIndex =3D 0) || start.pop()) ) {=0A=
=0A=
								if ( ( ofType ? node.nodeName.toLowerCase() =3D=3D=3D name : =
node.nodeType =3D=3D=3D 1 ) && ++diff ) {=0A=
									// Cache the index of each encountered element=0A=
									if ( useCache ) {=0A=
										(node[ expando ] || (node[ expando ] =3D {}))[ type ] =3D [ =
dirruns, diff ];=0A=
									}=0A=
=0A=
									if ( node =3D=3D=3D elem ) {=0A=
										break;=0A=
									}=0A=
								}=0A=
							}=0A=
						}=0A=
=0A=
						// Incorporate the offset, then check against cycle size=0A=
						diff -=3D last;=0A=
						return diff =3D=3D=3D first || ( diff % first =3D=3D=3D 0 && diff =
/ first >=3D 0 );=0A=
					}=0A=
				};=0A=
		},=0A=
=0A=
		"PSEUDO": function( pseudo, argument ) {=0A=
			// pseudo-class names are case-insensitive=0A=
			// http://www.w3.org/TR/selectors/#pseudo-classes=0A=
			// Prioritize by case sensitivity in case custom pseudos are added =
with uppercase letters=0A=
			// Remember that setFilters inherits from pseudos=0A=
			var args,=0A=
				fn =3D Expr.pseudos[ pseudo ] || Expr.setFilters[ =
pseudo.toLowerCase() ] ||=0A=
					Sizzle.error( "unsupported pseudo: " + pseudo );=0A=
=0A=
			// The user may use createPseudo to indicate that=0A=
			// arguments are needed to create the filter function=0A=
			// just as Sizzle does=0A=
			if ( fn[ expando ] ) {=0A=
				return fn( argument );=0A=
			}=0A=
=0A=
			// But maintain support for old signatures=0A=
			if ( fn.length > 1 ) {=0A=
				args =3D [ pseudo, pseudo, "", argument ];=0A=
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?=0A=
					markFunction(function( seed, matches ) {=0A=
						var idx,=0A=
							matched =3D fn( seed, argument ),=0A=
							i =3D matched.length;=0A=
						while ( i-- ) {=0A=
							idx =3D indexOf.call( seed, matched[i] );=0A=
							seed[ idx ] =3D !( matches[ idx ] =3D matched[i] );=0A=
						}=0A=
					}) :=0A=
					function( elem ) {=0A=
						return fn( elem, 0, args );=0A=
					};=0A=
			}=0A=
=0A=
			return fn;=0A=
		}=0A=
	},=0A=
=0A=
	pseudos: {=0A=
		// Potentially complex pseudos=0A=
		"not": markFunction(function( selector ) {=0A=
			// Trim the selector passed to compile=0A=
			// to avoid treating leading and trailing=0A=
			// spaces as combinators=0A=
			var input =3D [],=0A=
				results =3D [],=0A=
				matcher =3D compile( selector.replace( rtrim, "$1" ) );=0A=
=0A=
			return matcher[ expando ] ?=0A=
				markFunction(function( seed, matches, context, xml ) {=0A=
					var elem,=0A=
						unmatched =3D matcher( seed, null, xml, [] ),=0A=
						i =3D seed.length;=0A=
=0A=
					// Match elements unmatched by `matcher`=0A=
					while ( i-- ) {=0A=
						if ( (elem =3D unmatched[i]) ) {=0A=
							seed[i] =3D !(matches[i] =3D elem);=0A=
						}=0A=
					}=0A=
				}) :=0A=
				function( elem, context, xml ) {=0A=
					input[0] =3D elem;=0A=
					matcher( input, null, xml, results );=0A=
					return !results.pop();=0A=
				};=0A=
		}),=0A=
=0A=
		"has": markFunction(function( selector ) {=0A=
			return function( elem ) {=0A=
				return Sizzle( selector, elem ).length > 0;=0A=
			};=0A=
		}),=0A=
=0A=
		"contains": markFunction(function( text ) {=0A=
			return function( elem ) {=0A=
				return ( elem.textContent || elem.innerText || getText( elem ) =
).indexOf( text ) > -1;=0A=
			};=0A=
		}),=0A=
=0A=
		// "Whether an element is represented by a :lang() selector=0A=
		// is based solely on the element's language value=0A=
		// being equal to the identifier C,=0A=
		// or beginning with the identifier C immediately followed by "-".=0A=
		// The matching of C against the element's language value is performed =
case-insensitively.=0A=
		// The identifier C does not have to be a valid language name."=0A=
		// http://www.w3.org/TR/selectors/#lang-pseudo=0A=
		"lang": markFunction( function( lang ) {=0A=
			// lang value must be a valid identifier=0A=
			if ( !ridentifier.test(lang || "") ) {=0A=
				Sizzle.error( "unsupported lang: " + lang );=0A=
			}=0A=
			lang =3D lang.replace( runescape, funescape ).toLowerCase();=0A=
			return function( elem ) {=0A=
				var elemLang;=0A=
				do {=0A=
					if ( (elemLang =3D documentIsHTML ?=0A=
						elem.lang :=0A=
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {=0A=
=0A=
						elemLang =3D elemLang.toLowerCase();=0A=
						return elemLang =3D=3D=3D lang || elemLang.indexOf( lang + "-" ) =
=3D=3D=3D 0;=0A=
					}=0A=
				} while ( (elem =3D elem.parentNode) && elem.nodeType =3D=3D=3D 1 );=0A=
				return false;=0A=
			};=0A=
		}),=0A=
=0A=
		// Miscellaneous=0A=
		"target": function( elem ) {=0A=
			var hash =3D window.location && window.location.hash;=0A=
			return hash && hash.slice( 1 ) =3D=3D=3D elem.id;=0A=
		},=0A=
=0A=
		"root": function( elem ) {=0A=
			return elem =3D=3D=3D docElem;=0A=
		},=0A=
=0A=
		"focus": function( elem ) {=0A=
			return elem =3D=3D=3D document.activeElement && (!document.hasFocus =
|| document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);=0A=
		},=0A=
=0A=
		// Boolean properties=0A=
		"enabled": function( elem ) {=0A=
			return elem.disabled =3D=3D=3D false;=0A=
		},=0A=
=0A=
		"disabled": function( elem ) {=0A=
			return elem.disabled =3D=3D=3D true;=0A=
		},=0A=
=0A=
		"checked": function( elem ) {=0A=
			// In CSS3, :checked should return both checked and selected elements=0A=
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked=0A=
			var nodeName =3D elem.nodeName.toLowerCase();=0A=
			return (nodeName =3D=3D=3D "input" && !!elem.checked) || (nodeName =
=3D=3D=3D "option" && !!elem.selected);=0A=
		},=0A=
=0A=
		"selected": function( elem ) {=0A=
			// Accessing this property makes selected-by-default=0A=
			// options in Safari work properly=0A=
			if ( elem.parentNode ) {=0A=
				elem.parentNode.selectedIndex;=0A=
			}=0A=
=0A=
			return elem.selected =3D=3D=3D true;=0A=
		},=0A=
=0A=
		// Contents=0A=
		"empty": function( elem ) {=0A=
			// http://www.w3.org/TR/selectors/#empty-pseudo=0A=
			// :empty is only affected by element nodes and content =
nodes(including text(3), cdata(4)),=0A=
			//   not comment, processing instructions, or others=0A=
			// Thanks to Diego Perini for the nodeName shortcut=0A=
			//   Greater than "@" means alpha characters (specifically not =
starting with "#" or "?")=0A=
			for ( elem =3D elem.firstChild; elem; elem =3D elem.nextSibling ) {=0A=
				if ( elem.nodeName > "@" || elem.nodeType =3D=3D=3D 3 || =
elem.nodeType =3D=3D=3D 4 ) {=0A=
					return false;=0A=
				}=0A=
			}=0A=
			return true;=0A=
		},=0A=
=0A=
		"parent": function( elem ) {=0A=
			return !Expr.pseudos["empty"]( elem );=0A=
		},=0A=
=0A=
		// Element/input types=0A=
		"header": function( elem ) {=0A=
			return rheader.test( elem.nodeName );=0A=
		},=0A=
=0A=
		"input": function( elem ) {=0A=
			return rinputs.test( elem.nodeName );=0A=
		},=0A=
=0A=
		"button": function( elem ) {=0A=
			var name =3D elem.nodeName.toLowerCase();=0A=
			return name =3D=3D=3D "input" && elem.type =3D=3D=3D "button" || name =
=3D=3D=3D "button";=0A=
		},=0A=
=0A=
		"text": function( elem ) {=0A=
			var attr;=0A=
			// IE6 and 7 will map elem.type to 'text' for new HTML5 types =
(search, etc)=0A=
			// use getAttribute instead to test this case=0A=
			return elem.nodeName.toLowerCase() =3D=3D=3D "input" &&=0A=
				elem.type =3D=3D=3D "text" &&=0A=
				( (attr =3D elem.getAttribute("type")) =3D=3D null || =
attr.toLowerCase() =3D=3D=3D elem.type );=0A=
		},=0A=
=0A=
		// Position-in-collection=0A=
		"first": createPositionalPseudo(function() {=0A=
			return [ 0 ];=0A=
		}),=0A=
=0A=
		"last": createPositionalPseudo(function( matchIndexes, length ) {=0A=
			return [ length - 1 ];=0A=
		}),=0A=
=0A=
		"eq": createPositionalPseudo(function( matchIndexes, length, argument =
) {=0A=
			return [ argument < 0 ? argument + length : argument ];=0A=
		}),=0A=
=0A=
		"even": createPositionalPseudo(function( matchIndexes, length ) {=0A=
			var i =3D 0;=0A=
			for ( ; i < length; i +=3D 2 ) {=0A=
				matchIndexes.push( i );=0A=
			}=0A=
			return matchIndexes;=0A=
		}),=0A=
=0A=
		"odd": createPositionalPseudo(function( matchIndexes, length ) {=0A=
			var i =3D 1;=0A=
			for ( ; i < length; i +=3D 2 ) {=0A=
				matchIndexes.push( i );=0A=
			}=0A=
			return matchIndexes;=0A=
		}),=0A=
=0A=
		"lt": createPositionalPseudo(function( matchIndexes, length, argument =
) {=0A=
			var i =3D argument < 0 ? argument + length : argument;=0A=
			for ( ; --i >=3D 0; ) {=0A=
				matchIndexes.push( i );=0A=
			}=0A=
			return matchIndexes;=0A=
		}),=0A=
=0A=
		"gt": createPositionalPseudo(function( matchIndexes, length, argument =
) {=0A=
			var i =3D argument < 0 ? argument + length : argument;=0A=
			for ( ; ++i < length; ) {=0A=
				matchIndexes.push( i );=0A=
			}=0A=
			return matchIndexes;=0A=
		})=0A=
	}=0A=
};=0A=
=0A=
Expr.pseudos["nth"] =3D Expr.pseudos["eq"];=0A=
=0A=
// Add button/input type pseudos=0A=
for ( i in { radio: true, checkbox: true, file: true, password: true, =
image: true } ) {=0A=
	Expr.pseudos[ i ] =3D createInputPseudo( i );=0A=
}=0A=
for ( i in { submit: true, reset: true } ) {=0A=
	Expr.pseudos[ i ] =3D createButtonPseudo( i );=0A=
}=0A=
=0A=
// Easy API for creating new setFilters=0A=
function setFilters() {}=0A=
setFilters.prototype =3D Expr.filters =3D Expr.pseudos;=0A=
Expr.setFilters =3D new setFilters();=0A=
=0A=
function tokenize( selector, parseOnly ) {=0A=
	var matched, match, tokens, type,=0A=
		soFar, groups, preFilters,=0A=
		cached =3D tokenCache[ selector + " " ];=0A=
=0A=
	if ( cached ) {=0A=
		return parseOnly ? 0 : cached.slice( 0 );=0A=
	}=0A=
=0A=
	soFar =3D selector;=0A=
	groups =3D [];=0A=
	preFilters =3D Expr.preFilter;=0A=
=0A=
	while ( soFar ) {=0A=
=0A=
		// Comma and first run=0A=
		if ( !matched || (match =3D rcomma.exec( soFar )) ) {=0A=
			if ( match ) {=0A=
				// Don't consume trailing commas as valid=0A=
				soFar =3D soFar.slice( match[0].length ) || soFar;=0A=
			}=0A=
			groups.push( tokens =3D [] );=0A=
		}=0A=
=0A=
		matched =3D false;=0A=
=0A=
		// Combinators=0A=
		if ( (match =3D rcombinators.exec( soFar )) ) {=0A=
			matched =3D match.shift();=0A=
			tokens.push({=0A=
				value: matched,=0A=
				// Cast descendant combinators to space=0A=
				type: match[0].replace( rtrim, " " )=0A=
			});=0A=
			soFar =3D soFar.slice( matched.length );=0A=
		}=0A=
=0A=
		// Filters=0A=
		for ( type in Expr.filter ) {=0A=
			if ( (match =3D matchExpr[ type ].exec( soFar )) && (!preFilters[ =
type ] ||=0A=
				(match =3D preFilters[ type ]( match ))) ) {=0A=
				matched =3D match.shift();=0A=
				tokens.push({=0A=
					value: matched,=0A=
					type: type,=0A=
					matches: match=0A=
				});=0A=
				soFar =3D soFar.slice( matched.length );=0A=
			}=0A=
		}=0A=
=0A=
		if ( !matched ) {=0A=
			break;=0A=
		}=0A=
	}=0A=
=0A=
	// Return the length of the invalid excess=0A=
	// if we're just parsing=0A=
	// Otherwise, throw an error or return tokens=0A=
	return parseOnly ?=0A=
		soFar.length :=0A=
		soFar ?=0A=
			Sizzle.error( selector ) :=0A=
			// Cache the tokens=0A=
			tokenCache( selector, groups ).slice( 0 );=0A=
}=0A=
=0A=
function toSelector( tokens ) {=0A=
	var i =3D 0,=0A=
		len =3D tokens.length,=0A=
		selector =3D "";=0A=
	for ( ; i < len; i++ ) {=0A=
		selector +=3D tokens[i].value;=0A=
	}=0A=
	return selector;=0A=
}=0A=
=0A=
function addCombinator( matcher, combinator, base ) {=0A=
	var dir =3D combinator.dir,=0A=
		checkNonElements =3D base && dir =3D=3D=3D "parentNode",=0A=
		doneName =3D done++;=0A=
=0A=
	return combinator.first ?=0A=
		// Check against closest ancestor/preceding element=0A=
		function( elem, context, xml ) {=0A=
			while ( (elem =3D elem[ dir ]) ) {=0A=
				if ( elem.nodeType =3D=3D=3D 1 || checkNonElements ) {=0A=
					return matcher( elem, context, xml );=0A=
				}=0A=
			}=0A=
		} :=0A=
=0A=
		// Check against all ancestor/preceding elements=0A=
		function( elem, context, xml ) {=0A=
			var data, cache, outerCache,=0A=
				dirkey =3D dirruns + " " + doneName;=0A=
=0A=
			// We can't set arbitrary data on XML nodes, so they don't benefit =
from dir caching=0A=
			if ( xml ) {=0A=
				while ( (elem =3D elem[ dir ]) ) {=0A=
					if ( elem.nodeType =3D=3D=3D 1 || checkNonElements ) {=0A=
						if ( matcher( elem, context, xml ) ) {=0A=
							return true;=0A=
						}=0A=
					}=0A=
				}=0A=
			} else {=0A=
				while ( (elem =3D elem[ dir ]) ) {=0A=
					if ( elem.nodeType =3D=3D=3D 1 || checkNonElements ) {=0A=
						outerCache =3D elem[ expando ] || (elem[ expando ] =3D {});=0A=
						if ( (cache =3D outerCache[ dir ]) && cache[0] =3D=3D=3D dirkey ) {=0A=
							if ( (data =3D cache[1]) =3D=3D=3D true || data =3D=3D=3D =
cachedruns ) {=0A=
								return data =3D=3D=3D true;=0A=
							}=0A=
						} else {=0A=
							cache =3D outerCache[ dir ] =3D [ dirkey ];=0A=
							cache[1] =3D matcher( elem, context, xml ) || cachedruns;=0A=
							if ( cache[1] =3D=3D=3D true ) {=0A=
								return true;=0A=
							}=0A=
						}=0A=
					}=0A=
				}=0A=
			}=0A=
		};=0A=
}=0A=
=0A=
function elementMatcher( matchers ) {=0A=
	return matchers.length > 1 ?=0A=
		function( elem, context, xml ) {=0A=
			var i =3D matchers.length;=0A=
			while ( i-- ) {=0A=
				if ( !matchers[i]( elem, context, xml ) ) {=0A=
					return false;=0A=
				}=0A=
			}=0A=
			return true;=0A=
		} :=0A=
		matchers[0];=0A=
}=0A=
=0A=
function condense( unmatched, map, filter, context, xml ) {=0A=
	var elem,=0A=
		newUnmatched =3D [],=0A=
		i =3D 0,=0A=
		len =3D unmatched.length,=0A=
		mapped =3D map !=3D null;=0A=
=0A=
	for ( ; i < len; i++ ) {=0A=
		if ( (elem =3D unmatched[i]) ) {=0A=
			if ( !filter || filter( elem, context, xml ) ) {=0A=
				newUnmatched.push( elem );=0A=
				if ( mapped ) {=0A=
					map.push( i );=0A=
				}=0A=
			}=0A=
		}=0A=
	}=0A=
=0A=
	return newUnmatched;=0A=
}=0A=
=0A=
function setMatcher( preFilter, selector, matcher, postFilter, =
postFinder, postSelector ) {=0A=
	if ( postFilter && !postFilter[ expando ] ) {=0A=
		postFilter =3D setMatcher( postFilter );=0A=
	}=0A=
	if ( postFinder && !postFinder[ expando ] ) {=0A=
		postFinder =3D setMatcher( postFinder, postSelector );=0A=
	}=0A=
	return markFunction(function( seed, results, context, xml ) {=0A=
		var temp, i, elem,=0A=
			preMap =3D [],=0A=
			postMap =3D [],=0A=
			preexisting =3D results.length,=0A=
=0A=
			// Get initial elements from seed or context=0A=
			elems =3D seed || multipleContexts( selector || "*", context.nodeType =
? [ context ] : context, [] ),=0A=
=0A=
			// Prefilter to get matcher input, preserving a map for seed-results =
synchronization=0A=
			matcherIn =3D preFilter && ( seed || !selector ) ?=0A=
				condense( elems, preMap, preFilter, context, xml ) :=0A=
				elems,=0A=
=0A=
			matcherOut =3D matcher ?=0A=
				// If we have a postFinder, or filtered seed, or non-seed postFilter =
or preexisting results,=0A=
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?=0A=
=0A=
					// ...intermediate processing is necessary=0A=
					[] :=0A=
=0A=
					// ...otherwise use results directly=0A=
					results :=0A=
				matcherIn;=0A=
=0A=
		// Find primary matches=0A=
		if ( matcher ) {=0A=
			matcher( matcherIn, matcherOut, context, xml );=0A=
		}=0A=
=0A=
		// Apply postFilter=0A=
		if ( postFilter ) {=0A=
			temp =3D condense( matcherOut, postMap );=0A=
			postFilter( temp, [], context, xml );=0A=
=0A=
			// Un-match failing elements by moving them back to matcherIn=0A=
			i =3D temp.length;=0A=
			while ( i-- ) {=0A=
				if ( (elem =3D temp[i]) ) {=0A=
					matcherOut[ postMap[i] ] =3D !(matcherIn[ postMap[i] ] =3D elem);=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		if ( seed ) {=0A=
			if ( postFinder || preFilter ) {=0A=
				if ( postFinder ) {=0A=
					// Get the final matcherOut by condensing this intermediate into =
postFinder contexts=0A=
					temp =3D [];=0A=
					i =3D matcherOut.length;=0A=
					while ( i-- ) {=0A=
						if ( (elem =3D matcherOut[i]) ) {=0A=
							// Restore matcherIn since elem is not yet a final match=0A=
							temp.push( (matcherIn[i] =3D elem) );=0A=
						}=0A=
					}=0A=
					postFinder( null, (matcherOut =3D []), temp, xml );=0A=
				}=0A=
=0A=
				// Move matched elements from seed to results to keep them =
synchronized=0A=
				i =3D matcherOut.length;=0A=
				while ( i-- ) {=0A=
					if ( (elem =3D matcherOut[i]) &&=0A=
						(temp =3D postFinder ? indexOf.call( seed, elem ) : preMap[i]) > =
-1 ) {=0A=
=0A=
						seed[temp] =3D !(results[temp] =3D elem);=0A=
					}=0A=
				}=0A=
			}=0A=
=0A=
		// Add elements to results, through postFinder if defined=0A=
		} else {=0A=
			matcherOut =3D condense(=0A=
				matcherOut =3D=3D=3D results ?=0A=
					matcherOut.splice( preexisting, matcherOut.length ) :=0A=
					matcherOut=0A=
			);=0A=
			if ( postFinder ) {=0A=
				postFinder( null, results, matcherOut, xml );=0A=
			} else {=0A=
				push.apply( results, matcherOut );=0A=
			}=0A=
		}=0A=
	});=0A=
}=0A=
=0A=
function matcherFromTokens( tokens ) {=0A=
	var checkContext, matcher, j,=0A=
		len =3D tokens.length,=0A=
		leadingRelative =3D Expr.relative[ tokens[0].type ],=0A=
		implicitRelative =3D leadingRelative || Expr.relative[" "],=0A=
		i =3D leadingRelative ? 1 : 0,=0A=
=0A=
		// The foundational matcher ensures that elements are reachable from =
top-level context(s)=0A=
		matchContext =3D addCombinator( function( elem ) {=0A=
			return elem =3D=3D=3D checkContext;=0A=
		}, implicitRelative, true ),=0A=
		matchAnyContext =3D addCombinator( function( elem ) {=0A=
			return indexOf.call( checkContext, elem ) > -1;=0A=
		}, implicitRelative, true ),=0A=
		matchers =3D [ function( elem, context, xml ) {=0A=
			return ( !leadingRelative && ( xml || context !=3D=3D =
outermostContext ) ) || (=0A=
				(checkContext =3D context).nodeType ?=0A=
					matchContext( elem, context, xml ) :=0A=
					matchAnyContext( elem, context, xml ) );=0A=
		} ];=0A=
=0A=
	for ( ; i < len; i++ ) {=0A=
		if ( (matcher =3D Expr.relative[ tokens[i].type ]) ) {=0A=
			matchers =3D [ addCombinator(elementMatcher( matchers ), matcher) ];=0A=
		} else {=0A=
			matcher =3D Expr.filter[ tokens[i].type ].apply( null, =
tokens[i].matches );=0A=
=0A=
			// Return special upon seeing a positional matcher=0A=
			if ( matcher[ expando ] ) {=0A=
				// Find the next relative operator (if any) for proper handling=0A=
				j =3D ++i;=0A=
				for ( ; j < len; j++ ) {=0A=
					if ( Expr.relative[ tokens[j].type ] ) {=0A=
						break;=0A=
					}=0A=
				}=0A=
				return setMatcher(=0A=
					i > 1 && elementMatcher( matchers ),=0A=
					i > 1 && toSelector(=0A=
						// If the preceding token was a descendant combinator, insert an =
implicit any-element `*`=0A=
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type =
=3D=3D=3D " " ? "*" : "" })=0A=
					).replace( rtrim, "$1" ),=0A=
					matcher,=0A=
					i < j && matcherFromTokens( tokens.slice( i, j ) ),=0A=
					j < len && matcherFromTokens( (tokens =3D tokens.slice( j )) ),=0A=
					j < len && toSelector( tokens )=0A=
				);=0A=
			}=0A=
			matchers.push( matcher );=0A=
		}=0A=
	}=0A=
=0A=
	return elementMatcher( matchers );=0A=
}=0A=
=0A=
function matcherFromGroupMatchers( elementMatchers, setMatchers ) {=0A=
	// A counter to specify which element is currently being matched=0A=
	var matcherCachedRuns =3D 0,=0A=
		bySet =3D setMatchers.length > 0,=0A=
		byElement =3D elementMatchers.length > 0,=0A=
		superMatcher =3D function( seed, context, xml, results, expandContext =
) {=0A=
			var elem, j, matcher,=0A=
				setMatched =3D [],=0A=
				matchedCount =3D 0,=0A=
				i =3D "0",=0A=
				unmatched =3D seed && [],=0A=
				outermost =3D expandContext !=3D null,=0A=
				contextBackup =3D outermostContext,=0A=
				// We must always have either seed elements or context=0A=
				elems =3D seed || byElement && Expr.find["TAG"]( "*", expandContext =
&& context.parentNode || context ),=0A=
				// Use integer dirruns iff this is the outermost matcher=0A=
				dirrunsUnique =3D (dirruns +=3D contextBackup =3D=3D null ? 1 : =
Math.random() || 0.1);=0A=
=0A=
			if ( outermost ) {=0A=
				outermostContext =3D context !=3D=3D document && context;=0A=
				cachedruns =3D matcherCachedRuns;=0A=
			}=0A=
=0A=
			// Add elements passing elementMatchers directly to results=0A=
			// Keep `i` a string if there are no elements so `matchedCount` will =
be "00" below=0A=
			for ( ; (elem =3D elems[i]) !=3D null; i++ ) {=0A=
				if ( byElement && elem ) {=0A=
					j =3D 0;=0A=
					while ( (matcher =3D elementMatchers[j++]) ) {=0A=
						if ( matcher( elem, context, xml ) ) {=0A=
							results.push( elem );=0A=
							break;=0A=
						}=0A=
					}=0A=
					if ( outermost ) {=0A=
						dirruns =3D dirrunsUnique;=0A=
						cachedruns =3D ++matcherCachedRuns;=0A=
					}=0A=
				}=0A=
=0A=
				// Track unmatched elements for set filters=0A=
				if ( bySet ) {=0A=
					// They will have gone through all possible matchers=0A=
					if ( (elem =3D !matcher && elem) ) {=0A=
						matchedCount--;=0A=
					}=0A=
=0A=
					// Lengthen the array for every element, matched or not=0A=
					if ( seed ) {=0A=
						unmatched.push( elem );=0A=
					}=0A=
				}=0A=
			}=0A=
=0A=
			// Apply set filters to unmatched elements=0A=
			matchedCount +=3D i;=0A=
			if ( bySet && i !=3D=3D matchedCount ) {=0A=
				j =3D 0;=0A=
				while ( (matcher =3D setMatchers[j++]) ) {=0A=
					matcher( unmatched, setMatched, context, xml );=0A=
				}=0A=
=0A=
				if ( seed ) {=0A=
					// Reintegrate element matches to eliminate the need for sorting=0A=
					if ( matchedCount > 0 ) {=0A=
						while ( i-- ) {=0A=
							if ( !(unmatched[i] || setMatched[i]) ) {=0A=
								setMatched[i] =3D pop.call( results );=0A=
							}=0A=
						}=0A=
					}=0A=
=0A=
					// Discard index placeholder values to get only actual matches=0A=
					setMatched =3D condense( setMatched );=0A=
				}=0A=
=0A=
				// Add matches to results=0A=
				push.apply( results, setMatched );=0A=
=0A=
				// Seedless set matches succeeding multiple successful matchers =
stipulate sorting=0A=
				if ( outermost && !seed && setMatched.length > 0 &&=0A=
					( matchedCount + setMatchers.length ) > 1 ) {=0A=
=0A=
					Sizzle.uniqueSort( results );=0A=
				}=0A=
			}=0A=
=0A=
			// Override manipulation of globals by nested matchers=0A=
			if ( outermost ) {=0A=
				dirruns =3D dirrunsUnique;=0A=
				outermostContext =3D contextBackup;=0A=
			}=0A=
=0A=
			return unmatched;=0A=
		};=0A=
=0A=
	return bySet ?=0A=
		markFunction( superMatcher ) :=0A=
		superMatcher;=0A=
}=0A=
=0A=
compile =3D Sizzle.compile =3D function( selector, group /* Internal Use =
Only */ ) {=0A=
	var i,=0A=
		setMatchers =3D [],=0A=
		elementMatchers =3D [],=0A=
		cached =3D compilerCache[ selector + " " ];=0A=
=0A=
	if ( !cached ) {=0A=
		// Generate a function of recursive functions that can be used to =
check each element=0A=
		if ( !group ) {=0A=
			group =3D tokenize( selector );=0A=
		}=0A=
		i =3D group.length;=0A=
		while ( i-- ) {=0A=
			cached =3D matcherFromTokens( group[i] );=0A=
			if ( cached[ expando ] ) {=0A=
				setMatchers.push( cached );=0A=
			} else {=0A=
				elementMatchers.push( cached );=0A=
			}=0A=
		}=0A=
=0A=
		// Cache the compiled function=0A=
		cached =3D compilerCache( selector, matcherFromGroupMatchers( =
elementMatchers, setMatchers ) );=0A=
	}=0A=
	return cached;=0A=
};=0A=
=0A=
function multipleContexts( selector, contexts, results ) {=0A=
	var i =3D 0,=0A=
		len =3D contexts.length;=0A=
	for ( ; i < len; i++ ) {=0A=
		Sizzle( selector, contexts[i], results );=0A=
	}=0A=
	return results;=0A=
}=0A=
=0A=
function select( selector, context, results, seed ) {=0A=
	var i, tokens, token, type, find,=0A=
		match =3D tokenize( selector );=0A=
=0A=
	if ( !seed ) {=0A=
		// Try to minimize operations if there is only one group=0A=
		if ( match.length =3D=3D=3D 1 ) {=0A=
=0A=
			// Take a shortcut and set the context if the root selector is an ID=0A=
			tokens =3D match[0] =3D match[0].slice( 0 );=0A=
			if ( tokens.length > 2 && (token =3D tokens[0]).type =3D=3D=3D "ID" &&=0A=
					support.getById && context.nodeType =3D=3D=3D 9 && documentIsHTML &&=0A=
					Expr.relative[ tokens[1].type ] ) {=0A=
=0A=
				context =3D ( Expr.find["ID"]( token.matches[0].replace(runescape, =
funescape), context ) || [] )[0];=0A=
				if ( !context ) {=0A=
					return results;=0A=
				}=0A=
				selector =3D selector.slice( tokens.shift().value.length );=0A=
			}=0A=
=0A=
			// Fetch a seed set for right-to-left matching=0A=
			i =3D matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;=0A=
			while ( i-- ) {=0A=
				token =3D tokens[i];=0A=
=0A=
				// Abort if we hit a combinator=0A=
				if ( Expr.relative[ (type =3D token.type) ] ) {=0A=
					break;=0A=
				}=0A=
				if ( (find =3D Expr.find[ type ]) ) {=0A=
					// Search, expanding context for leading sibling combinators=0A=
					if ( (seed =3D find(=0A=
						token.matches[0].replace( runescape, funescape ),=0A=
						rsibling.test( tokens[0].type ) && context.parentNode || context=0A=
					)) ) {=0A=
=0A=
						// If seed is empty or no tokens remain, we can return early=0A=
						tokens.splice( i, 1 );=0A=
						selector =3D seed.length && toSelector( tokens );=0A=
						if ( !selector ) {=0A=
							push.apply( results, seed );=0A=
							return results;=0A=
						}=0A=
=0A=
						break;=0A=
					}=0A=
				}=0A=
			}=0A=
		}=0A=
	}=0A=
=0A=
	// Compile and execute a filtering function=0A=
	// Provide `match` to avoid retokenization if we modified the selector =
above=0A=
	compile( selector, match )(=0A=
		seed,=0A=
		context,=0A=
		!documentIsHTML,=0A=
		results,=0A=
		rsibling.test( selector )=0A=
	);=0A=
	return results;=0A=
}=0A=
=0A=
// One-time assignments=0A=
=0A=
// Sort stability=0A=
support.sortStable =3D expando.split("").sort( sortOrder ).join("") =
=3D=3D=3D expando;=0A=
=0A=
// Support: Chrome<14=0A=
// Always assume duplicates if they aren't passed to the comparison =
function=0A=
support.detectDuplicates =3D hasDuplicate;=0A=
=0A=
// Initialize against the default document=0A=
setDocument();=0A=
=0A=
// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)=0A=
// Detached nodes confoundingly follow *each other*=0A=
support.sortDetached =3D assert(function( div1 ) {=0A=
	// Should return 1, but returns 4 (following)=0A=
	return div1.compareDocumentPosition( document.createElement("div") ) & =
1;=0A=
});=0A=
=0A=
// Support: IE<8=0A=
// Prevent attribute/property "interpolation"=0A=
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx=0A=
if ( !assert(function( div ) {=0A=
	div.innerHTML =3D "<a href=3D'#'></a>";=0A=
	return div.firstChild.getAttribute("href") =3D=3D=3D "#" ;=0A=
}) ) {=0A=
	addHandle( "type|href|height|width", function( elem, name, isXML ) {=0A=
		if ( !isXML ) {=0A=
			return elem.getAttribute( name, name.toLowerCase() =3D=3D=3D "type" ? =
1 : 2 );=0A=
		}=0A=
	});=0A=
}=0A=
=0A=
// Support: IE<9=0A=
// Use defaultValue in place of getAttribute("value")=0A=
if ( !support.attributes || !assert(function( div ) {=0A=
	div.innerHTML =3D "<input/>";=0A=
	div.firstChild.setAttribute( "value", "" );=0A=
	return div.firstChild.getAttribute( "value" ) =3D=3D=3D "";=0A=
}) ) {=0A=
	addHandle( "value", function( elem, name, isXML ) {=0A=
		if ( !isXML && elem.nodeName.toLowerCase() =3D=3D=3D "input" ) {=0A=
			return elem.defaultValue;=0A=
		}=0A=
	});=0A=
}=0A=
=0A=
// Support: IE<9=0A=
// Use getAttributeNode to fetch booleans when getAttribute lies=0A=
if ( !assert(function( div ) {=0A=
	return div.getAttribute("disabled") =3D=3D null;=0A=
}) ) {=0A=
	addHandle( booleans, function( elem, name, isXML ) {=0A=
		var val;=0A=
		if ( !isXML ) {=0A=
			return (val =3D elem.getAttributeNode( name )) && val.specified ?=0A=
				val.value :=0A=
				elem[ name ] =3D=3D=3D true ? name.toLowerCase() : null;=0A=
		}=0A=
	});=0A=
}=0A=
=0A=
jQuery.find =3D Sizzle;=0A=
jQuery.expr =3D Sizzle.selectors;=0A=
jQuery.expr[":"] =3D jQuery.expr.pseudos;=0A=
jQuery.unique =3D Sizzle.uniqueSort;=0A=
jQuery.text =3D Sizzle.getText;=0A=
jQuery.isXMLDoc =3D Sizzle.isXML;=0A=
jQuery.contains =3D Sizzle.contains;=0A=
=0A=
=0A=
})( window );=0A=
// String to Object options format cache=0A=
var optionsCache =3D {};=0A=
=0A=
// Convert String-formatted options into Object-formatted ones and store =
in cache=0A=
function createOptions( options ) {=0A=
	var object =3D optionsCache[ options ] =3D {};=0A=
	jQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) =
{=0A=
		object[ flag ] =3D true;=0A=
	});=0A=
	return object;=0A=
}=0A=
=0A=
/*=0A=
 * Create a callback list using the following parameters:=0A=
 *=0A=
 *	options: an optional list of space-separated options that will change =
how=0A=
 *			the callback list behaves or a more traditional option object=0A=
 *=0A=
 * By default a callback list will act like an event callback list and =
can be=0A=
 * "fired" multiple times.=0A=
 *=0A=
 * Possible options:=0A=
 *=0A=
 *	once:			will ensure the callback list can only be fired once (like a =
Deferred)=0A=
 *=0A=
 *	memory:			will keep track of previous values and will call any =
callback added=0A=
 *					after the list has been fired right away with the latest =
"memorized"=0A=
 *					values (like a Deferred)=0A=
 *=0A=
 *	unique:			will ensure a callback can only be added once (no duplicate =
in the list)=0A=
 *=0A=
 *	stopOnFalse:	interrupt callings when a callback returns false=0A=
 *=0A=
 */=0A=
jQuery.Callbacks =3D function( options ) {=0A=
=0A=
	// Convert options from String-formatted to Object-formatted if needed=0A=
	// (we check in cache first)=0A=
	options =3D typeof options =3D=3D=3D "string" ?=0A=
		( optionsCache[ options ] || createOptions( options ) ) :=0A=
		jQuery.extend( {}, options );=0A=
=0A=
	var // Last fire value (for non-forgettable lists)=0A=
		memory,=0A=
		// Flag to know if list was already fired=0A=
		fired,=0A=
		// Flag to know if list is currently firing=0A=
		firing,=0A=
		// First callback to fire (used internally by add and fireWith)=0A=
		firingStart,=0A=
		// End of the loop when firing=0A=
		firingLength,=0A=
		// Index of currently firing callback (modified by remove if needed)=0A=
		firingIndex,=0A=
		// Actual callback list=0A=
		list =3D [],=0A=
		// Stack of fire calls for repeatable lists=0A=
		stack =3D !options.once && [],=0A=
		// Fire callbacks=0A=
		fire =3D function( data ) {=0A=
			memory =3D options.memory && data;=0A=
			fired =3D true;=0A=
			firingIndex =3D firingStart || 0;=0A=
			firingStart =3D 0;=0A=
			firingLength =3D list.length;=0A=
			firing =3D true;=0A=
			for ( ; list && firingIndex < firingLength; firingIndex++ ) {=0A=
				if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) =3D=3D=3D =
false && options.stopOnFalse ) {=0A=
					memory =3D false; // To prevent further calls using add=0A=
					break;=0A=
				}=0A=
			}=0A=
			firing =3D false;=0A=
			if ( list ) {=0A=
				if ( stack ) {=0A=
					if ( stack.length ) {=0A=
						fire( stack.shift() );=0A=
					}=0A=
				} else if ( memory ) {=0A=
					list =3D [];=0A=
				} else {=0A=
					self.disable();=0A=
				}=0A=
			}=0A=
		},=0A=
		// Actual Callbacks object=0A=
		self =3D {=0A=
			// Add a callback or a collection of callbacks to the list=0A=
			add: function() {=0A=
				if ( list ) {=0A=
					// First, we save the current length=0A=
					var start =3D list.length;=0A=
					(function add( args ) {=0A=
						jQuery.each( args, function( _, arg ) {=0A=
							var type =3D jQuery.type( arg );=0A=
							if ( type =3D=3D=3D "function" ) {=0A=
								if ( !options.unique || !self.has( arg ) ) {=0A=
									list.push( arg );=0A=
								}=0A=
							} else if ( arg && arg.length && type !=3D=3D "string" ) {=0A=
								// Inspect recursively=0A=
								add( arg );=0A=
							}=0A=
						});=0A=
					})( arguments );=0A=
					// Do we need to add the callbacks to the=0A=
					// current firing batch?=0A=
					if ( firing ) {=0A=
						firingLength =3D list.length;=0A=
					// With memory, if we're not firing then=0A=
					// we should call right away=0A=
					} else if ( memory ) {=0A=
						firingStart =3D start;=0A=
						fire( memory );=0A=
					}=0A=
				}=0A=
				return this;=0A=
			},=0A=
			// Remove a callback from the list=0A=
			remove: function() {=0A=
				if ( list ) {=0A=
					jQuery.each( arguments, function( _, arg ) {=0A=
						var index;=0A=
						while( ( index =3D jQuery.inArray( arg, list, index ) ) > -1 ) {=0A=
							list.splice( index, 1 );=0A=
							// Handle firing indexes=0A=
							if ( firing ) {=0A=
								if ( index <=3D firingLength ) {=0A=
									firingLength--;=0A=
								}=0A=
								if ( index <=3D firingIndex ) {=0A=
									firingIndex--;=0A=
								}=0A=
							}=0A=
						}=0A=
					});=0A=
				}=0A=
				return this;=0A=
			},=0A=
			// Check if a given callback is in the list.=0A=
			// If no argument is given, return whether or not list has callbacks =
attached.=0A=
			has: function( fn ) {=0A=
				return fn ? jQuery.inArray( fn, list ) > -1 : !!( list && =
list.length );=0A=
			},=0A=
			// Remove all callbacks from the list=0A=
			empty: function() {=0A=
				list =3D [];=0A=
				firingLength =3D 0;=0A=
				return this;=0A=
			},=0A=
			// Have the list do nothing anymore=0A=
			disable: function() {=0A=
				list =3D stack =3D memory =3D undefined;=0A=
				return this;=0A=
			},=0A=
			// Is it disabled?=0A=
			disabled: function() {=0A=
				return !list;=0A=
			},=0A=
			// Lock the list in its current state=0A=
			lock: function() {=0A=
				stack =3D undefined;=0A=
				if ( !memory ) {=0A=
					self.disable();=0A=
				}=0A=
				return this;=0A=
			},=0A=
			// Is it locked?=0A=
			locked: function() {=0A=
				return !stack;=0A=
			},=0A=
			// Call all callbacks with the given context and arguments=0A=
			fireWith: function( context, args ) {=0A=
				if ( list && ( !fired || stack ) ) {=0A=
					args =3D args || [];=0A=
					args =3D [ context, args.slice ? args.slice() : args ];=0A=
					if ( firing ) {=0A=
						stack.push( args );=0A=
					} else {=0A=
						fire( args );=0A=
					}=0A=
				}=0A=
				return this;=0A=
			},=0A=
			// Call all the callbacks with the given arguments=0A=
			fire: function() {=0A=
				self.fireWith( this, arguments );=0A=
				return this;=0A=
			},=0A=
			// To know if the callbacks have already been called at least once=0A=
			fired: function() {=0A=
				return !!fired;=0A=
			}=0A=
		};=0A=
=0A=
	return self;=0A=
};=0A=
jQuery.extend({=0A=
=0A=
	Deferred: function( func ) {=0A=
		var tuples =3D [=0A=
				// action, add listener, listener list, final state=0A=
				[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],=0A=
				[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],=0A=
				[ "notify", "progress", jQuery.Callbacks("memory") ]=0A=
			],=0A=
			state =3D "pending",=0A=
			promise =3D {=0A=
				state: function() {=0A=
					return state;=0A=
				},=0A=
				always: function() {=0A=
					deferred.done( arguments ).fail( arguments );=0A=
					return this;=0A=
				},=0A=
				then: function( /* fnDone, fnFail, fnProgress */ ) {=0A=
					var fns =3D arguments;=0A=
					return jQuery.Deferred(function( newDefer ) {=0A=
						jQuery.each( tuples, function( i, tuple ) {=0A=
							var action =3D tuple[ 0 ],=0A=
								fn =3D jQuery.isFunction( fns[ i ] ) && fns[ i ];=0A=
							// deferred[ done | fail | progress ] for forwarding actions to =
newDefer=0A=
							deferred[ tuple[1] ](function() {=0A=
								var returned =3D fn && fn.apply( this, arguments );=0A=
								if ( returned && jQuery.isFunction( returned.promise ) ) {=0A=
									returned.promise()=0A=
										.done( newDefer.resolve )=0A=
										.fail( newDefer.reject )=0A=
										.progress( newDefer.notify );=0A=
								} else {=0A=
									newDefer[ action + "With" ]( this =3D=3D=3D promise ? =
newDefer.promise() : this, fn ? [ returned ] : arguments );=0A=
								}=0A=
							});=0A=
						});=0A=
						fns =3D null;=0A=
					}).promise();=0A=
				},=0A=
				// Get a promise for this deferred=0A=
				// If obj is provided, the promise aspect is added to the object=0A=
				promise: function( obj ) {=0A=
					return obj !=3D null ? jQuery.extend( obj, promise ) : promise;=0A=
				}=0A=
			},=0A=
			deferred =3D {};=0A=
=0A=
		// Keep pipe for back-compat=0A=
		promise.pipe =3D promise.then;=0A=
=0A=
		// Add list-specific methods=0A=
		jQuery.each( tuples, function( i, tuple ) {=0A=
			var list =3D tuple[ 2 ],=0A=
				stateString =3D tuple[ 3 ];=0A=
=0A=
			// promise[ done | fail | progress ] =3D list.add=0A=
			promise[ tuple[1] ] =3D list.add;=0A=
=0A=
			// Handle state=0A=
			if ( stateString ) {=0A=
				list.add(function() {=0A=
					// state =3D [ resolved | rejected ]=0A=
					state =3D stateString;=0A=
=0A=
				// [ reject_list | resolve_list ].disable; progress_list.lock=0A=
				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );=0A=
			}=0A=
=0A=
			// deferred[ resolve | reject | notify ]=0A=
			deferred[ tuple[0] ] =3D function() {=0A=
				deferred[ tuple[0] + "With" ]( this =3D=3D=3D deferred ? promise : =
this, arguments );=0A=
				return this;=0A=
			};=0A=
			deferred[ tuple[0] + "With" ] =3D list.fireWith;=0A=
		});=0A=
=0A=
		// Make the deferred a promise=0A=
		promise.promise( deferred );=0A=
=0A=
		// Call given func if any=0A=
		if ( func ) {=0A=
			func.call( deferred, deferred );=0A=
		}=0A=
=0A=
		// All done!=0A=
		return deferred;=0A=
	},=0A=
=0A=
	// Deferred helper=0A=
	when: function( subordinate /* , ..., subordinateN */ ) {=0A=
		var i =3D 0,=0A=
			resolveValues =3D core_slice.call( arguments ),=0A=
			length =3D resolveValues.length,=0A=
=0A=
			// the count of uncompleted subordinates=0A=
			remaining =3D length !=3D=3D 1 || ( subordinate && jQuery.isFunction( =
subordinate.promise ) ) ? length : 0,=0A=
=0A=
			// the master Deferred. If resolveValues consist of only a single =
Deferred, just use that.=0A=
			deferred =3D remaining =3D=3D=3D 1 ? subordinate : jQuery.Deferred(),=0A=
=0A=
			// Update function for both resolve and progress values=0A=
			updateFunc =3D function( i, contexts, values ) {=0A=
				return function( value ) {=0A=
					contexts[ i ] =3D this;=0A=
					values[ i ] =3D arguments.length > 1 ? core_slice.call( arguments ) =
: value;=0A=
					if( values =3D=3D=3D progressValues ) {=0A=
						deferred.notifyWith( contexts, values );=0A=
					} else if ( !( --remaining ) ) {=0A=
						deferred.resolveWith( contexts, values );=0A=
					}=0A=
				};=0A=
			},=0A=
=0A=
			progressValues, progressContexts, resolveContexts;=0A=
=0A=
		// add listeners to Deferred subordinates; treat others as resolved=0A=
		if ( length > 1 ) {=0A=
			progressValues =3D new Array( length );=0A=
			progressContexts =3D new Array( length );=0A=
			resolveContexts =3D new Array( length );=0A=
			for ( ; i < length; i++ ) {=0A=
				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i =
].promise ) ) {=0A=
					resolveValues[ i ].promise()=0A=
						.done( updateFunc( i, resolveContexts, resolveValues ) )=0A=
						.fail( deferred.reject )=0A=
						.progress( updateFunc( i, progressContexts, progressValues ) );=0A=
				} else {=0A=
					--remaining;=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		// if we're not waiting on anything, resolve the master=0A=
		if ( !remaining ) {=0A=
			deferred.resolveWith( resolveContexts, resolveValues );=0A=
		}=0A=
=0A=
		return deferred.promise();=0A=
	}=0A=
});=0A=
jQuery.support =3D (function( support ) {=0A=
	var input =3D document.createElement("input"),=0A=
		fragment =3D document.createDocumentFragment(),=0A=
		div =3D document.createElement("div"),=0A=
		select =3D document.createElement("select"),=0A=
		opt =3D select.appendChild( document.createElement("option") );=0A=
=0A=
	// Finish early in limited environments=0A=
	if ( !input.type ) {=0A=
		return support;=0A=
	}=0A=
=0A=
	input.type =3D "checkbox";=0A=
=0A=
	// Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3=0A=
	// Check the default checkbox/radio value ("" on old WebKit; "on" =
elsewhere)=0A=
	support.checkOn =3D input.value !=3D=3D "";=0A=
=0A=
	// Must access the parent to make an option select properly=0A=
	// Support: IE9, IE10=0A=
	support.optSelected =3D opt.selected;=0A=
=0A=
	// Will be defined later=0A=
	support.reliableMarginRight =3D true;=0A=
	support.boxSizingReliable =3D true;=0A=
	support.pixelPosition =3D false;=0A=
=0A=
	// Make sure checked status is properly cloned=0A=
	// Support: IE9, IE10=0A=
	input.checked =3D true;=0A=
	support.noCloneChecked =3D input.cloneNode( true ).checked;=0A=
=0A=
	// Make sure that the options inside disabled selects aren't marked as =
disabled=0A=
	// (WebKit marks them as disabled)=0A=
	select.disabled =3D true;=0A=
	support.optDisabled =3D !opt.disabled;=0A=
=0A=
	// Check if an input maintains its value after becoming a radio=0A=
	// Support: IE9, IE10=0A=
	input =3D document.createElement("input");=0A=
	input.value =3D "t";=0A=
	input.type =3D "radio";=0A=
	support.radioValue =3D input.value =3D=3D=3D "t";=0A=
=0A=
	// #11217 - WebKit loses check when the name is after the checked =
attribute=0A=
	input.setAttribute( "checked", "t" );=0A=
	input.setAttribute( "name", "t" );=0A=
=0A=
	fragment.appendChild( input );=0A=
=0A=
	// Support: Safari 5.1, Android 4.x, Android 2.3=0A=
	// old WebKit doesn't clone checked state correctly in fragments=0A=
	support.checkClone =3D fragment.cloneNode( true ).cloneNode( true =
).lastChild.checked;=0A=
=0A=
	// Support: Firefox, Chrome, Safari=0A=
	// Beware of CSP restrictions =
(https://developer.mozilla.org/en/Security/CSP)=0A=
	support.focusinBubbles =3D "onfocusin" in window;=0A=
=0A=
	div.style.backgroundClip =3D "content-box";=0A=
	div.cloneNode( true ).style.backgroundClip =3D "";=0A=
	support.clearCloneStyle =3D div.style.backgroundClip =3D=3D=3D =
"content-box";=0A=
=0A=
	// Run tests that need a body at doc ready=0A=
	jQuery(function() {=0A=
		var container, marginDiv,=0A=
			// Support: Firefox, Android 2.3 (Prefixed box-sizing versions).=0A=
			divReset =3D =
"padding:0;margin:0;border:0;display:block;-webkit-box-sizing:content-box=
;-moz-box-sizing:content-box;box-sizing:content-box",=0A=
			body =3D document.getElementsByTagName("body")[ 0 ];=0A=
=0A=
		if ( !body ) {=0A=
			// Return for frameset docs that don't have a body=0A=
			return;=0A=
		}=0A=
=0A=
		container =3D document.createElement("div");=0A=
		container.style.cssText =3D =
"border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-to=
p:1px";=0A=
=0A=
		// Check box-sizing and margin behavior.=0A=
		body.appendChild( container ).appendChild( div );=0A=
		div.innerHTML =3D "";=0A=
		// Support: Firefox, Android 2.3 (Prefixed box-sizing versions).=0A=
		div.style.cssText =3D =
"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:bord=
er-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;posit=
ion:absolute;top:1%";=0A=
=0A=
		// Workaround failing boxSizing test due to offsetWidth returning =
wrong value=0A=
		// with some non-1 values of body zoom, ticket #13543=0A=
		jQuery.swap( body, body.style.zoom !=3D null ? { zoom: 1 } : {}, =
function() {=0A=
			support.boxSizing =3D div.offsetWidth =3D=3D=3D 4;=0A=
		});=0A=
=0A=
		// Use window.getComputedStyle because jsdom on node.js will break =
without it.=0A=
		if ( window.getComputedStyle ) {=0A=
			support.pixelPosition =3D ( window.getComputedStyle( div, null ) || =
{} ).top !=3D=3D "1%";=0A=
			support.boxSizingReliable =3D ( window.getComputedStyle( div, null ) =
|| { width: "4px" } ).width =3D=3D=3D "4px";=0A=
=0A=
			// Support: Android 2.3=0A=
			// Check if div with explicit width and no margin-right incorrectly=0A=
			// gets computed margin-right based on width of container. (#3333)=0A=
			// WebKit Bug 13343 - getComputedStyle returns wrong value for =
margin-right=0A=
			marginDiv =3D div.appendChild( document.createElement("div") );=0A=
			marginDiv.style.cssText =3D div.style.cssText =3D divReset;=0A=
			marginDiv.style.marginRight =3D marginDiv.style.width =3D "0";=0A=
			div.style.width =3D "1px";=0A=
=0A=
			support.reliableMarginRight =3D=0A=
				!parseFloat( ( window.getComputedStyle( marginDiv, null ) || {} =
).marginRight );=0A=
		}=0A=
=0A=
		body.removeChild( container );=0A=
	});=0A=
=0A=
	return support;=0A=
})( {} );=0A=
=0A=
/*=0A=
	Implementation Summary=0A=
=0A=
	1. Enforce API surface and semantic compatibility with 1.9.x branch=0A=
	2. Improve the module's maintainability by reducing the storage=0A=
		paths to a single mechanism.=0A=
	3. Use the same single mechanism to support "private" and "user" data.=0A=
	4. _Never_ expose "private" data to user code (TODO: Drop _data, =
_removeData)=0A=
	5. Avoid exposing implementation details on user objects (eg. expando =
properties)=0A=
	6. Provide a clear path for implementation upgrade to WeakMap in 2014=0A=
*/=0A=
var data_user, data_priv,=0A=
	rbrace =3D /(?:\{[\s\S]*\}|\[[\s\S]*\])$/,=0A=
	rmultiDash =3D /([A-Z])/g;=0A=
=0A=
function Data() {=0A=
	// Support: Android < 4,=0A=
	// Old WebKit does not have Object.preventExtensions/freeze method,=0A=
	// return new empty object instead with no [[set]] accessor=0A=
	Object.defineProperty( this.cache =3D {}, 0, {=0A=
		get: function() {=0A=
			return {};=0A=
		}=0A=
	});=0A=
=0A=
	this.expando =3D jQuery.expando + Math.random();=0A=
}=0A=
=0A=
Data.uid =3D 1;=0A=
=0A=
Data.accepts =3D function( owner ) {=0A=
	// Accepts only:=0A=
	//  - Node=0A=
	//    - Node.ELEMENT_NODE=0A=
	//    - Node.DOCUMENT_NODE=0A=
	//  - Object=0A=
	//    - Any=0A=
	return owner.nodeType ?=0A=
		owner.nodeType =3D=3D=3D 1 || owner.nodeType =3D=3D=3D 9 : true;=0A=
};=0A=
=0A=
Data.prototype =3D {=0A=
	key: function( owner ) {=0A=
		// We can accept data for non-element nodes in modern browsers,=0A=
		// but we should not, see #8335.=0A=
		// Always return the key for a frozen object.=0A=
		if ( !Data.accepts( owner ) ) {=0A=
			return 0;=0A=
		}=0A=
=0A=
		var descriptor =3D {},=0A=
			// Check if the owner object already has a cache key=0A=
			unlock =3D owner[ this.expando ];=0A=
=0A=
		// If not, create one=0A=
		if ( !unlock ) {=0A=
			unlock =3D Data.uid++;=0A=
=0A=
			// Secure it in a non-enumerable, non-writable property=0A=
			try {=0A=
				descriptor[ this.expando ] =3D { value: unlock };=0A=
				Object.defineProperties( owner, descriptor );=0A=
=0A=
			// Support: Android < 4=0A=
			// Fallback to a less secure definition=0A=
			} catch ( e ) {=0A=
				descriptor[ this.expando ] =3D unlock;=0A=
				jQuery.extend( owner, descriptor );=0A=
			}=0A=
		}=0A=
=0A=
		// Ensure the cache object=0A=
		if ( !this.cache[ unlock ] ) {=0A=
			this.cache[ unlock ] =3D {};=0A=
		}=0A=
=0A=
		return unlock;=0A=
	},=0A=
	set: function( owner, data, value ) {=0A=
		var prop,=0A=
			// There may be an unlock assigned to this node,=0A=
			// if there is no entry for this "owner", create one inline=0A=
			// and set the unlock as though an owner entry had always existed=0A=
			unlock =3D this.key( owner ),=0A=
			cache =3D this.cache[ unlock ];=0A=
=0A=
		// Handle: [ owner, key, value ] args=0A=
		if ( typeof data =3D=3D=3D "string" ) {=0A=
			cache[ data ] =3D value;=0A=
=0A=
		// Handle: [ owner, { properties } ] args=0A=
		} else {=0A=
			// Fresh assignments by object are shallow copied=0A=
			if ( jQuery.isEmptyObject( cache ) ) {=0A=
				jQuery.extend( this.cache[ unlock ], data );=0A=
			// Otherwise, copy the properties one-by-one to the cache object=0A=
			} else {=0A=
				for ( prop in data ) {=0A=
					cache[ prop ] =3D data[ prop ];=0A=
				}=0A=
			}=0A=
		}=0A=
		return cache;=0A=
	},=0A=
	get: function( owner, key ) {=0A=
		// Either a valid cache is found, or will be created.=0A=
		// New caches will be created and the unlock returned,=0A=
		// allowing direct access to the newly created=0A=
		// empty data object. A valid owner object must be provided.=0A=
		var cache =3D this.cache[ this.key( owner ) ];=0A=
=0A=
		return key =3D=3D=3D undefined ?=0A=
			cache : cache[ key ];=0A=
	},=0A=
	access: function( owner, key, value ) {=0A=
		var stored;=0A=
		// In cases where either:=0A=
		//=0A=
		//   1. No key was specified=0A=
		//   2. A string key was specified, but no value provided=0A=
		//=0A=
		// Take the "read" path and allow the get method to determine=0A=
		// which value to return, respectively either:=0A=
		//=0A=
		//   1. The entire cache object=0A=
		//   2. The data stored at the key=0A=
		//=0A=
		if ( key =3D=3D=3D undefined ||=0A=
				((key && typeof key =3D=3D=3D "string") && value =3D=3D=3D =
undefined) ) {=0A=
=0A=
			stored =3D this.get( owner, key );=0A=
=0A=
			return stored !=3D=3D undefined ?=0A=
				stored : this.get( owner, jQuery.camelCase(key) );=0A=
		}=0A=
=0A=
		// [*]When the key is not a string, or both a key and value=0A=
		// are specified, set or extend (existing objects) with either:=0A=
		//=0A=
		//   1. An object of properties=0A=
		//   2. A key and value=0A=
		//=0A=
		this.set( owner, key, value );=0A=
=0A=
		// Since the "set" path can have two possible entry points=0A=
		// return the expected data based on which path was taken[*]=0A=
		return value !=3D=3D undefined ? value : key;=0A=
	},=0A=
	remove: function( owner, key ) {=0A=
		var i, name, camel,=0A=
			unlock =3D this.key( owner ),=0A=
			cache =3D this.cache[ unlock ];=0A=
=0A=
		if ( key =3D=3D=3D undefined ) {=0A=
			this.cache[ unlock ] =3D {};=0A=
=0A=
		} else {=0A=
			// Support array or space separated string of keys=0A=
			if ( jQuery.isArray( key ) ) {=0A=
				// If "name" is an array of keys...=0A=
				// When data is initially created, via ("key", "val") signature,=0A=
				// keys will be converted to camelCase.=0A=
				// Since there is no way to tell _how_ a key was added, remove=0A=
				// both plain key and camelCase key. #12786=0A=
				// This will only penalize the array argument path.=0A=
				name =3D key.concat( key.map( jQuery.camelCase ) );=0A=
			} else {=0A=
				camel =3D jQuery.camelCase( key );=0A=
				// Try the string as a key before any manipulation=0A=
				if ( key in cache ) {=0A=
					name =3D [ key, camel ];=0A=
				} else {=0A=
					// If a key with the spaces exists, use it.=0A=
					// Otherwise, create an array by matching non-whitespace=0A=
					name =3D camel;=0A=
					name =3D name in cache ?=0A=
						[ name ] : ( name.match( core_rnotwhite ) || [] );=0A=
				}=0A=
			}=0A=
=0A=
			i =3D name.length;=0A=
			while ( i-- ) {=0A=
				delete cache[ name[ i ] ];=0A=
			}=0A=
		}=0A=
	},=0A=
	hasData: function( owner ) {=0A=
		return !jQuery.isEmptyObject(=0A=
			this.cache[ owner[ this.expando ] ] || {}=0A=
		);=0A=
	},=0A=
	discard: function( owner ) {=0A=
		if ( owner[ this.expando ] ) {=0A=
			delete this.cache[ owner[ this.expando ] ];=0A=
		}=0A=
	}=0A=
};=0A=
=0A=
// These may be used throughout the jQuery core codebase=0A=
data_user =3D new Data();=0A=
data_priv =3D new Data();=0A=
=0A=
=0A=
jQuery.extend({=0A=
	acceptData: Data.accepts,=0A=
=0A=
	hasData: function( elem ) {=0A=
		return data_user.hasData( elem ) || data_priv.hasData( elem );=0A=
	},=0A=
=0A=
	data: function( elem, name, data ) {=0A=
		return data_user.access( elem, name, data );=0A=
	},=0A=
=0A=
	removeData: function( elem, name ) {=0A=
		data_user.remove( elem, name );=0A=
	},=0A=
=0A=
	// TODO: Now that all calls to _data and _removeData have been replaced=0A=
	// with direct calls to data_priv methods, these can be deprecated.=0A=
	_data: function( elem, name, data ) {=0A=
		return data_priv.access( elem, name, data );=0A=
	},=0A=
=0A=
	_removeData: function( elem, name ) {=0A=
		data_priv.remove( elem, name );=0A=
	}=0A=
});=0A=
=0A=
jQuery.fn.extend({=0A=
	data: function( key, value ) {=0A=
		var attrs, name,=0A=
			elem =3D this[ 0 ],=0A=
			i =3D 0,=0A=
			data =3D null;=0A=
=0A=
		// Gets all values=0A=
		if ( key =3D=3D=3D undefined ) {=0A=
			if ( this.length ) {=0A=
				data =3D data_user.get( elem );=0A=
=0A=
				if ( elem.nodeType =3D=3D=3D 1 && !data_priv.get( elem, =
"hasDataAttrs" ) ) {=0A=
					attrs =3D elem.attributes;=0A=
					for ( ; i < attrs.length; i++ ) {=0A=
						name =3D attrs[ i ].name;=0A=
=0A=
						if ( name.indexOf( "data-" ) =3D=3D=3D 0 ) {=0A=
							name =3D jQuery.camelCase( name.slice(5) );=0A=
							dataAttr( elem, name, data[ name ] );=0A=
						}=0A=
					}=0A=
					data_priv.set( elem, "hasDataAttrs", true );=0A=
				}=0A=
			}=0A=
=0A=
			return data;=0A=
		}=0A=
=0A=
		// Sets multiple values=0A=
		if ( typeof key =3D=3D=3D "object" ) {=0A=
			return this.each(function() {=0A=
				data_user.set( this, key );=0A=
			});=0A=
		}=0A=
=0A=
		return jQuery.access( this, function( value ) {=0A=
			var data,=0A=
				camelKey =3D jQuery.camelCase( key );=0A=
=0A=
			// The calling jQuery object (element matches) is not empty=0A=
			// (and therefore has an element appears at this[ 0 ]) and the=0A=
			// `value` parameter was not undefined. An empty jQuery object=0A=
			// will result in `undefined` for elem =3D this[ 0 ] which will=0A=
			// throw an exception if an attempt to read a data cache is made.=0A=
			if ( elem && value =3D=3D=3D undefined ) {=0A=
				// Attempt to get data from the cache=0A=
				// with the key as-is=0A=
				data =3D data_user.get( elem, key );=0A=
				if ( data !=3D=3D undefined ) {=0A=
					return data;=0A=
				}=0A=
=0A=
				// Attempt to get data from the cache=0A=
				// with the key camelized=0A=
				data =3D data_user.get( elem, camelKey );=0A=
				if ( data !=3D=3D undefined ) {=0A=
					return data;=0A=
				}=0A=
=0A=
				// Attempt to "discover" the data in=0A=
				// HTML5 custom data-* attrs=0A=
				data =3D dataAttr( elem, camelKey, undefined );=0A=
				if ( data !=3D=3D undefined ) {=0A=
					return data;=0A=
				}=0A=
=0A=
				// We tried really hard, but the data doesn't exist.=0A=
				return;=0A=
			}=0A=
=0A=
			// Set the data...=0A=
			this.each(function() {=0A=
				// First, attempt to store a copy or reference of any=0A=
				// data that might've been store with a camelCased key.=0A=
				var data =3D data_user.get( this, camelKey );=0A=
=0A=
				// For HTML5 data-* attribute interop, we have to=0A=
				// store property names with dashes in a camelCase form.=0A=
				// This might not apply to all properties...*=0A=
				data_user.set( this, camelKey, value );=0A=
=0A=
				// *... In the case of properties that might _actually_=0A=
				// have dashes, we need to also store a copy of that=0A=
				// unchanged property.=0A=
				if ( key.indexOf("-") !=3D=3D -1 && data !=3D=3D undefined ) {=0A=
					data_user.set( this, key, value );=0A=
				}=0A=
			});=0A=
		}, null, value, arguments.length > 1, null, true );=0A=
	},=0A=
=0A=
	removeData: function( key ) {=0A=
		return this.each(function() {=0A=
			data_user.remove( this, key );=0A=
		});=0A=
	}=0A=
});=0A=
=0A=
function dataAttr( elem, key, data ) {=0A=
	var name;=0A=
=0A=
	// If nothing was found internally, try to fetch any=0A=
	// data from the HTML5 data-* attribute=0A=
	if ( data =3D=3D=3D undefined && elem.nodeType =3D=3D=3D 1 ) {=0A=
		name =3D "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();=0A=
		data =3D elem.getAttribute( name );=0A=
=0A=
		if ( typeof data =3D=3D=3D "string" ) {=0A=
			try {=0A=
				data =3D data =3D=3D=3D "true" ? true :=0A=
					data =3D=3D=3D "false" ? false :=0A=
					data =3D=3D=3D "null" ? null :=0A=
					// Only convert to a number if it doesn't change the string=0A=
					+data + "" =3D=3D=3D data ? +data :=0A=
					rbrace.test( data ) ? JSON.parse( data ) :=0A=
					data;=0A=
			} catch( e ) {}=0A=
=0A=
			// Make sure we set the data so it isn't changed later=0A=
			data_user.set( elem, key, data );=0A=
		} else {=0A=
			data =3D undefined;=0A=
		}=0A=
	}=0A=
	return data;=0A=
}=0A=
jQuery.extend({=0A=
	queue: function( elem, type, data ) {=0A=
		var queue;=0A=
=0A=
		if ( elem ) {=0A=
			type =3D ( type || "fx" ) + "queue";=0A=
			queue =3D data_priv.get( elem, type );=0A=
=0A=
			// Speed up dequeue by getting out quickly if this is just a lookup=0A=
			if ( data ) {=0A=
				if ( !queue || jQuery.isArray( data ) ) {=0A=
					queue =3D data_priv.access( elem, type, jQuery.makeArray(data) );=0A=
				} else {=0A=
					queue.push( data );=0A=
				}=0A=
			}=0A=
			return queue || [];=0A=
		}=0A=
	},=0A=
=0A=
	dequeue: function( elem, type ) {=0A=
		type =3D type || "fx";=0A=
=0A=
		var queue =3D jQuery.queue( elem, type ),=0A=
			startLength =3D queue.length,=0A=
			fn =3D queue.shift(),=0A=
			hooks =3D jQuery._queueHooks( elem, type ),=0A=
			next =3D function() {=0A=
				jQuery.dequeue( elem, type );=0A=
			};=0A=
=0A=
		// If the fx queue is dequeued, always remove the progress sentinel=0A=
		if ( fn =3D=3D=3D "inprogress" ) {=0A=
			fn =3D queue.shift();=0A=
			startLength--;=0A=
		}=0A=
=0A=
		if ( fn ) {=0A=
=0A=
			// Add a progress sentinel to prevent the fx queue from being=0A=
			// automatically dequeued=0A=
			if ( type =3D=3D=3D "fx" ) {=0A=
				queue.unshift( "inprogress" );=0A=
			}=0A=
=0A=
			// clear up the last queue stop function=0A=
			delete hooks.stop;=0A=
			fn.call( elem, next, hooks );=0A=
		}=0A=
=0A=
		if ( !startLength && hooks ) {=0A=
			hooks.empty.fire();=0A=
		}=0A=
	},=0A=
=0A=
	// not intended for public consumption - generates a queueHooks object, =
or returns the current one=0A=
	_queueHooks: function( elem, type ) {=0A=
		var key =3D type + "queueHooks";=0A=
		return data_priv.get( elem, key ) || data_priv.access( elem, key, {=0A=
			empty: jQuery.Callbacks("once memory").add(function() {=0A=
				data_priv.remove( elem, [ type + "queue", key ] );=0A=
			})=0A=
		});=0A=
	}=0A=
});=0A=
=0A=
jQuery.fn.extend({=0A=
	queue: function( type, data ) {=0A=
		var setter =3D 2;=0A=
=0A=
		if ( typeof type !=3D=3D "string" ) {=0A=
			data =3D type;=0A=
			type =3D "fx";=0A=
			setter--;=0A=
		}=0A=
=0A=
		if ( arguments.length < setter ) {=0A=
			return jQuery.queue( this[0], type );=0A=
		}=0A=
=0A=
		return data =3D=3D=3D undefined ?=0A=
			this :=0A=
			this.each(function() {=0A=
				var queue =3D jQuery.queue( this, type, data );=0A=
=0A=
				// ensure a hooks for this queue=0A=
				jQuery._queueHooks( this, type );=0A=
=0A=
				if ( type =3D=3D=3D "fx" && queue[0] !=3D=3D "inprogress" ) {=0A=
					jQuery.dequeue( this, type );=0A=
				}=0A=
			});=0A=
	},=0A=
	dequeue: function( type ) {=0A=
		return this.each(function() {=0A=
			jQuery.dequeue( this, type );=0A=
		});=0A=
	},=0A=
	// Based off of the plugin by Clint Helfers, with permission.=0A=
	// http://blindsignals.com/index.php/2009/07/jquery-delay/=0A=
	delay: function( time, type ) {=0A=
		time =3D jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;=0A=
		type =3D type || "fx";=0A=
=0A=
		return this.queue( type, function( next, hooks ) {=0A=
			var timeout =3D setTimeout( next, time );=0A=
			hooks.stop =3D function() {=0A=
				clearTimeout( timeout );=0A=
			};=0A=
		});=0A=
	},=0A=
	clearQueue: function( type ) {=0A=
		return this.queue( type || "fx", [] );=0A=
	},=0A=
	// Get a promise resolved when queues of a certain type=0A=
	// are emptied (fx is the type by default)=0A=
	promise: function( type, obj ) {=0A=
		var tmp,=0A=
			count =3D 1,=0A=
			defer =3D jQuery.Deferred(),=0A=
			elements =3D this,=0A=
			i =3D this.length,=0A=
			resolve =3D function() {=0A=
				if ( !( --count ) ) {=0A=
					defer.resolveWith( elements, [ elements ] );=0A=
				}=0A=
			};=0A=
=0A=
		if ( typeof type !=3D=3D "string" ) {=0A=
			obj =3D type;=0A=
			type =3D undefined;=0A=
		}=0A=
		type =3D type || "fx";=0A=
=0A=
		while( i-- ) {=0A=
			tmp =3D data_priv.get( elements[ i ], type + "queueHooks" );=0A=
			if ( tmp && tmp.empty ) {=0A=
				count++;=0A=
				tmp.empty.add( resolve );=0A=
			}=0A=
		}=0A=
		resolve();=0A=
		return defer.promise( obj );=0A=
	}=0A=
});=0A=
var nodeHook, boolHook,=0A=
	rclass =3D /[\t\r\n\f]/g,=0A=
	rreturn =3D /\r/g,=0A=
	rfocusable =3D /^(?:input|select|textarea|button)$/i;=0A=
=0A=
jQuery.fn.extend({=0A=
	attr: function( name, value ) {=0A=
		return jQuery.access( this, jQuery.attr, name, value, arguments.length =
> 1 );=0A=
	},=0A=
=0A=
	removeAttr: function( name ) {=0A=
		return this.each(function() {=0A=
			jQuery.removeAttr( this, name );=0A=
		});=0A=
	},=0A=
=0A=
	prop: function( name, value ) {=0A=
		return jQuery.access( this, jQuery.prop, name, value, arguments.length =
> 1 );=0A=
	},=0A=
=0A=
	removeProp: function( name ) {=0A=
		return this.each(function() {=0A=
			delete this[ jQuery.propFix[ name ] || name ];=0A=
		});=0A=
	},=0A=
=0A=
	addClass: function( value ) {=0A=
		var classes, elem, cur, clazz, j,=0A=
			i =3D 0,=0A=
			len =3D this.length,=0A=
			proceed =3D typeof value =3D=3D=3D "string" && value;=0A=
=0A=
		if ( jQuery.isFunction( value ) ) {=0A=
			return this.each(function( j ) {=0A=
				jQuery( this ).addClass( value.call( this, j, this.className ) );=0A=
			});=0A=
		}=0A=
=0A=
		if ( proceed ) {=0A=
			// The disjunction here is for better compressibility (see =
removeClass)=0A=
			classes =3D ( value || "" ).match( core_rnotwhite ) || [];=0A=
=0A=
			for ( ; i < len; i++ ) {=0A=
				elem =3D this[ i ];=0A=
				cur =3D elem.nodeType =3D=3D=3D 1 && ( elem.className ?=0A=
					( " " + elem.className + " " ).replace( rclass, " " ) :=0A=
					" "=0A=
				);=0A=
=0A=
				if ( cur ) {=0A=
					j =3D 0;=0A=
					while ( (clazz =3D classes[j++]) ) {=0A=
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {=0A=
							cur +=3D clazz + " ";=0A=
						}=0A=
					}=0A=
					elem.className =3D jQuery.trim( cur );=0A=
=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		return this;=0A=
	},=0A=
=0A=
	removeClass: function( value ) {=0A=
		var classes, elem, cur, clazz, j,=0A=
			i =3D 0,=0A=
			len =3D this.length,=0A=
			proceed =3D arguments.length =3D=3D=3D 0 || typeof value =3D=3D=3D =
"string" && value;=0A=
=0A=
		if ( jQuery.isFunction( value ) ) {=0A=
			return this.each(function( j ) {=0A=
				jQuery( this ).removeClass( value.call( this, j, this.className ) );=0A=
			});=0A=
		}=0A=
		if ( proceed ) {=0A=
			classes =3D ( value || "" ).match( core_rnotwhite ) || [];=0A=
=0A=
			for ( ; i < len; i++ ) {=0A=
				elem =3D this[ i ];=0A=
				// This expression is here for better compressibility (see addClass)=0A=
				cur =3D elem.nodeType =3D=3D=3D 1 && ( elem.className ?=0A=
					( " " + elem.className + " " ).replace( rclass, " " ) :=0A=
					""=0A=
				);=0A=
=0A=
				if ( cur ) {=0A=
					j =3D 0;=0A=
					while ( (clazz =3D classes[j++]) ) {=0A=
						// Remove *all* instances=0A=
						while ( cur.indexOf( " " + clazz + " " ) >=3D 0 ) {=0A=
							cur =3D cur.replace( " " + clazz + " ", " " );=0A=
						}=0A=
					}=0A=
					elem.className =3D value ? jQuery.trim( cur ) : "";=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		return this;=0A=
	},=0A=
=0A=
	toggleClass: function( value, stateVal ) {=0A=
		var type =3D typeof value;=0A=
=0A=
		if ( typeof stateVal =3D=3D=3D "boolean" && type =3D=3D=3D "string" ) {=0A=
			return stateVal ? this.addClass( value ) : this.removeClass( value );=0A=
		}=0A=
=0A=
		if ( jQuery.isFunction( value ) ) {=0A=
			return this.each(function( i ) {=0A=
				jQuery( this ).toggleClass( value.call(this, i, this.className, =
stateVal), stateVal );=0A=
			});=0A=
		}=0A=
=0A=
		return this.each(function() {=0A=
			if ( type =3D=3D=3D "string" ) {=0A=
				// toggle individual class names=0A=
				var className,=0A=
					i =3D 0,=0A=
					self =3D jQuery( this ),=0A=
					classNames =3D value.match( core_rnotwhite ) || [];=0A=
=0A=
				while ( (className =3D classNames[ i++ ]) ) {=0A=
					// check each className given, space separated list=0A=
					if ( self.hasClass( className ) ) {=0A=
						self.removeClass( className );=0A=
					} else {=0A=
						self.addClass( className );=0A=
					}=0A=
				}=0A=
=0A=
			// Toggle whole class name=0A=
			} else if ( type =3D=3D=3D core_strundefined || type =3D=3D=3D =
"boolean" ) {=0A=
				if ( this.className ) {=0A=
					// store className if set=0A=
					data_priv.set( this, "__className__", this.className );=0A=
				}=0A=
=0A=
				// If the element has a class name or if we're passed "false",=0A=
				// then remove the whole classname (if there was one, the above =
saved it).=0A=
				// Otherwise bring back whatever was previously saved (if anything),=0A=
				// falling back to the empty string if nothing was stored.=0A=
				this.className =3D this.className || value =3D=3D=3D false ? "" : =
data_priv.get( this, "__className__" ) || "";=0A=
			}=0A=
		});=0A=
	},=0A=
=0A=
	hasClass: function( selector ) {=0A=
		var className =3D " " + selector + " ",=0A=
			i =3D 0,=0A=
			l =3D this.length;=0A=
		for ( ; i < l; i++ ) {=0A=
			if ( this[i].nodeType =3D=3D=3D 1 && (" " + this[i].className + " =
").replace(rclass, " ").indexOf( className ) >=3D 0 ) {=0A=
				return true;=0A=
			}=0A=
		}=0A=
=0A=
		return false;=0A=
	},=0A=
=0A=
	val: function( value ) {=0A=
		var hooks, ret, isFunction,=0A=
			elem =3D this[0];=0A=
=0A=
		if ( !arguments.length ) {=0A=
			if ( elem ) {=0A=
				hooks =3D jQuery.valHooks[ elem.type ] || jQuery.valHooks[ =
elem.nodeName.toLowerCase() ];=0A=
=0A=
				if ( hooks && "get" in hooks && (ret =3D hooks.get( elem, "value" )) =
!=3D=3D undefined ) {=0A=
					return ret;=0A=
				}=0A=
=0A=
				ret =3D elem.value;=0A=
=0A=
				return typeof ret =3D=3D=3D "string" ?=0A=
					// handle most common string cases=0A=
					ret.replace(rreturn, "") :=0A=
					// handle cases where value is null/undef or number=0A=
					ret =3D=3D null ? "" : ret;=0A=
			}=0A=
=0A=
			return;=0A=
		}=0A=
=0A=
		isFunction =3D jQuery.isFunction( value );=0A=
=0A=
		return this.each(function( i ) {=0A=
			var val;=0A=
=0A=
			if ( this.nodeType !=3D=3D 1 ) {=0A=
				return;=0A=
			}=0A=
=0A=
			if ( isFunction ) {=0A=
				val =3D value.call( this, i, jQuery( this ).val() );=0A=
			} else {=0A=
				val =3D value;=0A=
			}=0A=
=0A=
			// Treat null/undefined as ""; convert numbers to string=0A=
			if ( val =3D=3D null ) {=0A=
				val =3D "";=0A=
			} else if ( typeof val =3D=3D=3D "number" ) {=0A=
				val +=3D "";=0A=
			} else if ( jQuery.isArray( val ) ) {=0A=
				val =3D jQuery.map(val, function ( value ) {=0A=
					return value =3D=3D null ? "" : value + "";=0A=
				});=0A=
			}=0A=
=0A=
			hooks =3D jQuery.valHooks[ this.type ] || jQuery.valHooks[ =
this.nodeName.toLowerCase() ];=0A=
=0A=
			// If set returns undefined, fall back to normal setting=0A=
			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) =
=3D=3D=3D undefined ) {=0A=
				this.value =3D val;=0A=
			}=0A=
		});=0A=
	}=0A=
});=0A=
=0A=
jQuery.extend({=0A=
	valHooks: {=0A=
		option: {=0A=
			get: function( elem ) {=0A=
				// attributes.value is undefined in Blackberry 4.7 but=0A=
				// uses .value. See #6932=0A=
				var val =3D elem.attributes.value;=0A=
				return !val || val.specified ? elem.value : elem.text;=0A=
			}=0A=
		},=0A=
		select: {=0A=
			get: function( elem ) {=0A=
				var value, option,=0A=
					options =3D elem.options,=0A=
					index =3D elem.selectedIndex,=0A=
					one =3D elem.type =3D=3D=3D "select-one" || index < 0,=0A=
					values =3D one ? null : [],=0A=
					max =3D one ? index + 1 : options.length,=0A=
					i =3D index < 0 ?=0A=
						max :=0A=
						one ? index : 0;=0A=
=0A=
				// Loop through all the selected options=0A=
				for ( ; i < max; i++ ) {=0A=
					option =3D options[ i ];=0A=
=0A=
					// IE6-9 doesn't update selected after form reset (#2551)=0A=
					if ( ( option.selected || i =3D=3D=3D index ) &&=0A=
							// Don't return options that are disabled or in a disabled =
optgroup=0A=
							( jQuery.support.optDisabled ? !option.disabled : =
option.getAttribute("disabled") =3D=3D=3D null ) &&=0A=
							( !option.parentNode.disabled || !jQuery.nodeName( =
option.parentNode, "optgroup" ) ) ) {=0A=
=0A=
						// Get the specific value for the option=0A=
						value =3D jQuery( option ).val();=0A=
=0A=
						// We don't need an array for one selects=0A=
						if ( one ) {=0A=
							return value;=0A=
						}=0A=
=0A=
						// Multi-Selects return an array=0A=
						values.push( value );=0A=
					}=0A=
				}=0A=
=0A=
				return values;=0A=
			},=0A=
=0A=
			set: function( elem, value ) {=0A=
				var optionSet, option,=0A=
					options =3D elem.options,=0A=
					values =3D jQuery.makeArray( value ),=0A=
					i =3D options.length;=0A=
=0A=
				while ( i-- ) {=0A=
					option =3D options[ i ];=0A=
					if ( (option.selected =3D jQuery.inArray( jQuery(option).val(), =
values ) >=3D 0) ) {=0A=
						optionSet =3D true;=0A=
					}=0A=
				}=0A=
=0A=
				// force browsers to behave consistently when non-matching value is =
set=0A=
				if ( !optionSet ) {=0A=
					elem.selectedIndex =3D -1;=0A=
				}=0A=
				return values;=0A=
			}=0A=
		}=0A=
	},=0A=
=0A=
	attr: function( elem, name, value ) {=0A=
		var hooks, ret,=0A=
			nType =3D elem.nodeType;=0A=
=0A=
		// don't get/set attributes on text, comment and attribute nodes=0A=
		if ( !elem || nType =3D=3D=3D 3 || nType =3D=3D=3D 8 || nType =
=3D=3D=3D 2 ) {=0A=
			return;=0A=
		}=0A=
=0A=
		// Fallback to prop when attributes are not supported=0A=
		if ( typeof elem.getAttribute =3D=3D=3D core_strundefined ) {=0A=
			return jQuery.prop( elem, name, value );=0A=
		}=0A=
=0A=
		// All attributes are lowercase=0A=
		// Grab necessary hook if one is defined=0A=
		if ( nType !=3D=3D 1 || !jQuery.isXMLDoc( elem ) ) {=0A=
			name =3D name.toLowerCase();=0A=
			hooks =3D jQuery.attrHooks[ name ] ||=0A=
				( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );=0A=
		}=0A=
=0A=
		if ( value !=3D=3D undefined ) {=0A=
=0A=
			if ( value =3D=3D=3D null ) {=0A=
				jQuery.removeAttr( elem, name );=0A=
=0A=
			} else if ( hooks && "set" in hooks && (ret =3D hooks.set( elem, =
value, name )) !=3D=3D undefined ) {=0A=
				return ret;=0A=
=0A=
			} else {=0A=
				elem.setAttribute( name, value + "" );=0A=
				return value;=0A=
			}=0A=
=0A=
		} else if ( hooks && "get" in hooks && (ret =3D hooks.get( elem, name =
)) !=3D=3D null ) {=0A=
			return ret;=0A=
=0A=
		} else {=0A=
			ret =3D jQuery.find.attr( elem, name );=0A=
=0A=
			// Non-existent attributes return null, we normalize to undefined=0A=
			return ret =3D=3D null ?=0A=
				undefined :=0A=
				ret;=0A=
		}=0A=
	},=0A=
=0A=
	removeAttr: function( elem, value ) {=0A=
		var name, propName,=0A=
			i =3D 0,=0A=
			attrNames =3D value && value.match( core_rnotwhite );=0A=
=0A=
		if ( attrNames && elem.nodeType =3D=3D=3D 1 ) {=0A=
			while ( (name =3D attrNames[i++]) ) {=0A=
				propName =3D jQuery.propFix[ name ] || name;=0A=
=0A=
				// Boolean attributes get special treatment (#10870)=0A=
				if ( jQuery.expr.match.bool.test( name ) ) {=0A=
					// Set corresponding property to false=0A=
					elem[ propName ] =3D false;=0A=
				}=0A=
=0A=
				elem.removeAttribute( name );=0A=
			}=0A=
		}=0A=
	},=0A=
=0A=
	attrHooks: {=0A=
		type: {=0A=
			set: function( elem, value ) {=0A=
				if ( !jQuery.support.radioValue && value =3D=3D=3D "radio" && =
jQuery.nodeName(elem, "input") ) {=0A=
					// Setting the type on a radio button after the value resets the =
value in IE6-9=0A=
					// Reset value to default in case type is set after value during =
creation=0A=
					var val =3D elem.value;=0A=
					elem.setAttribute( "type", value );=0A=
					if ( val ) {=0A=
						elem.value =3D val;=0A=
					}=0A=
					return value;=0A=
				}=0A=
			}=0A=
		}=0A=
	},=0A=
=0A=
	propFix: {=0A=
		"for": "htmlFor",=0A=
		"class": "className"=0A=
	},=0A=
=0A=
	prop: function( elem, name, value ) {=0A=
		var ret, hooks, notxml,=0A=
			nType =3D elem.nodeType;=0A=
=0A=
		// don't get/set properties on text, comment and attribute nodes=0A=
		if ( !elem || nType =3D=3D=3D 3 || nType =3D=3D=3D 8 || nType =
=3D=3D=3D 2 ) {=0A=
			return;=0A=
		}=0A=
=0A=
		notxml =3D nType !=3D=3D 1 || !jQuery.isXMLDoc( elem );=0A=
=0A=
		if ( notxml ) {=0A=
			// Fix name and attach hooks=0A=
			name =3D jQuery.propFix[ name ] || name;=0A=
			hooks =3D jQuery.propHooks[ name ];=0A=
		}=0A=
=0A=
		if ( value !=3D=3D undefined ) {=0A=
			return hooks && "set" in hooks && (ret =3D hooks.set( elem, value, =
name )) !=3D=3D undefined ?=0A=
				ret :=0A=
				( elem[ name ] =3D value );=0A=
=0A=
		} else {=0A=
			return hooks && "get" in hooks && (ret =3D hooks.get( elem, name )) =
!=3D=3D null ?=0A=
				ret :=0A=
				elem[ name ];=0A=
		}=0A=
	},=0A=
=0A=
	propHooks: {=0A=
		tabIndex: {=0A=
			get: function( elem ) {=0A=
				return elem.hasAttribute( "tabindex" ) || rfocusable.test( =
elem.nodeName ) || elem.href ?=0A=
					elem.tabIndex :=0A=
					-1;=0A=
			}=0A=
		}=0A=
	}=0A=
});=0A=
=0A=
// Hooks for boolean attributes=0A=
boolHook =3D {=0A=
	set: function( elem, value, name ) {=0A=
		if ( value =3D=3D=3D false ) {=0A=
			// Remove boolean attributes when set to false=0A=
			jQuery.removeAttr( elem, name );=0A=
		} else {=0A=
			elem.setAttribute( name, name );=0A=
		}=0A=
		return name;=0A=
	}=0A=
};=0A=
jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, =
name ) {=0A=
	var getter =3D jQuery.expr.attrHandle[ name ] || jQuery.find.attr;=0A=
=0A=
	jQuery.expr.attrHandle[ name ] =3D function( elem, name, isXML ) {=0A=
		var fn =3D jQuery.expr.attrHandle[ name ],=0A=
			ret =3D isXML ?=0A=
				undefined :=0A=
				/* jshint eqeqeq: false */=0A=
				// Temporarily disable this handler to check existence=0A=
				(jQuery.expr.attrHandle[ name ] =3D undefined) !=3D=0A=
					getter( elem, name, isXML ) ?=0A=
=0A=
					name.toLowerCase() :=0A=
					null;=0A=
=0A=
		// Restore handler=0A=
		jQuery.expr.attrHandle[ name ] =3D fn;=0A=
=0A=
		return ret;=0A=
	};=0A=
});=0A=
=0A=
// Support: IE9+=0A=
// Selectedness for an option in an optgroup can be inaccurate=0A=
if ( !jQuery.support.optSelected ) {=0A=
	jQuery.propHooks.selected =3D {=0A=
		get: function( elem ) {=0A=
			var parent =3D elem.parentNode;=0A=
			if ( parent && parent.parentNode ) {=0A=
				parent.parentNode.selectedIndex;=0A=
			}=0A=
			return null;=0A=
		}=0A=
	};=0A=
}=0A=
=0A=
jQuery.each([=0A=
	"tabIndex",=0A=
	"readOnly",=0A=
	"maxLength",=0A=
	"cellSpacing",=0A=
	"cellPadding",=0A=
	"rowSpan",=0A=
	"colSpan",=0A=
	"useMap",=0A=
	"frameBorder",=0A=
	"contentEditable"=0A=
], function() {=0A=
	jQuery.propFix[ this.toLowerCase() ] =3D this;=0A=
});=0A=
=0A=
// Radios and checkboxes getter/setter=0A=
jQuery.each([ "radio", "checkbox" ], function() {=0A=
	jQuery.valHooks[ this ] =3D {=0A=
		set: function( elem, value ) {=0A=
			if ( jQuery.isArray( value ) ) {=0A=
				return ( elem.checked =3D jQuery.inArray( jQuery(elem).val(), value =
) >=3D 0 );=0A=
			}=0A=
		}=0A=
	};=0A=
	if ( !jQuery.support.checkOn ) {=0A=
		jQuery.valHooks[ this ].get =3D function( elem ) {=0A=
			// Support: Webkit=0A=
			// "" is returned instead of "on" if a value isn't specified=0A=
			return elem.getAttribute("value") =3D=3D=3D null ? "on" : elem.value;=0A=
		};=0A=
	}=0A=
});=0A=
var rkeyEvent =3D /^key/,=0A=
	rmouseEvent =3D /^(?:mouse|contextmenu)|click/,=0A=
	rfocusMorph =3D /^(?:focusinfocus|focusoutblur)$/,=0A=
	rtypenamespace =3D /^([^.]*)(?:\.(.+)|)$/;=0A=
=0A=
function returnTrue() {=0A=
	return true;=0A=
}=0A=
=0A=
function returnFalse() {=0A=
	return false;=0A=
}=0A=
=0A=
function safeActiveElement() {=0A=
	try {=0A=
		return document.activeElement;=0A=
	} catch ( err ) { }=0A=
}=0A=
=0A=
/*=0A=
 * Helper functions for managing events -- not part of the public =
interface.=0A=
 * Props to Dean Edwards' addEvent library for many of the ideas.=0A=
 */=0A=
jQuery.event =3D {=0A=
=0A=
	global: {},=0A=
=0A=
	add: function( elem, types, handler, data, selector ) {=0A=
=0A=
		var handleObjIn, eventHandle, tmp,=0A=
			events, t, handleObj,=0A=
			special, handlers, type, namespaces, origType,=0A=
			elemData =3D data_priv.get( elem );=0A=
=0A=
		// Don't attach events to noData or text/comment nodes (but allow =
plain objects)=0A=
		if ( !elemData ) {=0A=
			return;=0A=
		}=0A=
=0A=
		// Caller can pass in an object of custom data in lieu of the handler=0A=
		if ( handler.handler ) {=0A=
			handleObjIn =3D handler;=0A=
			handler =3D handleObjIn.handler;=0A=
			selector =3D handleObjIn.selector;=0A=
		}=0A=
=0A=
		// Make sure that the handler has a unique ID, used to find/remove it =
later=0A=
		if ( !handler.guid ) {=0A=
			handler.guid =3D jQuery.guid++;=0A=
		}=0A=
=0A=
		// Init the element's event structure and main handler, if this is the =
first=0A=
		if ( !(events =3D elemData.events) ) {=0A=
			events =3D elemData.events =3D {};=0A=
		}=0A=
		if ( !(eventHandle =3D elemData.handle) ) {=0A=
			eventHandle =3D elemData.handle =3D function( e ) {=0A=
				// Discard the second event of a jQuery.event.trigger() and=0A=
				// when an event is called after a page has unloaded=0A=
				return typeof jQuery !=3D=3D core_strundefined && (!e || =
jQuery.event.triggered !=3D=3D e.type) ?=0A=
					jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :=0A=
					undefined;=0A=
			};=0A=
			// Add elem as a property of the handle fn to prevent a memory leak =
with IE non-native events=0A=
			eventHandle.elem =3D elem;=0A=
		}=0A=
=0A=
		// Handle multiple events separated by a space=0A=
		types =3D ( types || "" ).match( core_rnotwhite ) || [""];=0A=
		t =3D types.length;=0A=
		while ( t-- ) {=0A=
			tmp =3D rtypenamespace.exec( types[t] ) || [];=0A=
			type =3D origType =3D tmp[1];=0A=
			namespaces =3D ( tmp[2] || "" ).split( "." ).sort();=0A=
=0A=
			// There *must* be a type, no attaching namespace-only handlers=0A=
			if ( !type ) {=0A=
				continue;=0A=
			}=0A=
=0A=
			// If event changes its type, use the special event handlers for the =
changed type=0A=
			special =3D jQuery.event.special[ type ] || {};=0A=
=0A=
			// If selector defined, determine special event api type, otherwise =
given type=0A=
			type =3D ( selector ? special.delegateType : special.bindType ) || =
type;=0A=
=0A=
			// Update special based on newly reset type=0A=
			special =3D jQuery.event.special[ type ] || {};=0A=
=0A=
			// handleObj is passed to all event handlers=0A=
			handleObj =3D jQuery.extend({=0A=
				type: type,=0A=
				origType: origType,=0A=
				data: data,=0A=
				handler: handler,=0A=
				guid: handler.guid,=0A=
				selector: selector,=0A=
				needsContext: selector && jQuery.expr.match.needsContext.test( =
selector ),=0A=
				namespace: namespaces.join(".")=0A=
			}, handleObjIn );=0A=
=0A=
			// Init the event handler queue if we're the first=0A=
			if ( !(handlers =3D events[ type ]) ) {=0A=
				handlers =3D events[ type ] =3D [];=0A=
				handlers.delegateCount =3D 0;=0A=
=0A=
				// Only use addEventListener if the special events handler returns =
false=0A=
				if ( !special.setup || special.setup.call( elem, data, namespaces, =
eventHandle ) =3D=3D=3D false ) {=0A=
					if ( elem.addEventListener ) {=0A=
						elem.addEventListener( type, eventHandle, false );=0A=
					}=0A=
				}=0A=
			}=0A=
=0A=
			if ( special.add ) {=0A=
				special.add.call( elem, handleObj );=0A=
=0A=
				if ( !handleObj.handler.guid ) {=0A=
					handleObj.handler.guid =3D handler.guid;=0A=
				}=0A=
			}=0A=
=0A=
			// Add to the element's handler list, delegates in front=0A=
			if ( selector ) {=0A=
				handlers.splice( handlers.delegateCount++, 0, handleObj );=0A=
			} else {=0A=
				handlers.push( handleObj );=0A=
			}=0A=
=0A=
			// Keep track of which events have ever been used, for event =
optimization=0A=
			jQuery.event.global[ type ] =3D true;=0A=
		}=0A=
=0A=
		// Nullify elem to prevent memory leaks in IE=0A=
		elem =3D null;=0A=
	},=0A=
=0A=
	// Detach an event or set of events from an element=0A=
	remove: function( elem, types, handler, selector, mappedTypes ) {=0A=
=0A=
		var j, origCount, tmp,=0A=
			events, t, handleObj,=0A=
			special, handlers, type, namespaces, origType,=0A=
			elemData =3D data_priv.hasData( elem ) && data_priv.get( elem );=0A=
=0A=
		if ( !elemData || !(events =3D elemData.events) ) {=0A=
			return;=0A=
		}=0A=
=0A=
		// Once for each type.namespace in types; type may be omitted=0A=
		types =3D ( types || "" ).match( core_rnotwhite ) || [""];=0A=
		t =3D types.length;=0A=
		while ( t-- ) {=0A=
			tmp =3D rtypenamespace.exec( types[t] ) || [];=0A=
			type =3D origType =3D tmp[1];=0A=
			namespaces =3D ( tmp[2] || "" ).split( "." ).sort();=0A=
=0A=
			// Unbind all events (on this namespace, if provided) for the element=0A=
			if ( !type ) {=0A=
				for ( type in events ) {=0A=
					jQuery.event.remove( elem, type + types[ t ], handler, selector, =
true );=0A=
				}=0A=
				continue;=0A=
			}=0A=
=0A=
			special =3D jQuery.event.special[ type ] || {};=0A=
			type =3D ( selector ? special.delegateType : special.bindType ) || =
type;=0A=
			handlers =3D events[ type ] || [];=0A=
			tmp =3D tmp[2] && new RegExp( "(^|\\.)" + =
namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" );=0A=
=0A=
			// Remove matching events=0A=
			origCount =3D j =3D handlers.length;=0A=
			while ( j-- ) {=0A=
				handleObj =3D handlers[ j ];=0A=
=0A=
				if ( ( mappedTypes || origType =3D=3D=3D handleObj.origType ) &&=0A=
					( !handler || handler.guid =3D=3D=3D handleObj.guid ) &&=0A=
					( !tmp || tmp.test( handleObj.namespace ) ) &&=0A=
					( !selector || selector =3D=3D=3D handleObj.selector || selector =
=3D=3D=3D "**" && handleObj.selector ) ) {=0A=
					handlers.splice( j, 1 );=0A=
=0A=
					if ( handleObj.selector ) {=0A=
						handlers.delegateCount--;=0A=
					}=0A=
					if ( special.remove ) {=0A=
						special.remove.call( elem, handleObj );=0A=
					}=0A=
				}=0A=
			}=0A=
=0A=
			// Remove generic event handler if we removed something and no more =
handlers exist=0A=
			// (avoids potential for endless recursion during removal of special =
event handlers)=0A=
			if ( origCount && !handlers.length ) {=0A=
				if ( !special.teardown || special.teardown.call( elem, namespaces, =
elemData.handle ) =3D=3D=3D false ) {=0A=
					jQuery.removeEvent( elem, type, elemData.handle );=0A=
				}=0A=
=0A=
				delete events[ type ];=0A=
			}=0A=
		}=0A=
=0A=
		// Remove the expando if it's no longer used=0A=
		if ( jQuery.isEmptyObject( events ) ) {=0A=
			delete elemData.handle;=0A=
			data_priv.remove( elem, "events" );=0A=
		}=0A=
	},=0A=
=0A=
	trigger: function( event, data, elem, onlyHandlers ) {=0A=
=0A=
		var i, cur, tmp, bubbleType, ontype, handle, special,=0A=
			eventPath =3D [ elem || document ],=0A=
			type =3D core_hasOwn.call( event, "type" ) ? event.type : event,=0A=
			namespaces =3D core_hasOwn.call( event, "namespace" ) ? =
event.namespace.split(".") : [];=0A=
=0A=
		cur =3D tmp =3D elem =3D elem || document;=0A=
=0A=
		// Don't do events on text and comment nodes=0A=
		if ( elem.nodeType =3D=3D=3D 3 || elem.nodeType =3D=3D=3D 8 ) {=0A=
			return;=0A=
		}=0A=
=0A=
		// focus/blur morphs to focusin/out; ensure we're not firing them =
right now=0A=
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {=0A=
			return;=0A=
		}=0A=
=0A=
		if ( type.indexOf(".") >=3D 0 ) {=0A=
			// Namespaced trigger; create a regexp to match event type in handle()=0A=
			namespaces =3D type.split(".");=0A=
			type =3D namespaces.shift();=0A=
			namespaces.sort();=0A=
		}=0A=
		ontype =3D type.indexOf(":") < 0 && "on" + type;=0A=
=0A=
		// Caller can pass in a jQuery.Event object, Object, or just an event =
type string=0A=
		event =3D event[ jQuery.expando ] ?=0A=
			event :=0A=
			new jQuery.Event( type, typeof event =3D=3D=3D "object" && event );=0A=
=0A=
		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always =
true)=0A=
		event.isTrigger =3D onlyHandlers ? 2 : 3;=0A=
		event.namespace =3D namespaces.join(".");=0A=
		event.namespace_re =3D event.namespace ?=0A=
			new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" =
) :=0A=
			null;=0A=
=0A=
		// Clean up the event in case it is being reused=0A=
		event.result =3D undefined;=0A=
		if ( !event.target ) {=0A=
			event.target =3D elem;=0A=
		}=0A=
=0A=
		// Clone any incoming data and prepend the event, creating the handler =
arg list=0A=
		data =3D data =3D=3D null ?=0A=
			[ event ] :=0A=
			jQuery.makeArray( data, [ event ] );=0A=
=0A=
		// Allow special events to draw outside the lines=0A=
		special =3D jQuery.event.special[ type ] || {};=0A=
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, =
data ) =3D=3D=3D false ) {=0A=
			return;=0A=
		}=0A=
=0A=
		// Determine event propagation path in advance, per W3C events spec =
(#9951)=0A=
		// Bubble up to document, then to window; watch for a global =
ownerDocument var (#9724)=0A=
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {=0A=
=0A=
			bubbleType =3D special.delegateType || type;=0A=
			if ( !rfocusMorph.test( bubbleType + type ) ) {=0A=
				cur =3D cur.parentNode;=0A=
			}=0A=
			for ( ; cur; cur =3D cur.parentNode ) {=0A=
				eventPath.push( cur );=0A=
				tmp =3D cur;=0A=
			}=0A=
=0A=
			// Only add window if we got to document (e.g., not plain obj or =
detached DOM)=0A=
			if ( tmp =3D=3D=3D (elem.ownerDocument || document) ) {=0A=
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );=0A=
			}=0A=
		}=0A=
=0A=
		// Fire handlers on the event path=0A=
		i =3D 0;=0A=
		while ( (cur =3D eventPath[i++]) && !event.isPropagationStopped() ) {=0A=
=0A=
			event.type =3D i > 1 ?=0A=
				bubbleType :=0A=
				special.bindType || type;=0A=
=0A=
			// jQuery handler=0A=
			handle =3D ( data_priv.get( cur, "events" ) || {} )[ event.type ] && =
data_priv.get( cur, "handle" );=0A=
			if ( handle ) {=0A=
				handle.apply( cur, data );=0A=
			}=0A=
=0A=
			// Native handler=0A=
			handle =3D ontype && cur[ ontype ];=0A=
			if ( handle && jQuery.acceptData( cur ) && handle.apply && =
handle.apply( cur, data ) =3D=3D=3D false ) {=0A=
				event.preventDefault();=0A=
			}=0A=
		}=0A=
		event.type =3D type;=0A=
=0A=
		// If nobody prevented the default action, do it now=0A=
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {=0A=
=0A=
			if ( (!special._default || special._default.apply( eventPath.pop(), =
data ) =3D=3D=3D false) &&=0A=
				jQuery.acceptData( elem ) ) {=0A=
=0A=
				// Call a native DOM method on the target with the same name name as =
the event.=0A=
				// Don't do default actions on window, that's where global variables =
be (#6170)=0A=
				if ( ontype && jQuery.isFunction( elem[ type ] ) && =
!jQuery.isWindow( elem ) ) {=0A=
=0A=
					// Don't re-trigger an onFOO event when we call its FOO() method=0A=
					tmp =3D elem[ ontype ];=0A=
=0A=
					if ( tmp ) {=0A=
						elem[ ontype ] =3D null;=0A=
					}=0A=
=0A=
					// Prevent re-triggering of the same event, since we already =
bubbled it above=0A=
					jQuery.event.triggered =3D type;=0A=
					elem[ type ]();=0A=
					jQuery.event.triggered =3D undefined;=0A=
=0A=
					if ( tmp ) {=0A=
						elem[ ontype ] =3D tmp;=0A=
					}=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		return event.result;=0A=
	},=0A=
=0A=
	dispatch: function( event ) {=0A=
=0A=
		// Make a writable jQuery.Event from the native event object=0A=
		event =3D jQuery.event.fix( event );=0A=
=0A=
		var i, j, ret, matched, handleObj,=0A=
			handlerQueue =3D [],=0A=
			args =3D core_slice.call( arguments ),=0A=
			handlers =3D ( data_priv.get( this, "events" ) || {} )[ event.type ] =
|| [],=0A=
			special =3D jQuery.event.special[ event.type ] || {};=0A=
=0A=
		// Use the fix-ed jQuery.Event rather than the (read-only) native event=0A=
		args[0] =3D event;=0A=
		event.delegateTarget =3D this;=0A=
=0A=
		// Call the preDispatch hook for the mapped type, and let it bail if =
desired=0A=
		if ( special.preDispatch && special.preDispatch.call( this, event ) =
=3D=3D=3D false ) {=0A=
			return;=0A=
		}=0A=
=0A=
		// Determine handlers=0A=
		handlerQueue =3D jQuery.event.handlers.call( this, event, handlers );=0A=
=0A=
		// Run delegates first; they may want to stop propagation beneath us=0A=
		i =3D 0;=0A=
		while ( (matched =3D handlerQueue[ i++ ]) && =
!event.isPropagationStopped() ) {=0A=
			event.currentTarget =3D matched.elem;=0A=
=0A=
			j =3D 0;=0A=
			while ( (handleObj =3D matched.handlers[ j++ ]) && =
!event.isImmediatePropagationStopped() ) {=0A=
=0A=
				// Triggered event must either 1) have no namespace, or=0A=
				// 2) have namespace(s) a subset or equal to those in the bound =
event (both can have no namespace).=0A=
				if ( !event.namespace_re || event.namespace_re.test( =
handleObj.namespace ) ) {=0A=
=0A=
					event.handleObj =3D handleObj;=0A=
					event.data =3D handleObj.data;=0A=
=0A=
					ret =3D ( (jQuery.event.special[ handleObj.origType ] || {}).handle =
|| handleObj.handler )=0A=
							.apply( matched.elem, args );=0A=
=0A=
					if ( ret !=3D=3D undefined ) {=0A=
						if ( (event.result =3D ret) =3D=3D=3D false ) {=0A=
							event.preventDefault();=0A=
							event.stopPropagation();=0A=
						}=0A=
					}=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		// Call the postDispatch hook for the mapped type=0A=
		if ( special.postDispatch ) {=0A=
			special.postDispatch.call( this, event );=0A=
		}=0A=
=0A=
		return event.result;=0A=
	},=0A=
=0A=
	handlers: function( event, handlers ) {=0A=
		var i, matches, sel, handleObj,=0A=
			handlerQueue =3D [],=0A=
			delegateCount =3D handlers.delegateCount,=0A=
			cur =3D event.target;=0A=
=0A=
		// Find delegate handlers=0A=
		// Black-hole SVG <use> instance trees (#13180)=0A=
		// Avoid non-left-click bubbling in Firefox (#3861)=0A=
		if ( delegateCount && cur.nodeType && (!event.button || event.type =
!=3D=3D "click") ) {=0A=
=0A=
			for ( ; cur !=3D=3D this; cur =3D cur.parentNode || this ) {=0A=
=0A=
				// Don't process clicks on disabled elements (#6911, #8165, #11382, =
#11764)=0A=
				if ( cur.disabled !=3D=3D true || event.type !=3D=3D "click" ) {=0A=
					matches =3D [];=0A=
					for ( i =3D 0; i < delegateCount; i++ ) {=0A=
						handleObj =3D handlers[ i ];=0A=
=0A=
						// Don't conflict with Object.prototype properties (#13203)=0A=
						sel =3D handleObj.selector + " ";=0A=
=0A=
						if ( matches[ sel ] =3D=3D=3D undefined ) {=0A=
							matches[ sel ] =3D handleObj.needsContext ?=0A=
								jQuery( sel, this ).index( cur ) >=3D 0 :=0A=
								jQuery.find( sel, this, null, [ cur ] ).length;=0A=
						}=0A=
						if ( matches[ sel ] ) {=0A=
							matches.push( handleObj );=0A=
						}=0A=
					}=0A=
					if ( matches.length ) {=0A=
						handlerQueue.push({ elem: cur, handlers: matches });=0A=
					}=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		// Add the remaining (directly-bound) handlers=0A=
		if ( delegateCount < handlers.length ) {=0A=
			handlerQueue.push({ elem: this, handlers: handlers.slice( =
delegateCount ) });=0A=
		}=0A=
=0A=
		return handlerQueue;=0A=
	},=0A=
=0A=
	// Includes some event props shared by KeyEvent and MouseEvent=0A=
	props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase =
metaKey relatedTarget shiftKey target timeStamp view which".split(" "),=0A=
=0A=
	fixHooks: {},=0A=
=0A=
	keyHooks: {=0A=
		props: "char charCode key keyCode".split(" "),=0A=
		filter: function( event, original ) {=0A=
=0A=
			// Add which for key events=0A=
			if ( event.which =3D=3D null ) {=0A=
				event.which =3D original.charCode !=3D null ? original.charCode : =
original.keyCode;=0A=
			}=0A=
=0A=
			return event;=0A=
		}=0A=
	},=0A=
=0A=
	mouseHooks: {=0A=
		props: "button buttons clientX clientY offsetX offsetY pageX pageY =
screenX screenY toElement".split(" "),=0A=
		filter: function( event, original ) {=0A=
			var eventDoc, doc, body,=0A=
				button =3D original.button;=0A=
=0A=
			// Calculate pageX/Y if missing and clientX/Y available=0A=
			if ( event.pageX =3D=3D null && original.clientX !=3D null ) {=0A=
				eventDoc =3D event.target.ownerDocument || document;=0A=
				doc =3D eventDoc.documentElement;=0A=
				body =3D eventDoc.body;=0A=
=0A=
				event.pageX =3D original.clientX + ( doc && doc.scrollLeft || body =
&& body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && =
body.clientLeft || 0 );=0A=
				event.pageY =3D original.clientY + ( doc && doc.scrollTop  || body =
&& body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && =
body.clientTop  || 0 );=0A=
			}=0A=
=0A=
			// Add which for click: 1 =3D=3D=3D left; 2 =3D=3D=3D middle; 3 =
=3D=3D=3D right=0A=
			// Note: button is not normalized, so don't use it=0A=
			if ( !event.which && button !=3D=3D undefined ) {=0A=
				event.which =3D ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? =
2 : 0 ) ) );=0A=
			}=0A=
=0A=
			return event;=0A=
		}=0A=
	},=0A=
=0A=
	fix: function( event ) {=0A=
		if ( event[ jQuery.expando ] ) {=0A=
			return event;=0A=
		}=0A=
=0A=
		// Create a writable copy of the event object and normalize some =
properties=0A=
		var i, prop, copy,=0A=
			type =3D event.type,=0A=
			originalEvent =3D event,=0A=
			fixHook =3D this.fixHooks[ type ];=0A=
=0A=
		if ( !fixHook ) {=0A=
			this.fixHooks[ type ] =3D fixHook =3D=0A=
				rmouseEvent.test( type ) ? this.mouseHooks :=0A=
				rkeyEvent.test( type ) ? this.keyHooks :=0A=
				{};=0A=
		}=0A=
		copy =3D fixHook.props ? this.props.concat( fixHook.props ) : =
this.props;=0A=
=0A=
		event =3D new jQuery.Event( originalEvent );=0A=
=0A=
		i =3D copy.length;=0A=
		while ( i-- ) {=0A=
			prop =3D copy[ i ];=0A=
			event[ prop ] =3D originalEvent[ prop ];=0A=
		}=0A=
=0A=
		// Support: Cordova 2.5 (WebKit) (#13255)=0A=
		// All events should have a target; Cordova deviceready doesn't=0A=
		if ( !event.target ) {=0A=
			event.target =3D document;=0A=
		}=0A=
=0A=
		// Support: Safari 6.0+, Chrome < 28=0A=
		// Target should not be a text node (#504, #13143)=0A=
		if ( event.target.nodeType =3D=3D=3D 3 ) {=0A=
			event.target =3D event.target.parentNode;=0A=
		}=0A=
=0A=
		return fixHook.filter? fixHook.filter( event, originalEvent ) : event;=0A=
	},=0A=
=0A=
	special: {=0A=
		load: {=0A=
			// Prevent triggered image.load events from bubbling to window.load=0A=
			noBubble: true=0A=
		},=0A=
		focus: {=0A=
			// Fire native event if possible so blur/focus sequence is correct=0A=
			trigger: function() {=0A=
				if ( this !=3D=3D safeActiveElement() && this.focus ) {=0A=
					this.focus();=0A=
					return false;=0A=
				}=0A=
			},=0A=
			delegateType: "focusin"=0A=
		},=0A=
		blur: {=0A=
			trigger: function() {=0A=
				if ( this =3D=3D=3D safeActiveElement() && this.blur ) {=0A=
					this.blur();=0A=
					return false;=0A=
				}=0A=
			},=0A=
			delegateType: "focusout"=0A=
		},=0A=
		click: {=0A=
			// For checkbox, fire native event so checked state will be right=0A=
			trigger: function() {=0A=
				if ( this.type =3D=3D=3D "checkbox" && this.click && =
jQuery.nodeName( this, "input" ) ) {=0A=
					this.click();=0A=
					return false;=0A=
				}=0A=
			},=0A=
=0A=
			// For cross-browser consistency, don't fire native .click() on links=0A=
			_default: function( event ) {=0A=
				return jQuery.nodeName( event.target, "a" );=0A=
			}=0A=
		},=0A=
=0A=
		beforeunload: {=0A=
			postDispatch: function( event ) {=0A=
=0A=
				// Support: Firefox 20+=0A=
				// Firefox doesn't alert if the returnValue field is not set.=0A=
				if ( event.result !=3D=3D undefined ) {=0A=
					event.originalEvent.returnValue =3D event.result;=0A=
				}=0A=
			}=0A=
		}=0A=
	},=0A=
=0A=
	simulate: function( type, elem, event, bubble ) {=0A=
		// Piggyback on a donor event to simulate a different one.=0A=
		// Fake originalEvent to avoid donor's stopPropagation, but if the=0A=
		// simulated event prevents default then we do the same on the donor.=0A=
		var e =3D jQuery.extend(=0A=
			new jQuery.Event(),=0A=
			event,=0A=
			{=0A=
				type: type,=0A=
				isSimulated: true,=0A=
				originalEvent: {}=0A=
			}=0A=
		);=0A=
		if ( bubble ) {=0A=
			jQuery.event.trigger( e, null, elem );=0A=
		} else {=0A=
			jQuery.event.dispatch.call( elem, e );=0A=
		}=0A=
		if ( e.isDefaultPrevented() ) {=0A=
			event.preventDefault();=0A=
		}=0A=
	}=0A=
};=0A=
=0A=
jQuery.removeEvent =3D function( elem, type, handle ) {=0A=
	if ( elem.removeEventListener ) {=0A=
		elem.removeEventListener( type, handle, false );=0A=
	}=0A=
};=0A=
=0A=
jQuery.Event =3D function( src, props ) {=0A=
	// Allow instantiation without the 'new' keyword=0A=
	if ( !(this instanceof jQuery.Event) ) {=0A=
		return new jQuery.Event( src, props );=0A=
	}=0A=
=0A=
	// Event object=0A=
	if ( src && src.type ) {=0A=
		this.originalEvent =3D src;=0A=
		this.type =3D src.type;=0A=
=0A=
		// Events bubbling up the document may have been marked as prevented=0A=
		// by a handler lower down the tree; reflect the correct value.=0A=
		this.isDefaultPrevented =3D ( src.defaultPrevented ||=0A=
			src.getPreventDefault && src.getPreventDefault() ) ? returnTrue : =
returnFalse;=0A=
=0A=
	// Event type=0A=
	} else {=0A=
		this.type =3D src;=0A=
	}=0A=
=0A=
	// Put explicitly provided properties onto the event object=0A=
	if ( props ) {=0A=
		jQuery.extend( this, props );=0A=
	}=0A=
=0A=
	// Create a timestamp if incoming event doesn't have one=0A=
	this.timeStamp =3D src && src.timeStamp || jQuery.now();=0A=
=0A=
	// Mark it as fixed=0A=
	this[ jQuery.expando ] =3D true;=0A=
};=0A=
=0A=
// jQuery.Event is based on DOM3 Events as specified by the ECMAScript =
Language Binding=0A=
// =
http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-bind=
ing.html=0A=
jQuery.Event.prototype =3D {=0A=
	isDefaultPrevented: returnFalse,=0A=
	isPropagationStopped: returnFalse,=0A=
	isImmediatePropagationStopped: returnFalse,=0A=
=0A=
	preventDefault: function() {=0A=
		var e =3D this.originalEvent;=0A=
=0A=
		this.isDefaultPrevented =3D returnTrue;=0A=
=0A=
		if ( e && e.preventDefault ) {=0A=
			e.preventDefault();=0A=
		}=0A=
	},=0A=
	stopPropagation: function() {=0A=
		var e =3D this.originalEvent;=0A=
=0A=
		this.isPropagationStopped =3D returnTrue;=0A=
=0A=
		if ( e && e.stopPropagation ) {=0A=
			e.stopPropagation();=0A=
		}=0A=
	},=0A=
	stopImmediatePropagation: function() {=0A=
		this.isImmediatePropagationStopped =3D returnTrue;=0A=
		this.stopPropagation();=0A=
	}=0A=
};=0A=
=0A=
// Create mouseenter/leave events using mouseover/out and event-time =
checks=0A=
// Support: Chrome 15+=0A=
jQuery.each({=0A=
	mouseenter: "mouseover",=0A=
	mouseleave: "mouseout"=0A=
}, function( orig, fix ) {=0A=
	jQuery.event.special[ orig ] =3D {=0A=
		delegateType: fix,=0A=
		bindType: fix,=0A=
=0A=
		handle: function( event ) {=0A=
			var ret,=0A=
				target =3D this,=0A=
				related =3D event.relatedTarget,=0A=
				handleObj =3D event.handleObj;=0A=
=0A=
			// For mousenter/leave call the handler if related is outside the =
target.=0A=
			// NB: No relatedTarget if the mouse left/entered the browser window=0A=
			if ( !related || (related !=3D=3D target && !jQuery.contains( target, =
related )) ) {=0A=
				event.type =3D handleObj.origType;=0A=
				ret =3D handleObj.handler.apply( this, arguments );=0A=
				event.type =3D fix;=0A=
			}=0A=
			return ret;=0A=
		}=0A=
	};=0A=
});=0A=
=0A=
// Create "bubbling" focus and blur events=0A=
// Support: Firefox, Chrome, Safari=0A=
if ( !jQuery.support.focusinBubbles ) {=0A=
	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix =
) {=0A=
=0A=
		// Attach a single capturing handler while someone wants =
focusin/focusout=0A=
		var attaches =3D 0,=0A=
			handler =3D function( event ) {=0A=
				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), =
true );=0A=
			};=0A=
=0A=
		jQuery.event.special[ fix ] =3D {=0A=
			setup: function() {=0A=
				if ( attaches++ =3D=3D=3D 0 ) {=0A=
					document.addEventListener( orig, handler, true );=0A=
				}=0A=
			},=0A=
			teardown: function() {=0A=
				if ( --attaches =3D=3D=3D 0 ) {=0A=
					document.removeEventListener( orig, handler, true );=0A=
				}=0A=
			}=0A=
		};=0A=
	});=0A=
}=0A=
=0A=
jQuery.fn.extend({=0A=
=0A=
	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {=0A=
		var origFn, type;=0A=
=0A=
		// Types can be a map of types/handlers=0A=
		if ( typeof types =3D=3D=3D "object" ) {=0A=
			// ( types-Object, selector, data )=0A=
			if ( typeof selector !=3D=3D "string" ) {=0A=
				// ( types-Object, data )=0A=
				data =3D data || selector;=0A=
				selector =3D undefined;=0A=
			}=0A=
			for ( type in types ) {=0A=
				this.on( type, selector, data, types[ type ], one );=0A=
			}=0A=
			return this;=0A=
		}=0A=
=0A=
		if ( data =3D=3D null && fn =3D=3D null ) {=0A=
			// ( types, fn )=0A=
			fn =3D selector;=0A=
			data =3D selector =3D undefined;=0A=
		} else if ( fn =3D=3D null ) {=0A=
			if ( typeof selector =3D=3D=3D "string" ) {=0A=
				// ( types, selector, fn )=0A=
				fn =3D data;=0A=
				data =3D undefined;=0A=
			} else {=0A=
				// ( types, data, fn )=0A=
				fn =3D data;=0A=
				data =3D selector;=0A=
				selector =3D undefined;=0A=
			}=0A=
		}=0A=
		if ( fn =3D=3D=3D false ) {=0A=
			fn =3D returnFalse;=0A=
		} else if ( !fn ) {=0A=
			return this;=0A=
		}=0A=
=0A=
		if ( one =3D=3D=3D 1 ) {=0A=
			origFn =3D fn;=0A=
			fn =3D function( event ) {=0A=
				// Can use an empty set, since event contains the info=0A=
				jQuery().off( event );=0A=
				return origFn.apply( this, arguments );=0A=
			};=0A=
			// Use same guid so caller can remove using origFn=0A=
			fn.guid =3D origFn.guid || ( origFn.guid =3D jQuery.guid++ );=0A=
		}=0A=
		return this.each( function() {=0A=
			jQuery.event.add( this, types, fn, data, selector );=0A=
		});=0A=
	},=0A=
	one: function( types, selector, data, fn ) {=0A=
		return this.on( types, selector, data, fn, 1 );=0A=
	},=0A=
	off: function( types, selector, fn ) {=0A=
		var handleObj, type;=0A=
		if ( types && types.preventDefault && types.handleObj ) {=0A=
			// ( event )  dispatched jQuery.Event=0A=
			handleObj =3D types.handleObj;=0A=
			jQuery( types.delegateTarget ).off(=0A=
				handleObj.namespace ? handleObj.origType + "." + handleObj.namespace =
: handleObj.origType,=0A=
				handleObj.selector,=0A=
				handleObj.handler=0A=
			);=0A=
			return this;=0A=
		}=0A=
		if ( typeof types =3D=3D=3D "object" ) {=0A=
			// ( types-object [, selector] )=0A=
			for ( type in types ) {=0A=
				this.off( type, selector, types[ type ] );=0A=
			}=0A=
			return this;=0A=
		}=0A=
		if ( selector =3D=3D=3D false || typeof selector =3D=3D=3D "function" =
) {=0A=
			// ( types [, fn] )=0A=
			fn =3D selector;=0A=
			selector =3D undefined;=0A=
		}=0A=
		if ( fn =3D=3D=3D false ) {=0A=
			fn =3D returnFalse;=0A=
		}=0A=
		return this.each(function() {=0A=
			jQuery.event.remove( this, types, fn, selector );=0A=
		});=0A=
	},=0A=
=0A=
	trigger: function( type, data ) {=0A=
		return this.each(function() {=0A=
			jQuery.event.trigger( type, data, this );=0A=
		});=0A=
	},=0A=
	triggerHandler: function( type, data ) {=0A=
		var elem =3D this[0];=0A=
		if ( elem ) {=0A=
			return jQuery.event.trigger( type, data, elem, true );=0A=
		}=0A=
	}=0A=
});=0A=
var isSimple =3D /^.[^:#\[\.,]*$/,=0A=
	rparentsprev =3D /^(?:parents|prev(?:Until|All))/,=0A=
	rneedsContext =3D jQuery.expr.match.needsContext,=0A=
	// methods guaranteed to produce a unique set when starting from a =
unique set=0A=
	guaranteedUnique =3D {=0A=
		children: true,=0A=
		contents: true,=0A=
		next: true,=0A=
		prev: true=0A=
	};=0A=
=0A=
jQuery.fn.extend({=0A=
	find: function( selector ) {=0A=
		var i,=0A=
			ret =3D [],=0A=
			self =3D this,=0A=
			len =3D self.length;=0A=
=0A=
		if ( typeof selector !=3D=3D "string" ) {=0A=
			return this.pushStack( jQuery( selector ).filter(function() {=0A=
				for ( i =3D 0; i < len; i++ ) {=0A=
					if ( jQuery.contains( self[ i ], this ) ) {=0A=
						return true;=0A=
					}=0A=
				}=0A=
			}) );=0A=
		}=0A=
=0A=
		for ( i =3D 0; i < len; i++ ) {=0A=
			jQuery.find( selector, self[ i ], ret );=0A=
		}=0A=
=0A=
		// Needed because $( selector, context ) becomes $( context ).find( =
selector )=0A=
		ret =3D this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );=0A=
		ret.selector =3D this.selector ? this.selector + " " + selector : =
selector;=0A=
		return ret;=0A=
	},=0A=
=0A=
	has: function( target ) {=0A=
		var targets =3D jQuery( target, this ),=0A=
			l =3D targets.length;=0A=
=0A=
		return this.filter(function() {=0A=
			var i =3D 0;=0A=
			for ( ; i < l; i++ ) {=0A=
				if ( jQuery.contains( this, targets[i] ) ) {=0A=
					return true;=0A=
				}=0A=
			}=0A=
		});=0A=
	},=0A=
=0A=
	not: function( selector ) {=0A=
		return this.pushStack( winnow(this, selector || [], true) );=0A=
	},=0A=
=0A=
	filter: function( selector ) {=0A=
		return this.pushStack( winnow(this, selector || [], false) );=0A=
	},=0A=
=0A=
	is: function( selector ) {=0A=
		return !!winnow(=0A=
			this,=0A=
=0A=
			// If this is a positional/relative selector, check membership in the =
returned set=0A=
			// so $("p:first").is("p:last") won't return true for a doc with two =
"p".=0A=
			typeof selector =3D=3D=3D "string" && rneedsContext.test( selector ) ?=0A=
				jQuery( selector ) :=0A=
				selector || [],=0A=
			false=0A=
		).length;=0A=
	},=0A=
=0A=
	closest: function( selectors, context ) {=0A=
		var cur,=0A=
			i =3D 0,=0A=
			l =3D this.length,=0A=
			matched =3D [],=0A=
			pos =3D ( rneedsContext.test( selectors ) || typeof selectors !=3D=3D =
"string" ) ?=0A=
				jQuery( selectors, context || this.context ) :=0A=
				0;=0A=
=0A=
		for ( ; i < l; i++ ) {=0A=
			for ( cur =3D this[i]; cur && cur !=3D=3D context; cur =3D =
cur.parentNode ) {=0A=
				// Always skip document fragments=0A=
				if ( cur.nodeType < 11 && (pos ?=0A=
					pos.index(cur) > -1 :=0A=
=0A=
					// Don't pass non-elements to Sizzle=0A=
					cur.nodeType =3D=3D=3D 1 &&=0A=
						jQuery.find.matchesSelector(cur, selectors)) ) {=0A=
=0A=
					cur =3D matched.push( cur );=0A=
					break;=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		return this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : =
matched );=0A=
	},=0A=
=0A=
	// Determine the position of an element within=0A=
	// the matched set of elements=0A=
	index: function( elem ) {=0A=
=0A=
		// No argument, return index in parent=0A=
		if ( !elem ) {=0A=
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? =
this.first().prevAll().length : -1;=0A=
		}=0A=
=0A=
		// index in selector=0A=
		if ( typeof elem =3D=3D=3D "string" ) {=0A=
			return core_indexOf.call( jQuery( elem ), this[ 0 ] );=0A=
		}=0A=
=0A=
		// Locate the position of the desired element=0A=
		return core_indexOf.call( this,=0A=
=0A=
			// If it receives a jQuery object, the first element is used=0A=
			elem.jquery ? elem[ 0 ] : elem=0A=
		);=0A=
	},=0A=
=0A=
	add: function( selector, context ) {=0A=
		var set =3D typeof selector =3D=3D=3D "string" ?=0A=
				jQuery( selector, context ) :=0A=
				jQuery.makeArray( selector && selector.nodeType ? [ selector ] : =
selector ),=0A=
			all =3D jQuery.merge( this.get(), set );=0A=
=0A=
		return this.pushStack( jQuery.unique(all) );=0A=
	},=0A=
=0A=
	addBack: function( selector ) {=0A=
		return this.add( selector =3D=3D null ?=0A=
			this.prevObject : this.prevObject.filter(selector)=0A=
		);=0A=
	}=0A=
});=0A=
=0A=
function sibling( cur, dir ) {=0A=
	while ( (cur =3D cur[dir]) && cur.nodeType !=3D=3D 1 ) {}=0A=
=0A=
	return cur;=0A=
}=0A=
=0A=
jQuery.each({=0A=
	parent: function( elem ) {=0A=
		var parent =3D elem.parentNode;=0A=
		return parent && parent.nodeType !=3D=3D 11 ? parent : null;=0A=
	},=0A=
	parents: function( elem ) {=0A=
		return jQuery.dir( elem, "parentNode" );=0A=
	},=0A=
	parentsUntil: function( elem, i, until ) {=0A=
		return jQuery.dir( elem, "parentNode", until );=0A=
	},=0A=
	next: function( elem ) {=0A=
		return sibling( elem, "nextSibling" );=0A=
	},=0A=
	prev: function( elem ) {=0A=
		return sibling( elem, "previousSibling" );=0A=
	},=0A=
	nextAll: function( elem ) {=0A=
		return jQuery.dir( elem, "nextSibling" );=0A=
	},=0A=
	prevAll: function( elem ) {=0A=
		return jQuery.dir( elem, "previousSibling" );=0A=
	},=0A=
	nextUntil: function( elem, i, until ) {=0A=
		return jQuery.dir( elem, "nextSibling", until );=0A=
	},=0A=
	prevUntil: function( elem, i, until ) {=0A=
		return jQuery.dir( elem, "previousSibling", until );=0A=
	},=0A=
	siblings: function( elem ) {=0A=
		return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );=0A=
	},=0A=
	children: function( elem ) {=0A=
		return jQuery.sibling( elem.firstChild );=0A=
	},=0A=
	contents: function( elem ) {=0A=
		return elem.contentDocument || jQuery.merge( [], elem.childNodes );=0A=
	}=0A=
}, function( name, fn ) {=0A=
	jQuery.fn[ name ] =3D function( until, selector ) {=0A=
		var matched =3D jQuery.map( this, fn, until );=0A=
=0A=
		if ( name.slice( -5 ) !=3D=3D "Until" ) {=0A=
			selector =3D until;=0A=
		}=0A=
=0A=
		if ( selector && typeof selector =3D=3D=3D "string" ) {=0A=
			matched =3D jQuery.filter( selector, matched );=0A=
		}=0A=
=0A=
		if ( this.length > 1 ) {=0A=
			// Remove duplicates=0A=
			if ( !guaranteedUnique[ name ] ) {=0A=
				jQuery.unique( matched );=0A=
			}=0A=
=0A=
			// Reverse order for parents* and prev-derivatives=0A=
			if ( rparentsprev.test( name ) ) {=0A=
				matched.reverse();=0A=
			}=0A=
		}=0A=
=0A=
		return this.pushStack( matched );=0A=
	};=0A=
});=0A=
=0A=
jQuery.extend({=0A=
	filter: function( expr, elems, not ) {=0A=
		var elem =3D elems[ 0 ];=0A=
=0A=
		if ( not ) {=0A=
			expr =3D ":not(" + expr + ")";=0A=
		}=0A=
=0A=
		return elems.length =3D=3D=3D 1 && elem.nodeType =3D=3D=3D 1 ?=0A=
			jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :=0A=
			jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {=0A=
				return elem.nodeType =3D=3D=3D 1;=0A=
			}));=0A=
	},=0A=
=0A=
	dir: function( elem, dir, until ) {=0A=
		var matched =3D [],=0A=
			truncate =3D until !=3D=3D undefined;=0A=
=0A=
		while ( (elem =3D elem[ dir ]) && elem.nodeType !=3D=3D 9 ) {=0A=
			if ( elem.nodeType =3D=3D=3D 1 ) {=0A=
				if ( truncate && jQuery( elem ).is( until ) ) {=0A=
					break;=0A=
				}=0A=
				matched.push( elem );=0A=
			}=0A=
		}=0A=
		return matched;=0A=
	},=0A=
=0A=
	sibling: function( n, elem ) {=0A=
		var matched =3D [];=0A=
=0A=
		for ( ; n; n =3D n.nextSibling ) {=0A=
			if ( n.nodeType =3D=3D=3D 1 && n !=3D=3D elem ) {=0A=
				matched.push( n );=0A=
			}=0A=
		}=0A=
=0A=
		return matched;=0A=
	}=0A=
});=0A=
=0A=
// Implement the identical functionality for filter and not=0A=
function winnow( elements, qualifier, not ) {=0A=
	if ( jQuery.isFunction( qualifier ) ) {=0A=
		return jQuery.grep( elements, function( elem, i ) {=0A=
			/* jshint -W018 */=0A=
			return !!qualifier.call( elem, i, elem ) !=3D=3D not;=0A=
		});=0A=
=0A=
	}=0A=
=0A=
	if ( qualifier.nodeType ) {=0A=
		return jQuery.grep( elements, function( elem ) {=0A=
			return ( elem =3D=3D=3D qualifier ) !=3D=3D not;=0A=
		});=0A=
=0A=
	}=0A=
=0A=
	if ( typeof qualifier =3D=3D=3D "string" ) {=0A=
		if ( isSimple.test( qualifier ) ) {=0A=
			return jQuery.filter( qualifier, elements, not );=0A=
		}=0A=
=0A=
		qualifier =3D jQuery.filter( qualifier, elements );=0A=
	}=0A=
=0A=
	return jQuery.grep( elements, function( elem ) {=0A=
		return ( core_indexOf.call( qualifier, elem ) >=3D 0 ) !=3D=3D not;=0A=
	});=0A=
}=0A=
var rxhtmlTag =3D =
/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi=
,=0A=
	rtagName =3D /<([\w:]+)/,=0A=
	rhtml =3D /<|&#?\w+;/,=0A=
	rnoInnerhtml =3D /<(?:script|style|link)/i,=0A=
	manipulation_rcheckableType =3D /^(?:checkbox|radio)$/i,=0A=
	// checked=3D"checked" or checked=0A=
	rchecked =3D /checked\s*(?:[^=3D]|=3D\s*.checked.)/i,=0A=
	rscriptType =3D /^$|\/(?:java|ecma)script/i,=0A=
	rscriptTypeMasked =3D /^true\/(.*)/,=0A=
	rcleanScript =3D /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,=0A=
=0A=
	// We have to close these tags to support XHTML (#13200)=0A=
	wrapMap =3D {=0A=
=0A=
		// Support: IE 9=0A=
		option: [ 1, "<select multiple=3D'multiple'>", "</select>" ],=0A=
=0A=
		thead: [ 1, "<table>", "</table>" ],=0A=
		col: [ 2, "<table><colgroup>", "</colgroup></table>" ],=0A=
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],=0A=
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],=0A=
=0A=
		_default: [ 0, "", "" ]=0A=
	};=0A=
=0A=
// Support: IE 9=0A=
wrapMap.optgroup =3D wrapMap.option;=0A=
=0A=
wrapMap.tbody =3D wrapMap.tfoot =3D wrapMap.colgroup =3D wrapMap.caption =
=3D wrapMap.thead;=0A=
wrapMap.th =3D wrapMap.td;=0A=
=0A=
jQuery.fn.extend({=0A=
	text: function( value ) {=0A=
		return jQuery.access( this, function( value ) {=0A=
			return value =3D=3D=3D undefined ?=0A=
				jQuery.text( this ) :=0A=
				this.empty().append( ( this[ 0 ] && this[ 0 ].ownerDocument || =
document ).createTextNode( value ) );=0A=
		}, null, value, arguments.length );=0A=
	},=0A=
=0A=
	append: function() {=0A=
		return this.domManip( arguments, function( elem ) {=0A=
			if ( this.nodeType =3D=3D=3D 1 || this.nodeType =3D=3D=3D 11 || =
this.nodeType =3D=3D=3D 9 ) {=0A=
				var target =3D manipulationTarget( this, elem );=0A=
				target.appendChild( elem );=0A=
			}=0A=
		});=0A=
	},=0A=
=0A=
	prepend: function() {=0A=
		return this.domManip( arguments, function( elem ) {=0A=
			if ( this.nodeType =3D=3D=3D 1 || this.nodeType =3D=3D=3D 11 || =
this.nodeType =3D=3D=3D 9 ) {=0A=
				var target =3D manipulationTarget( this, elem );=0A=
				target.insertBefore( elem, target.firstChild );=0A=
			}=0A=
		});=0A=
	},=0A=
=0A=
	before: function() {=0A=
		return this.domManip( arguments, function( elem ) {=0A=
			if ( this.parentNode ) {=0A=
				this.parentNode.insertBefore( elem, this );=0A=
			}=0A=
		});=0A=
	},=0A=
=0A=
	after: function() {=0A=
		return this.domManip( arguments, function( elem ) {=0A=
			if ( this.parentNode ) {=0A=
				this.parentNode.insertBefore( elem, this.nextSibling );=0A=
			}=0A=
		});=0A=
	},=0A=
=0A=
	// keepData is for internal use only--do not document=0A=
	remove: function( selector, keepData ) {=0A=
		var elem,=0A=
			elems =3D selector ? jQuery.filter( selector, this ) : this,=0A=
			i =3D 0;=0A=
=0A=
		for ( ; (elem =3D elems[i]) !=3D null; i++ ) {=0A=
			if ( !keepData && elem.nodeType =3D=3D=3D 1 ) {=0A=
				jQuery.cleanData( getAll( elem ) );=0A=
			}=0A=
=0A=
			if ( elem.parentNode ) {=0A=
				if ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {=0A=
					setGlobalEval( getAll( elem, "script" ) );=0A=
				}=0A=
				elem.parentNode.removeChild( elem );=0A=
			}=0A=
		}=0A=
=0A=
		return this;=0A=
	},=0A=
=0A=
	empty: function() {=0A=
		var elem,=0A=
			i =3D 0;=0A=
=0A=
		for ( ; (elem =3D this[i]) !=3D null; i++ ) {=0A=
			if ( elem.nodeType =3D=3D=3D 1 ) {=0A=
=0A=
				// Prevent memory leaks=0A=
				jQuery.cleanData( getAll( elem, false ) );=0A=
=0A=
				// Remove any remaining nodes=0A=
				elem.textContent =3D "";=0A=
			}=0A=
		}=0A=
=0A=
		return this;=0A=
	},=0A=
=0A=
	clone: function( dataAndEvents, deepDataAndEvents ) {=0A=
		dataAndEvents =3D dataAndEvents =3D=3D null ? false : dataAndEvents;=0A=
		deepDataAndEvents =3D deepDataAndEvents =3D=3D null ? dataAndEvents : =
deepDataAndEvents;=0A=
=0A=
		return this.map( function () {=0A=
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );=0A=
		});=0A=
	},=0A=
=0A=
	html: function( value ) {=0A=
		return jQuery.access( this, function( value ) {=0A=
			var elem =3D this[ 0 ] || {},=0A=
				i =3D 0,=0A=
				l =3D this.length;=0A=
=0A=
			if ( value =3D=3D=3D undefined && elem.nodeType =3D=3D=3D 1 ) {=0A=
				return elem.innerHTML;=0A=
			}=0A=
=0A=
			// See if we can take a shortcut and just use innerHTML=0A=
			if ( typeof value =3D=3D=3D "string" && !rnoInnerhtml.test( value ) &&=0A=
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 =
].toLowerCase() ] ) {=0A=
=0A=
				value =3D value.replace( rxhtmlTag, "<$1></$2>" );=0A=
=0A=
				try {=0A=
					for ( ; i < l; i++ ) {=0A=
						elem =3D this[ i ] || {};=0A=
=0A=
						// Remove element nodes and prevent memory leaks=0A=
						if ( elem.nodeType =3D=3D=3D 1 ) {=0A=
							jQuery.cleanData( getAll( elem, false ) );=0A=
							elem.innerHTML =3D value;=0A=
						}=0A=
					}=0A=
=0A=
					elem =3D 0;=0A=
=0A=
				// If using innerHTML throws an exception, use the fallback method=0A=
				} catch( e ) {}=0A=
			}=0A=
=0A=
			if ( elem ) {=0A=
				this.empty().append( value );=0A=
			}=0A=
		}, null, value, arguments.length );=0A=
	},=0A=
=0A=
	replaceWith: function() {=0A=
		var=0A=
			// Snapshot the DOM in case .domManip sweeps something relevant into =
its fragment=0A=
			args =3D jQuery.map( this, function( elem ) {=0A=
				return [ elem.nextSibling, elem.parentNode ];=0A=
			}),=0A=
			i =3D 0;=0A=
=0A=
		// Make the changes, replacing each context element with the new =
content=0A=
		this.domManip( arguments, function( elem ) {=0A=
			var next =3D args[ i++ ],=0A=
				parent =3D args[ i++ ];=0A=
=0A=
			if ( parent ) {=0A=
				// Don't use the snapshot next if it has moved (#13810)=0A=
				if ( next && next.parentNode !=3D=3D parent ) {=0A=
					next =3D this.nextSibling;=0A=
				}=0A=
				jQuery( this ).remove();=0A=
				parent.insertBefore( elem, next );=0A=
			}=0A=
		// Allow new content to include elements from the context set=0A=
		}, true );=0A=
=0A=
		// Force removal if there was no new content (e.g., from empty =
arguments)=0A=
		return i ? this : this.remove();=0A=
	},=0A=
=0A=
	detach: function( selector ) {=0A=
		return this.remove( selector, true );=0A=
	},=0A=
=0A=
	domManip: function( args, callback, allowIntersection ) {=0A=
=0A=
		// Flatten any nested arrays=0A=
		args =3D core_concat.apply( [], args );=0A=
=0A=
		var fragment, first, scripts, hasScripts, node, doc,=0A=
			i =3D 0,=0A=
			l =3D this.length,=0A=
			set =3D this,=0A=
			iNoClone =3D l - 1,=0A=
			value =3D args[ 0 ],=0A=
			isFunction =3D jQuery.isFunction( value );=0A=
=0A=
		// We can't cloneNode fragments that contain checked, in WebKit=0A=
		if ( isFunction || !( l <=3D 1 || typeof value !=3D=3D "string" || =
jQuery.support.checkClone || !rchecked.test( value ) ) ) {=0A=
			return this.each(function( index ) {=0A=
				var self =3D set.eq( index );=0A=
				if ( isFunction ) {=0A=
					args[ 0 ] =3D value.call( this, index, self.html() );=0A=
				}=0A=
				self.domManip( args, callback, allowIntersection );=0A=
			});=0A=
		}=0A=
=0A=
		if ( l ) {=0A=
			fragment =3D jQuery.buildFragment( args, this[ 0 ].ownerDocument, =
false, !allowIntersection && this );=0A=
			first =3D fragment.firstChild;=0A=
=0A=
			if ( fragment.childNodes.length =3D=3D=3D 1 ) {=0A=
				fragment =3D first;=0A=
			}=0A=
=0A=
			if ( first ) {=0A=
				scripts =3D jQuery.map( getAll( fragment, "script" ), disableScript =
);=0A=
				hasScripts =3D scripts.length;=0A=
=0A=
				// Use the original fragment for the last item instead of the first =
because it can end up=0A=
				// being emptied incorrectly in certain situations (#8070).=0A=
				for ( ; i < l; i++ ) {=0A=
					node =3D fragment;=0A=
=0A=
					if ( i !=3D=3D iNoClone ) {=0A=
						node =3D jQuery.clone( node, true, true );=0A=
=0A=
						// Keep references to cloned scripts for later restoration=0A=
						if ( hasScripts ) {=0A=
							// Support: QtWebKit=0A=
							// jQuery.merge because core_push.apply(_, arraylike) throws=0A=
							jQuery.merge( scripts, getAll( node, "script" ) );=0A=
						}=0A=
					}=0A=
=0A=
					callback.call( this[ i ], node, i );=0A=
				}=0A=
=0A=
				if ( hasScripts ) {=0A=
					doc =3D scripts[ scripts.length - 1 ].ownerDocument;=0A=
=0A=
					// Reenable scripts=0A=
					jQuery.map( scripts, restoreScript );=0A=
=0A=
					// Evaluate executable scripts on first document insertion=0A=
					for ( i =3D 0; i < hasScripts; i++ ) {=0A=
						node =3D scripts[ i ];=0A=
						if ( rscriptType.test( node.type || "" ) &&=0A=
							!data_priv.access( node, "globalEval" ) && jQuery.contains( doc, =
node ) ) {=0A=
=0A=
							if ( node.src ) {=0A=
								// Hope ajax is available...=0A=
								jQuery._evalUrl( node.src );=0A=
							} else {=0A=
								jQuery.globalEval( node.textContent.replace( rcleanScript, "" ) =
);=0A=
							}=0A=
						}=0A=
					}=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		return this;=0A=
	}=0A=
});=0A=
=0A=
jQuery.each({=0A=
	appendTo: "append",=0A=
	prependTo: "prepend",=0A=
	insertBefore: "before",=0A=
	insertAfter: "after",=0A=
	replaceAll: "replaceWith"=0A=
}, function( name, original ) {=0A=
	jQuery.fn[ name ] =3D function( selector ) {=0A=
		var elems,=0A=
			ret =3D [],=0A=
			insert =3D jQuery( selector ),=0A=
			last =3D insert.length - 1,=0A=
			i =3D 0;=0A=
=0A=
		for ( ; i <=3D last; i++ ) {=0A=
			elems =3D i =3D=3D=3D last ? this : this.clone( true );=0A=
			jQuery( insert[ i ] )[ original ]( elems );=0A=
=0A=
			// Support: QtWebKit=0A=
			// .get() because core_push.apply(_, arraylike) throws=0A=
			core_push.apply( ret, elems.get() );=0A=
		}=0A=
=0A=
		return this.pushStack( ret );=0A=
	};=0A=
});=0A=
=0A=
jQuery.extend({=0A=
	clone: function( elem, dataAndEvents, deepDataAndEvents ) {=0A=
		var i, l, srcElements, destElements,=0A=
			clone =3D elem.cloneNode( true ),=0A=
			inPage =3D jQuery.contains( elem.ownerDocument, elem );=0A=
=0A=
		// Support: IE >=3D 9=0A=
		// Fix Cloning issues=0A=
		if ( !jQuery.support.noCloneChecked && ( elem.nodeType =3D=3D=3D 1 || =
elem.nodeType =3D=3D=3D 11 ) && !jQuery.isXMLDoc( elem ) ) {=0A=
=0A=
			// We eschew Sizzle here for performance reasons: =
http://jsperf.com/getall-vs-sizzle/2=0A=
			destElements =3D getAll( clone );=0A=
			srcElements =3D getAll( elem );=0A=
=0A=
			for ( i =3D 0, l =3D srcElements.length; i < l; i++ ) {=0A=
				fixInput( srcElements[ i ], destElements[ i ] );=0A=
			}=0A=
		}=0A=
=0A=
		// Copy the events from the original to the clone=0A=
		if ( dataAndEvents ) {=0A=
			if ( deepDataAndEvents ) {=0A=
				srcElements =3D srcElements || getAll( elem );=0A=
				destElements =3D destElements || getAll( clone );=0A=
=0A=
				for ( i =3D 0, l =3D srcElements.length; i < l; i++ ) {=0A=
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );=0A=
				}=0A=
			} else {=0A=
				cloneCopyEvent( elem, clone );=0A=
			}=0A=
		}=0A=
=0A=
		// Preserve script evaluation history=0A=
		destElements =3D getAll( clone, "script" );=0A=
		if ( destElements.length > 0 ) {=0A=
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );=0A=
		}=0A=
=0A=
		// Return the cloned set=0A=
		return clone;=0A=
	},=0A=
=0A=
	buildFragment: function( elems, context, scripts, selection ) {=0A=
		var elem, tmp, tag, wrap, contains, j,=0A=
			i =3D 0,=0A=
			l =3D elems.length,=0A=
			fragment =3D context.createDocumentFragment(),=0A=
			nodes =3D [];=0A=
=0A=
		for ( ; i < l; i++ ) {=0A=
			elem =3D elems[ i ];=0A=
=0A=
			if ( elem || elem =3D=3D=3D 0 ) {=0A=
=0A=
				// Add nodes directly=0A=
				if ( jQuery.type( elem ) =3D=3D=3D "object" ) {=0A=
					// Support: QtWebKit=0A=
					// jQuery.merge because core_push.apply(_, arraylike) throws=0A=
					jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );=0A=
=0A=
				// Convert non-html into a text node=0A=
				} else if ( !rhtml.test( elem ) ) {=0A=
					nodes.push( context.createTextNode( elem ) );=0A=
=0A=
				// Convert html into DOM nodes=0A=
				} else {=0A=
					tmp =3D tmp || fragment.appendChild( context.createElement("div") );=0A=
=0A=
					// Deserialize a standard representation=0A=
					tag =3D ( rtagName.exec( elem ) || ["", ""] )[ 1 ].toLowerCase();=0A=
					wrap =3D wrapMap[ tag ] || wrapMap._default;=0A=
					tmp.innerHTML =3D wrap[ 1 ] + elem.replace( rxhtmlTag, "<$1></$2>" =
) + wrap[ 2 ];=0A=
=0A=
					// Descend through wrappers to the right content=0A=
					j =3D wrap[ 0 ];=0A=
					while ( j-- ) {=0A=
						tmp =3D tmp.lastChild;=0A=
					}=0A=
=0A=
					// Support: QtWebKit=0A=
					// jQuery.merge because core_push.apply(_, arraylike) throws=0A=
					jQuery.merge( nodes, tmp.childNodes );=0A=
=0A=
					// Remember the top-level container=0A=
					tmp =3D fragment.firstChild;=0A=
=0A=
					// Fixes #12346=0A=
					// Support: Webkit, IE=0A=
					tmp.textContent =3D "";=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		// Remove wrapper from fragment=0A=
		fragment.textContent =3D "";=0A=
=0A=
		i =3D 0;=0A=
		while ( (elem =3D nodes[ i++ ]) ) {=0A=
=0A=
			// #4087 - If origin and destination elements are the same, and this =
is=0A=
			// that element, do not do anything=0A=
			if ( selection && jQuery.inArray( elem, selection ) !=3D=3D -1 ) {=0A=
				continue;=0A=
			}=0A=
=0A=
			contains =3D jQuery.contains( elem.ownerDocument, elem );=0A=
=0A=
			// Append to fragment=0A=
			tmp =3D getAll( fragment.appendChild( elem ), "script" );=0A=
=0A=
			// Preserve script evaluation history=0A=
			if ( contains ) {=0A=
				setGlobalEval( tmp );=0A=
			}=0A=
=0A=
			// Capture executables=0A=
			if ( scripts ) {=0A=
				j =3D 0;=0A=
				while ( (elem =3D tmp[ j++ ]) ) {=0A=
					if ( rscriptType.test( elem.type || "" ) ) {=0A=
						scripts.push( elem );=0A=
					}=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		return fragment;=0A=
	},=0A=
=0A=
	cleanData: function( elems ) {=0A=
		var data, elem, events, type, key, j,=0A=
			special =3D jQuery.event.special,=0A=
			i =3D 0;=0A=
=0A=
		for ( ; (elem =3D elems[ i ]) !=3D=3D undefined; i++ ) {=0A=
			if ( Data.accepts( elem ) ) {=0A=
				key =3D elem[ data_priv.expando ];=0A=
=0A=
				if ( key && (data =3D data_priv.cache[ key ]) ) {=0A=
					events =3D Object.keys( data.events || {} );=0A=
					if ( events.length ) {=0A=
						for ( j =3D 0; (type =3D events[j]) !=3D=3D undefined; j++ ) {=0A=
							if ( special[ type ] ) {=0A=
								jQuery.event.remove( elem, type );=0A=
=0A=
							// This is a shortcut to avoid jQuery.event.remove's overhead=0A=
							} else {=0A=
								jQuery.removeEvent( elem, type, data.handle );=0A=
							}=0A=
						}=0A=
					}=0A=
					if ( data_priv.cache[ key ] ) {=0A=
						// Discard any remaining `private` data=0A=
						delete data_priv.cache[ key ];=0A=
					}=0A=
				}=0A=
			}=0A=
			// Discard any remaining `user` data=0A=
			delete data_user.cache[ elem[ data_user.expando ] ];=0A=
		}=0A=
	},=0A=
=0A=
	_evalUrl: function( url ) {=0A=
		return jQuery.ajax({=0A=
			url: url,=0A=
			type: "GET",=0A=
			dataType: "script",=0A=
			async: false,=0A=
			global: false,=0A=
			"throws": true=0A=
		});=0A=
	}=0A=
});=0A=
=0A=
// Support: 1.x compatibility=0A=
// Manipulating tables requires a tbody=0A=
function manipulationTarget( elem, content ) {=0A=
	return jQuery.nodeName( elem, "table" ) &&=0A=
		jQuery.nodeName( content.nodeType =3D=3D=3D 1 ? content : =
content.firstChild, "tr" ) ?=0A=
=0A=
		elem.getElementsByTagName("tbody")[0] ||=0A=
			elem.appendChild( elem.ownerDocument.createElement("tbody") ) :=0A=
		elem;=0A=
}=0A=
=0A=
// Replace/restore the type attribute of script elements for safe DOM =
manipulation=0A=
function disableScript( elem ) {=0A=
	elem.type =3D (elem.getAttribute("type") !=3D=3D null) + "/" + =
elem.type;=0A=
	return elem;=0A=
}=0A=
function restoreScript( elem ) {=0A=
	var match =3D rscriptTypeMasked.exec( elem.type );=0A=
=0A=
	if ( match ) {=0A=
		elem.type =3D match[ 1 ];=0A=
	} else {=0A=
		elem.removeAttribute("type");=0A=
	}=0A=
=0A=
	return elem;=0A=
}=0A=
=0A=
// Mark scripts as having already been evaluated=0A=
function setGlobalEval( elems, refElements ) {=0A=
	var l =3D elems.length,=0A=
		i =3D 0;=0A=
=0A=
	for ( ; i < l; i++ ) {=0A=
		data_priv.set(=0A=
			elems[ i ], "globalEval", !refElements || data_priv.get( refElements[ =
i ], "globalEval" )=0A=
		);=0A=
	}=0A=
}=0A=
=0A=
function cloneCopyEvent( src, dest ) {=0A=
	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;=0A=
=0A=
	if ( dest.nodeType !=3D=3D 1 ) {=0A=
		return;=0A=
	}=0A=
=0A=
	// 1. Copy private data: events, handlers, etc.=0A=
	if ( data_priv.hasData( src ) ) {=0A=
		pdataOld =3D data_priv.access( src );=0A=
		pdataCur =3D data_priv.set( dest, pdataOld );=0A=
		events =3D pdataOld.events;=0A=
=0A=
		if ( events ) {=0A=
			delete pdataCur.handle;=0A=
			pdataCur.events =3D {};=0A=
=0A=
			for ( type in events ) {=0A=
				for ( i =3D 0, l =3D events[ type ].length; i < l; i++ ) {=0A=
					jQuery.event.add( dest, type, events[ type ][ i ] );=0A=
				}=0A=
			}=0A=
		}=0A=
	}=0A=
=0A=
	// 2. Copy user data=0A=
	if ( data_user.hasData( src ) ) {=0A=
		udataOld =3D data_user.access( src );=0A=
		udataCur =3D jQuery.extend( {}, udataOld );=0A=
=0A=
		data_user.set( dest, udataCur );=0A=
	}=0A=
}=0A=
=0A=
=0A=
function getAll( context, tag ) {=0A=
	var ret =3D context.getElementsByTagName ? =
context.getElementsByTagName( tag || "*" ) :=0A=
			context.querySelectorAll ? context.querySelectorAll( tag || "*" ) :=0A=
			[];=0A=
=0A=
	return tag =3D=3D=3D undefined || tag && jQuery.nodeName( context, tag =
) ?=0A=
		jQuery.merge( [ context ], ret ) :=0A=
		ret;=0A=
}=0A=
=0A=
// Support: IE >=3D 9=0A=
function fixInput( src, dest ) {=0A=
	var nodeName =3D dest.nodeName.toLowerCase();=0A=
=0A=
	// Fails to persist the checked state of a cloned checkbox or radio =
button.=0A=
	if ( nodeName =3D=3D=3D "input" && manipulation_rcheckableType.test( =
src.type ) ) {=0A=
		dest.checked =3D src.checked;=0A=
=0A=
	// Fails to return the selected option to the default selected state =
when cloning options=0A=
	} else if ( nodeName =3D=3D=3D "input" || nodeName =3D=3D=3D "textarea" =
) {=0A=
		dest.defaultValue =3D src.defaultValue;=0A=
	}=0A=
}=0A=
jQuery.fn.extend({=0A=
	wrapAll: function( html ) {=0A=
		var wrap;=0A=
=0A=
		if ( jQuery.isFunction( html ) ) {=0A=
			return this.each(function( i ) {=0A=
				jQuery( this ).wrapAll( html.call(this, i) );=0A=
			});=0A=
		}=0A=
=0A=
		if ( this[ 0 ] ) {=0A=
=0A=
			// The elements to wrap the target around=0A=
			wrap =3D jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true =
);=0A=
=0A=
			if ( this[ 0 ].parentNode ) {=0A=
				wrap.insertBefore( this[ 0 ] );=0A=
			}=0A=
=0A=
			wrap.map(function() {=0A=
				var elem =3D this;=0A=
=0A=
				while ( elem.firstElementChild ) {=0A=
					elem =3D elem.firstElementChild;=0A=
				}=0A=
=0A=
				return elem;=0A=
			}).append( this );=0A=
		}=0A=
=0A=
		return this;=0A=
	},=0A=
=0A=
	wrapInner: function( html ) {=0A=
		if ( jQuery.isFunction( html ) ) {=0A=
			return this.each(function( i ) {=0A=
				jQuery( this ).wrapInner( html.call(this, i) );=0A=
			});=0A=
		}=0A=
=0A=
		return this.each(function() {=0A=
			var self =3D jQuery( this ),=0A=
				contents =3D self.contents();=0A=
=0A=
			if ( contents.length ) {=0A=
				contents.wrapAll( html );=0A=
=0A=
			} else {=0A=
				self.append( html );=0A=
			}=0A=
		});=0A=
	},=0A=
=0A=
	wrap: function( html ) {=0A=
		var isFunction =3D jQuery.isFunction( html );=0A=
=0A=
		return this.each(function( i ) {=0A=
			jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );=0A=
		});=0A=
	},=0A=
=0A=
	unwrap: function() {=0A=
		return this.parent().each(function() {=0A=
			if ( !jQuery.nodeName( this, "body" ) ) {=0A=
				jQuery( this ).replaceWith( this.childNodes );=0A=
			}=0A=
		}).end();=0A=
	}=0A=
});=0A=
var curCSS, iframe,=0A=
	// swappable if display is none or starts with table except "table", =
"table-cell", or "table-caption"=0A=
	// see here for display values: =
https://developer.mozilla.org/en-US/docs/CSS/display=0A=
	rdisplayswap =3D /^(none|table(?!-c[ea]).+)/,=0A=
	rmargin =3D /^margin/,=0A=
	rnumsplit =3D new RegExp( "^(" + core_pnum + ")(.*)$", "i" ),=0A=
	rnumnonpx =3D new RegExp( "^(" + core_pnum + ")(?!px)[a-z%]+$", "i" ),=0A=
	rrelNum =3D new RegExp( "^([+-])=3D(" + core_pnum + ")", "i" ),=0A=
	elemdisplay =3D { BODY: "block" },=0A=
=0A=
	cssShow =3D { position: "absolute", visibility: "hidden", display: =
"block" },=0A=
	cssNormalTransform =3D {=0A=
		letterSpacing: 0,=0A=
		fontWeight: 400=0A=
	},=0A=
=0A=
	cssExpand =3D [ "Top", "Right", "Bottom", "Left" ],=0A=
	cssPrefixes =3D [ "Webkit", "O", "Moz", "ms" ];=0A=
=0A=
// return a css property mapped to a potentially vendor prefixed property=0A=
function vendorPropName( style, name ) {=0A=
=0A=
	// shortcut for names that are not vendor prefixed=0A=
	if ( name in style ) {=0A=
		return name;=0A=
	}=0A=
=0A=
	// check for vendor prefixed names=0A=
	var capName =3D name.charAt(0).toUpperCase() + name.slice(1),=0A=
		origName =3D name,=0A=
		i =3D cssPrefixes.length;=0A=
=0A=
	while ( i-- ) {=0A=
		name =3D cssPrefixes[ i ] + capName;=0A=
		if ( name in style ) {=0A=
			return name;=0A=
		}=0A=
	}=0A=
=0A=
	return origName;=0A=
}=0A=
=0A=
function isHidden( elem, el ) {=0A=
	// isHidden might be called from jQuery#filter function;=0A=
	// in that case, element will be second argument=0A=
	elem =3D el || elem;=0A=
	return jQuery.css( elem, "display" ) =3D=3D=3D "none" || =
!jQuery.contains( elem.ownerDocument, elem );=0A=
}=0A=
=0A=
// NOTE: we've included the "window" in window.getComputedStyle=0A=
// because jsdom on node.js will break without it.=0A=
function getStyles( elem ) {=0A=
	return window.getComputedStyle( elem, null );=0A=
}=0A=
=0A=
function showHide( elements, show ) {=0A=
	var display, elem, hidden,=0A=
		values =3D [],=0A=
		index =3D 0,=0A=
		length =3D elements.length;=0A=
=0A=
	for ( ; index < length; index++ ) {=0A=
		elem =3D elements[ index ];=0A=
		if ( !elem.style ) {=0A=
			continue;=0A=
		}=0A=
=0A=
		values[ index ] =3D data_priv.get( elem, "olddisplay" );=0A=
		display =3D elem.style.display;=0A=
		if ( show ) {=0A=
			// Reset the inline display of this element to learn if it is=0A=
			// being hidden by cascaded rules or not=0A=
			if ( !values[ index ] && display =3D=3D=3D "none" ) {=0A=
				elem.style.display =3D "";=0A=
			}=0A=
=0A=
			// Set elements which have been overridden with display: none=0A=
			// in a stylesheet to whatever the default browser style is=0A=
			// for such an element=0A=
			if ( elem.style.display =3D=3D=3D "" && isHidden( elem ) ) {=0A=
				values[ index ] =3D data_priv.access( elem, "olddisplay", =
css_defaultDisplay(elem.nodeName) );=0A=
			}=0A=
		} else {=0A=
=0A=
			if ( !values[ index ] ) {=0A=
				hidden =3D isHidden( elem );=0A=
=0A=
				if ( display && display !=3D=3D "none" || !hidden ) {=0A=
					data_priv.set( elem, "olddisplay", hidden ? display : =
jQuery.css(elem, "display") );=0A=
				}=0A=
			}=0A=
		}=0A=
	}=0A=
=0A=
	// Set the display of most of the elements in a second loop=0A=
	// to avoid the constant reflow=0A=
	for ( index =3D 0; index < length; index++ ) {=0A=
		elem =3D elements[ index ];=0A=
		if ( !elem.style ) {=0A=
			continue;=0A=
		}=0A=
		if ( !show || elem.style.display =3D=3D=3D "none" || =
elem.style.display =3D=3D=3D "" ) {=0A=
			elem.style.display =3D show ? values[ index ] || "" : "none";=0A=
		}=0A=
	}=0A=
=0A=
	return elements;=0A=
}=0A=
=0A=
jQuery.fn.extend({=0A=
	css: function( name, value ) {=0A=
		return jQuery.access( this, function( elem, name, value ) {=0A=
			var styles, len,=0A=
				map =3D {},=0A=
				i =3D 0;=0A=
=0A=
			if ( jQuery.isArray( name ) ) {=0A=
				styles =3D getStyles( elem );=0A=
				len =3D name.length;=0A=
=0A=
				for ( ; i < len; i++ ) {=0A=
					map[ name[ i ] ] =3D jQuery.css( elem, name[ i ], false, styles );=0A=
				}=0A=
=0A=
				return map;=0A=
			}=0A=
=0A=
			return value !=3D=3D undefined ?=0A=
				jQuery.style( elem, name, value ) :=0A=
				jQuery.css( elem, name );=0A=
		}, name, value, arguments.length > 1 );=0A=
	},=0A=
	show: function() {=0A=
		return showHide( this, true );=0A=
	},=0A=
	hide: function() {=0A=
		return showHide( this );=0A=
	},=0A=
	toggle: function( state ) {=0A=
		if ( typeof state =3D=3D=3D "boolean" ) {=0A=
			return state ? this.show() : this.hide();=0A=
		}=0A=
=0A=
		return this.each(function() {=0A=
			if ( isHidden( this ) ) {=0A=
				jQuery( this ).show();=0A=
			} else {=0A=
				jQuery( this ).hide();=0A=
			}=0A=
		});=0A=
	}=0A=
});=0A=
=0A=
jQuery.extend({=0A=
	// Add in style property hooks for overriding the default=0A=
	// behavior of getting and setting a style property=0A=
	cssHooks: {=0A=
		opacity: {=0A=
			get: function( elem, computed ) {=0A=
				if ( computed ) {=0A=
					// We should always get a number back from opacity=0A=
					var ret =3D curCSS( elem, "opacity" );=0A=
					return ret =3D=3D=3D "" ? "1" : ret;=0A=
				}=0A=
			}=0A=
		}=0A=
	},=0A=
=0A=
	// Don't automatically add "px" to these possibly-unitless properties=0A=
	cssNumber: {=0A=
		"columnCount": true,=0A=
		"fillOpacity": true,=0A=
		"fontWeight": true,=0A=
		"lineHeight": true,=0A=
		"opacity": true,=0A=
		"order": true,=0A=
		"orphans": true,=0A=
		"widows": true,=0A=
		"zIndex": true,=0A=
		"zoom": true=0A=
	},=0A=
=0A=
	// Add in properties whose names you wish to fix before=0A=
	// setting or getting the value=0A=
	cssProps: {=0A=
		// normalize float css property=0A=
		"float": "cssFloat"=0A=
	},=0A=
=0A=
	// Get and set the style property on a DOM Node=0A=
	style: function( elem, name, value, extra ) {=0A=
		// Don't set styles on text and comment nodes=0A=
		if ( !elem || elem.nodeType =3D=3D=3D 3 || elem.nodeType =3D=3D=3D 8 =
|| !elem.style ) {=0A=
			return;=0A=
		}=0A=
=0A=
		// Make sure that we're working with the right name=0A=
		var ret, type, hooks,=0A=
			origName =3D jQuery.camelCase( name ),=0A=
			style =3D elem.style;=0A=
=0A=
		name =3D jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] =
=3D vendorPropName( style, origName ) );=0A=
=0A=
		// gets hook for the prefixed version=0A=
		// followed by the unprefixed version=0A=
		hooks =3D jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];=0A=
=0A=
		// Check if we're setting a value=0A=
		if ( value !=3D=3D undefined ) {=0A=
			type =3D typeof value;=0A=
=0A=
			// convert relative number strings (+=3D or -=3D) to relative =
numbers. #7345=0A=
			if ( type =3D=3D=3D "string" && (ret =3D rrelNum.exec( value )) ) {=0A=
				value =3D ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, =
name ) );=0A=
				// Fixes bug #9237=0A=
				type =3D "number";=0A=
			}=0A=
=0A=
			// Make sure that NaN and null values aren't set. See: #7116=0A=
			if ( value =3D=3D null || type =3D=3D=3D "number" && isNaN( value ) ) =
{=0A=
				return;=0A=
			}=0A=
=0A=
			// If a number was passed in, add 'px' to the (except for certain CSS =
properties)=0A=
			if ( type =3D=3D=3D "number" && !jQuery.cssNumber[ origName ] ) {=0A=
				value +=3D "px";=0A=
			}=0A=
=0A=
			// Fixes #8908, it can be done more correctly by specifying setters =
in cssHooks,=0A=
			// but it would mean to define eight (for every problematic property) =
identical functions=0A=
			if ( !jQuery.support.clearCloneStyle && value =3D=3D=3D "" && =
name.indexOf("background") =3D=3D=3D 0 ) {=0A=
				style[ name ] =3D "inherit";=0A=
			}=0A=
=0A=
			// If a hook was provided, use that value, otherwise just set the =
specified value=0A=
			if ( !hooks || !("set" in hooks) || (value =3D hooks.set( elem, =
value, extra )) !=3D=3D undefined ) {=0A=
				style[ name ] =3D value;=0A=
			}=0A=
=0A=
		} else {=0A=
			// If a hook was provided get the non-computed value from there=0A=
			if ( hooks && "get" in hooks && (ret =3D hooks.get( elem, false, =
extra )) !=3D=3D undefined ) {=0A=
				return ret;=0A=
			}=0A=
=0A=
			// Otherwise just get the value from the style object=0A=
			return style[ name ];=0A=
		}=0A=
	},=0A=
=0A=
	css: function( elem, name, extra, styles ) {=0A=
		var val, num, hooks,=0A=
			origName =3D jQuery.camelCase( name );=0A=
=0A=
		// Make sure that we're working with the right name=0A=
		name =3D jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] =
=3D vendorPropName( elem.style, origName ) );=0A=
=0A=
		// gets hook for the prefixed version=0A=
		// followed by the unprefixed version=0A=
		hooks =3D jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];=0A=
=0A=
		// If a hook was provided get the computed value from there=0A=
		if ( hooks && "get" in hooks ) {=0A=
			val =3D hooks.get( elem, true, extra );=0A=
		}=0A=
=0A=
		// Otherwise, if a way to get the computed value exists, use that=0A=
		if ( val =3D=3D=3D undefined ) {=0A=
			val =3D curCSS( elem, name, styles );=0A=
		}=0A=
=0A=
		//convert "normal" to computed value=0A=
		if ( val =3D=3D=3D "normal" && name in cssNormalTransform ) {=0A=
			val =3D cssNormalTransform[ name ];=0A=
		}=0A=
=0A=
		// Return, converting to number if forced or a qualifier was provided =
and val looks numeric=0A=
		if ( extra =3D=3D=3D "" || extra ) {=0A=
			num =3D parseFloat( val );=0A=
			return extra =3D=3D=3D true || jQuery.isNumeric( num ) ? num || 0 : =
val;=0A=
		}=0A=
		return val;=0A=
	}=0A=
});=0A=
=0A=
curCSS =3D function( elem, name, _computed ) {=0A=
	var width, minWidth, maxWidth,=0A=
		computed =3D _computed || getStyles( elem ),=0A=
=0A=
		// Support: IE9=0A=
		// getPropertyValue is only needed for .css('filter') in IE9, see =
#12537=0A=
		ret =3D computed ? computed.getPropertyValue( name ) || computed[ name =
] : undefined,=0A=
		style =3D elem.style;=0A=
=0A=
	if ( computed ) {=0A=
=0A=
		if ( ret =3D=3D=3D "" && !jQuery.contains( elem.ownerDocument, elem ) =
) {=0A=
			ret =3D jQuery.style( elem, name );=0A=
		}=0A=
=0A=
		// Support: Safari 5.1=0A=
		// A tribute to the "awesome hack by Dean Edwards"=0A=
		// Safari 5.1.7 (at least) returns percentage for a larger set of =
values, but width seems to be reliably pixels=0A=
		// this is against the CSSOM draft spec: =
http://dev.w3.org/csswg/cssom/#resolved-values=0A=
		if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {=0A=
=0A=
			// Remember the original values=0A=
			width =3D style.width;=0A=
			minWidth =3D style.minWidth;=0A=
			maxWidth =3D style.maxWidth;=0A=
=0A=
			// Put in the new values to get a computed value out=0A=
			style.minWidth =3D style.maxWidth =3D style.width =3D ret;=0A=
			ret =3D computed.width;=0A=
=0A=
			// Revert the changed values=0A=
			style.width =3D width;=0A=
			style.minWidth =3D minWidth;=0A=
			style.maxWidth =3D maxWidth;=0A=
		}=0A=
	}=0A=
=0A=
	return ret;=0A=
};=0A=
=0A=
=0A=
function setPositiveNumber( elem, value, subtract ) {=0A=
	var matches =3D rnumsplit.exec( value );=0A=
	return matches ?=0A=
		// Guard against undefined "subtract", e.g., when used as in cssHooks=0A=
		Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || =
"px" ) :=0A=
		value;=0A=
}=0A=
=0A=
function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {=0A=
	var i =3D extra =3D=3D=3D ( isBorderBox ? "border" : "content" ) ?=0A=
		// If we already have the right measurement, avoid augmentation=0A=
		4 :=0A=
		// Otherwise initialize for horizontal or vertical properties=0A=
		name =3D=3D=3D "width" ? 1 : 0,=0A=
=0A=
		val =3D 0;=0A=
=0A=
	for ( ; i < 4; i +=3D 2 ) {=0A=
		// both box models exclude margin, so add it if we want it=0A=
		if ( extra =3D=3D=3D "margin" ) {=0A=
			val +=3D jQuery.css( elem, extra + cssExpand[ i ], true, styles );=0A=
		}=0A=
=0A=
		if ( isBorderBox ) {=0A=
			// border-box includes padding, so remove it if we want content=0A=
			if ( extra =3D=3D=3D "content" ) {=0A=
				val -=3D jQuery.css( elem, "padding" + cssExpand[ i ], true, styles =
);=0A=
			}=0A=
=0A=
			// at this point, extra isn't border nor margin, so remove border=0A=
			if ( extra !=3D=3D "margin" ) {=0A=
				val -=3D jQuery.css( elem, "border" + cssExpand[ i ] + "Width", =
true, styles );=0A=
			}=0A=
		} else {=0A=
			// at this point, extra isn't content, so add padding=0A=
			val +=3D jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );=0A=
=0A=
			// at this point, extra isn't content nor padding, so add border=0A=
			if ( extra !=3D=3D "padding" ) {=0A=
				val +=3D jQuery.css( elem, "border" + cssExpand[ i ] + "Width", =
true, styles );=0A=
			}=0A=
		}=0A=
	}=0A=
=0A=
	return val;=0A=
}=0A=
=0A=
function getWidthOrHeight( elem, name, extra ) {=0A=
=0A=
	// Start with offset property, which is equivalent to the border-box =
value=0A=
	var valueIsBorderBox =3D true,=0A=
		val =3D name =3D=3D=3D "width" ? elem.offsetWidth : elem.offsetHeight,=0A=
		styles =3D getStyles( elem ),=0A=
		isBorderBox =3D jQuery.support.boxSizing && jQuery.css( elem, =
"boxSizing", false, styles ) =3D=3D=3D "border-box";=0A=
=0A=
	// some non-html elements return undefined for offsetWidth, so check =
for null/undefined=0A=
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=3D649285=0A=
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=3D491668=0A=
	if ( val <=3D 0 || val =3D=3D null ) {=0A=
		// Fall back to computed then uncomputed css if necessary=0A=
		val =3D curCSS( elem, name, styles );=0A=
		if ( val < 0 || val =3D=3D null ) {=0A=
			val =3D elem.style[ name ];=0A=
		}=0A=
=0A=
		// Computed unit is not pixels. Stop here and return.=0A=
		if ( rnumnonpx.test(val) ) {=0A=
			return val;=0A=
		}=0A=
=0A=
		// we need the check for style in case a browser which returns =
unreliable values=0A=
		// for getComputedStyle silently falls back to the reliable elem.style=0A=
		valueIsBorderBox =3D isBorderBox && ( jQuery.support.boxSizingReliable =
|| val =3D=3D=3D elem.style[ name ] );=0A=
=0A=
		// Normalize "", auto, and prepare for extra=0A=
		val =3D parseFloat( val ) || 0;=0A=
	}=0A=
=0A=
	// use the active box-sizing model to add/subtract irrelevant styles=0A=
	return ( val +=0A=
		augmentWidthOrHeight(=0A=
			elem,=0A=
			name,=0A=
			extra || ( isBorderBox ? "border" : "content" ),=0A=
			valueIsBorderBox,=0A=
			styles=0A=
		)=0A=
	) + "px";=0A=
}=0A=
=0A=
// Try to determine the default display value of an element=0A=
function css_defaultDisplay( nodeName ) {=0A=
	var doc =3D document,=0A=
		display =3D elemdisplay[ nodeName ];=0A=
=0A=
	if ( !display ) {=0A=
		display =3D actualDisplay( nodeName, doc );=0A=
=0A=
		// If the simple way fails, read from inside an iframe=0A=
		if ( display =3D=3D=3D "none" || !display ) {=0A=
			// Use the already-created iframe if possible=0A=
			iframe =3D ( iframe ||=0A=
				jQuery("<iframe frameborder=3D'0' width=3D'0' height=3D'0'/>")=0A=
				.css( "cssText", "display:block !important" )=0A=
			).appendTo( doc.documentElement );=0A=
=0A=
			// Always write a new HTML skeleton so Webkit and Firefox don't choke =
on reuse=0A=
			doc =3D ( iframe[0].contentWindow || iframe[0].contentDocument =
).document;=0A=
			doc.write("<!doctype html><html><body>");=0A=
			doc.close();=0A=
=0A=
			display =3D actualDisplay( nodeName, doc );=0A=
			iframe.detach();=0A=
		}=0A=
=0A=
		// Store the correct default display=0A=
		elemdisplay[ nodeName ] =3D display;=0A=
	}=0A=
=0A=
	return display;=0A=
}=0A=
=0A=
// Called ONLY from within css_defaultDisplay=0A=
function actualDisplay( name, doc ) {=0A=
	var elem =3D jQuery( doc.createElement( name ) ).appendTo( doc.body ),=0A=
		display =3D jQuery.css( elem[0], "display" );=0A=
	elem.remove();=0A=
	return display;=0A=
}=0A=
=0A=
jQuery.each([ "height", "width" ], function( i, name ) {=0A=
	jQuery.cssHooks[ name ] =3D {=0A=
		get: function( elem, computed, extra ) {=0A=
			if ( computed ) {=0A=
				// certain elements can have dimension info if we invisibly show them=0A=
				// however, it must have a current display style that would benefit =
from this=0A=
				return elem.offsetWidth =3D=3D=3D 0 && rdisplayswap.test( =
jQuery.css( elem, "display" ) ) ?=0A=
					jQuery.swap( elem, cssShow, function() {=0A=
						return getWidthOrHeight( elem, name, extra );=0A=
					}) :=0A=
					getWidthOrHeight( elem, name, extra );=0A=
			}=0A=
		},=0A=
=0A=
		set: function( elem, value, extra ) {=0A=
			var styles =3D extra && getStyles( elem );=0A=
			return setPositiveNumber( elem, value, extra ?=0A=
				augmentWidthOrHeight(=0A=
					elem,=0A=
					name,=0A=
					extra,=0A=
					jQuery.support.boxSizing && jQuery.css( elem, "boxSizing", false, =
styles ) =3D=3D=3D "border-box",=0A=
					styles=0A=
				) : 0=0A=
			);=0A=
		}=0A=
	};=0A=
});=0A=
=0A=
// These hooks cannot be added until DOM ready because the support test=0A=
// for it is not run until after DOM ready=0A=
jQuery(function() {=0A=
	// Support: Android 2.3=0A=
	if ( !jQuery.support.reliableMarginRight ) {=0A=
		jQuery.cssHooks.marginRight =3D {=0A=
			get: function( elem, computed ) {=0A=
				if ( computed ) {=0A=
					// Support: Android 2.3=0A=
					// WebKit Bug 13343 - getComputedStyle returns wrong value for =
margin-right=0A=
					// Work around by temporarily setting element display to =
inline-block=0A=
					return jQuery.swap( elem, { "display": "inline-block" },=0A=
						curCSS, [ elem, "marginRight" ] );=0A=
				}=0A=
			}=0A=
		};=0A=
	}=0A=
=0A=
	// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=3D29084=0A=
	// getComputedStyle returns percent when specified for =
top/left/bottom/right=0A=
	// rather than make the css module depend on the offset module, we just =
check for it here=0A=
	if ( !jQuery.support.pixelPosition && jQuery.fn.position ) {=0A=
		jQuery.each( [ "top", "left" ], function( i, prop ) {=0A=
			jQuery.cssHooks[ prop ] =3D {=0A=
				get: function( elem, computed ) {=0A=
					if ( computed ) {=0A=
						computed =3D curCSS( elem, prop );=0A=
						// if curCSS returns percentage, fallback to offset=0A=
						return rnumnonpx.test( computed ) ?=0A=
							jQuery( elem ).position()[ prop ] + "px" :=0A=
							computed;=0A=
					}=0A=
				}=0A=
			};=0A=
		});=0A=
	}=0A=
=0A=
});=0A=
=0A=
if ( jQuery.expr && jQuery.expr.filters ) {=0A=
	jQuery.expr.filters.hidden =3D function( elem ) {=0A=
		// Support: Opera <=3D 12.12=0A=
		// Opera reports offsetWidths and offsetHeights less than zero on some =
elements=0A=
		return elem.offsetWidth <=3D 0 && elem.offsetHeight <=3D 0;=0A=
	};=0A=
=0A=
	jQuery.expr.filters.visible =3D function( elem ) {=0A=
		return !jQuery.expr.filters.hidden( elem );=0A=
	};=0A=
}=0A=
=0A=
// These hooks are used by animate to expand properties=0A=
jQuery.each({=0A=
	margin: "",=0A=
	padding: "",=0A=
	border: "Width"=0A=
}, function( prefix, suffix ) {=0A=
	jQuery.cssHooks[ prefix + suffix ] =3D {=0A=
		expand: function( value ) {=0A=
			var i =3D 0,=0A=
				expanded =3D {},=0A=
=0A=
				// assumes a single number if not a string=0A=
				parts =3D typeof value =3D=3D=3D "string" ? value.split(" ") : [ =
value ];=0A=
=0A=
			for ( ; i < 4; i++ ) {=0A=
				expanded[ prefix + cssExpand[ i ] + suffix ] =3D=0A=
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];=0A=
			}=0A=
=0A=
			return expanded;=0A=
		}=0A=
	};=0A=
=0A=
	if ( !rmargin.test( prefix ) ) {=0A=
		jQuery.cssHooks[ prefix + suffix ].set =3D setPositiveNumber;=0A=
	}=0A=
});=0A=
var r20 =3D /%20/g,=0A=
	rbracket =3D /\[\]$/,=0A=
	rCRLF =3D /\r?\n/g,=0A=
	rsubmitterTypes =3D /^(?:submit|button|image|reset|file)$/i,=0A=
	rsubmittable =3D /^(?:input|select|textarea|keygen)/i;=0A=
=0A=
jQuery.fn.extend({=0A=
	serialize: function() {=0A=
		return jQuery.param( this.serializeArray() );=0A=
	},=0A=
	serializeArray: function() {=0A=
		return this.map(function(){=0A=
			// Can add propHook for "elements" to filter or add form elements=0A=
			var elements =3D jQuery.prop( this, "elements" );=0A=
			return elements ? jQuery.makeArray( elements ) : this;=0A=
		})=0A=
		.filter(function(){=0A=
			var type =3D this.type;=0A=
			// Use .is(":disabled") so that fieldset[disabled] works=0A=
			return this.name && !jQuery( this ).is( ":disabled" ) &&=0A=
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) =
&&=0A=
				( this.checked || !manipulation_rcheckableType.test( type ) );=0A=
		})=0A=
		.map(function( i, elem ){=0A=
			var val =3D jQuery( this ).val();=0A=
=0A=
			return val =3D=3D null ?=0A=
				null :=0A=
				jQuery.isArray( val ) ?=0A=
					jQuery.map( val, function( val ){=0A=
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };=0A=
					}) :=0A=
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };=0A=
		}).get();=0A=
	}=0A=
});=0A=
=0A=
//Serialize an array of form elements or a set of=0A=
//key/values into a query string=0A=
jQuery.param =3D function( a, traditional ) {=0A=
	var prefix,=0A=
		s =3D [],=0A=
		add =3D function( key, value ) {=0A=
			// If value is a function, invoke it and return its value=0A=
			value =3D jQuery.isFunction( value ) ? value() : ( value =3D=3D null =
? "" : value );=0A=
			s[ s.length ] =3D encodeURIComponent( key ) + "=3D" + =
encodeURIComponent( value );=0A=
		};=0A=
=0A=
	// Set traditional to true for jQuery <=3D 1.3.2 behavior.=0A=
	if ( traditional =3D=3D=3D undefined ) {=0A=
		traditional =3D jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;=0A=
	}=0A=
=0A=
	// If an array was passed in, assume that it is an array of form =
elements.=0A=
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) =
) {=0A=
		// Serialize the form elements=0A=
		jQuery.each( a, function() {=0A=
			add( this.name, this.value );=0A=
		});=0A=
=0A=
	} else {=0A=
		// If traditional, encode the "old" way (the way 1.3.2 or older=0A=
		// did it), otherwise encode params recursively.=0A=
		for ( prefix in a ) {=0A=
			buildParams( prefix, a[ prefix ], traditional, add );=0A=
		}=0A=
	}=0A=
=0A=
	// Return the resulting serialization=0A=
	return s.join( "&" ).replace( r20, "+" );=0A=
};=0A=
=0A=
function buildParams( prefix, obj, traditional, add ) {=0A=
	var name;=0A=
=0A=
	if ( jQuery.isArray( obj ) ) {=0A=
		// Serialize array item.=0A=
		jQuery.each( obj, function( i, v ) {=0A=
			if ( traditional || rbracket.test( prefix ) ) {=0A=
				// Treat each array item as a scalar.=0A=
				add( prefix, v );=0A=
=0A=
			} else {=0A=
				// Item is non-scalar (array or object), encode its numeric index.=0A=
				buildParams( prefix + "[" + ( typeof v =3D=3D=3D "object" ? i : "" ) =
+ "]", v, traditional, add );=0A=
			}=0A=
		});=0A=
=0A=
	} else if ( !traditional && jQuery.type( obj ) =3D=3D=3D "object" ) {=0A=
		// Serialize object item.=0A=
		for ( name in obj ) {=0A=
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add =
);=0A=
		}=0A=
=0A=
	} else {=0A=
		// Serialize scalar item.=0A=
		add( prefix, obj );=0A=
	}=0A=
}=0A=
jQuery.each( ("blur focus focusin focusout load resize scroll unload =
click dblclick " +=0A=
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " =
+=0A=
	"change select submit keydown keypress keyup error =
contextmenu").split(" "), function( i, name ) {=0A=
=0A=
	// Handle event binding=0A=
	jQuery.fn[ name ] =3D function( data, fn ) {=0A=
		return arguments.length > 0 ?=0A=
			this.on( name, null, data, fn ) :=0A=
			this.trigger( name );=0A=
	};=0A=
});=0A=
=0A=
jQuery.fn.extend({=0A=
	hover: function( fnOver, fnOut ) {=0A=
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );=0A=
	},=0A=
=0A=
	bind: function( types, data, fn ) {=0A=
		return this.on( types, null, data, fn );=0A=
	},=0A=
	unbind: function( types, fn ) {=0A=
		return this.off( types, null, fn );=0A=
	},=0A=
=0A=
	delegate: function( selector, types, data, fn ) {=0A=
		return this.on( types, selector, data, fn );=0A=
	},=0A=
	undelegate: function( selector, types, fn ) {=0A=
		// ( namespace ) or ( selector, types [, fn] )=0A=
		return arguments.length =3D=3D=3D 1 ? this.off( selector, "**" ) : =
this.off( types, selector || "**", fn );=0A=
	}=0A=
});=0A=
var=0A=
	// Document location=0A=
	ajaxLocParts,=0A=
	ajaxLocation,=0A=
=0A=
	ajax_nonce =3D jQuery.now(),=0A=
=0A=
	ajax_rquery =3D /\?/,=0A=
	rhash =3D /#.*$/,=0A=
	rts =3D /([?&])_=3D[^&]*/,=0A=
	rheaders =3D /^(.*?):[ \t]*([^\r\n]*)$/mg,=0A=
	// #7653, #8125, #8152: local protocol detection=0A=
	rlocalProtocol =3D =
/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,=0A=
	rnoContent =3D /^(?:GET|HEAD)$/,=0A=
	rprotocol =3D /^\/\//,=0A=
	rurl =3D /^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,=0A=
=0A=
	// Keep a copy of the old load method=0A=
	_load =3D jQuery.fn.load,=0A=
=0A=
	/* Prefilters=0A=
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js =
for an example)=0A=
	 * 2) These are called:=0A=
	 *    - BEFORE asking for a transport=0A=
	 *    - AFTER param serialization (s.data is a string if s.processData =
is true)=0A=
	 * 3) key is the dataType=0A=
	 * 4) the catchall symbol "*" can be used=0A=
	 * 5) execution will start with transport dataType and THEN continue =
down to "*" if needed=0A=
	 */=0A=
	prefilters =3D {},=0A=
=0A=
	/* Transports bindings=0A=
	 * 1) key is the dataType=0A=
	 * 2) the catchall symbol "*" can be used=0A=
	 * 3) selection will start with transport dataType and THEN go to "*" =
if needed=0A=
	 */=0A=
	transports =3D {},=0A=
=0A=
	// Avoid comment-prolog char sequence (#10098); must appease lint and =
evade compression=0A=
	allTypes =3D "*/".concat("*");=0A=
=0A=
// #8138, IE may throw an exception when accessing=0A=
// a field from window.location if document.domain has been set=0A=
try {=0A=
	ajaxLocation =3D location.href;=0A=
} catch( e ) {=0A=
	// Use the href attribute of an A element=0A=
	// since IE will modify it given document.location=0A=
	ajaxLocation =3D document.createElement( "a" );=0A=
	ajaxLocation.href =3D "";=0A=
	ajaxLocation =3D ajaxLocation.href;=0A=
}=0A=
=0A=
// Segment location into parts=0A=
ajaxLocParts =3D rurl.exec( ajaxLocation.toLowerCase() ) || [];=0A=
=0A=
// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport=0A=
function addToPrefiltersOrTransports( structure ) {=0A=
=0A=
	// dataTypeExpression is optional and defaults to "*"=0A=
	return function( dataTypeExpression, func ) {=0A=
=0A=
		if ( typeof dataTypeExpression !=3D=3D "string" ) {=0A=
			func =3D dataTypeExpression;=0A=
			dataTypeExpression =3D "*";=0A=
		}=0A=
=0A=
		var dataType,=0A=
			i =3D 0,=0A=
			dataTypes =3D dataTypeExpression.toLowerCase().match( core_rnotwhite =
) || [];=0A=
=0A=
		if ( jQuery.isFunction( func ) ) {=0A=
			// For each dataType in the dataTypeExpression=0A=
			while ( (dataType =3D dataTypes[i++]) ) {=0A=
				// Prepend if requested=0A=
				if ( dataType[0] =3D=3D=3D "+" ) {=0A=
					dataType =3D dataType.slice( 1 ) || "*";=0A=
					(structure[ dataType ] =3D structure[ dataType ] || []).unshift( =
func );=0A=
=0A=
				// Otherwise append=0A=
				} else {=0A=
					(structure[ dataType ] =3D structure[ dataType ] || []).push( func =
);=0A=
				}=0A=
			}=0A=
		}=0A=
	};=0A=
}=0A=
=0A=
// Base inspection function for prefilters and transports=0A=
function inspectPrefiltersOrTransports( structure, options, =
originalOptions, jqXHR ) {=0A=
=0A=
	var inspected =3D {},=0A=
		seekingTransport =3D ( structure =3D=3D=3D transports );=0A=
=0A=
	function inspect( dataType ) {=0A=
		var selected;=0A=
		inspected[ dataType ] =3D true;=0A=
		jQuery.each( structure[ dataType ] || [], function( _, =
prefilterOrFactory ) {=0A=
			var dataTypeOrTransport =3D prefilterOrFactory( options, =
originalOptions, jqXHR );=0A=
			if( typeof dataTypeOrTransport =3D=3D=3D "string" && =
!seekingTransport && !inspected[ dataTypeOrTransport ] ) {=0A=
				options.dataTypes.unshift( dataTypeOrTransport );=0A=
				inspect( dataTypeOrTransport );=0A=
				return false;=0A=
			} else if ( seekingTransport ) {=0A=
				return !( selected =3D dataTypeOrTransport );=0A=
			}=0A=
		});=0A=
		return selected;=0A=
	}=0A=
=0A=
	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && =
inspect( "*" );=0A=
}=0A=
=0A=
// A special extend for ajax options=0A=
// that takes "flat" options (not to be deep extended)=0A=
// Fixes #9887=0A=
function ajaxExtend( target, src ) {=0A=
	var key, deep,=0A=
		flatOptions =3D jQuery.ajaxSettings.flatOptions || {};=0A=
=0A=
	for ( key in src ) {=0A=
		if ( src[ key ] !=3D=3D undefined ) {=0A=
			( flatOptions[ key ] ? target : ( deep || (deep =3D {}) ) )[ key ] =
=3D src[ key ];=0A=
		}=0A=
	}=0A=
	if ( deep ) {=0A=
		jQuery.extend( true, target, deep );=0A=
	}=0A=
=0A=
	return target;=0A=
}=0A=
=0A=
jQuery.fn.load =3D function( url, params, callback ) {=0A=
	if ( typeof url !=3D=3D "string" && _load ) {=0A=
		return _load.apply( this, arguments );=0A=
	}=0A=
=0A=
	var selector, type, response,=0A=
		self =3D this,=0A=
		off =3D url.indexOf(" ");=0A=
=0A=
	if ( off >=3D 0 ) {=0A=
		selector =3D url.slice( off );=0A=
		url =3D url.slice( 0, off );=0A=
	}=0A=
=0A=
	// If it's a function=0A=
	if ( jQuery.isFunction( params ) ) {=0A=
=0A=
		// We assume that it's the callback=0A=
		callback =3D params;=0A=
		params =3D undefined;=0A=
=0A=
	// Otherwise, build a param string=0A=
	} else if ( params && typeof params =3D=3D=3D "object" ) {=0A=
		type =3D "POST";=0A=
	}=0A=
=0A=
	// If we have elements to modify, make the request=0A=
	if ( self.length > 0 ) {=0A=
		jQuery.ajax({=0A=
			url: url,=0A=
=0A=
			// if "type" variable is undefined, then "GET" method will be used=0A=
			type: type,=0A=
			dataType: "html",=0A=
			data: params=0A=
		}).done(function( responseText ) {=0A=
=0A=
			// Save response for use in complete callback=0A=
			response =3D arguments;=0A=
=0A=
			self.html( selector ?=0A=
=0A=
				// If a selector was specified, locate the right elements in a dummy =
div=0A=
				// Exclude scripts to avoid IE 'Permission Denied' errors=0A=
				jQuery("<div>").append( jQuery.parseHTML( responseText ) ).find( =
selector ) :=0A=
=0A=
				// Otherwise use the full result=0A=
				responseText );=0A=
=0A=
		}).complete( callback && function( jqXHR, status ) {=0A=
			self.each( callback, response || [ jqXHR.responseText, status, jqXHR =
] );=0A=
		});=0A=
	}=0A=
=0A=
	return this;=0A=
};=0A=
=0A=
// Attach a bunch of functions for handling common AJAX events=0A=
jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", =
"ajaxSuccess", "ajaxSend" ], function( i, type ){=0A=
	jQuery.fn[ type ] =3D function( fn ){=0A=
		return this.on( type, fn );=0A=
	};=0A=
});=0A=
=0A=
jQuery.extend({=0A=
=0A=
	// Counter for holding the number of active queries=0A=
	active: 0,=0A=
=0A=
	// Last-Modified header cache for next request=0A=
	lastModified: {},=0A=
	etag: {},=0A=
=0A=
	ajaxSettings: {=0A=
		url: ajaxLocation,=0A=
		type: "GET",=0A=
		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),=0A=
		global: true,=0A=
		processData: true,=0A=
		async: true,=0A=
		contentType: "application/x-www-form-urlencoded; charset=3DUTF-8",=0A=
		/*=0A=
		timeout: 0,=0A=
		data: null,=0A=
		dataType: null,=0A=
		username: null,=0A=
		password: null,=0A=
		cache: null,=0A=
		throws: false,=0A=
		traditional: false,=0A=
		headers: {},=0A=
		*/=0A=
=0A=
		accepts: {=0A=
			"*": allTypes,=0A=
			text: "text/plain",=0A=
			html: "text/html",=0A=
			xml: "application/xml, text/xml",=0A=
			json: "application/json, text/javascript"=0A=
		},=0A=
=0A=
		contents: {=0A=
			xml: /xml/,=0A=
			html: /html/,=0A=
			json: /json/=0A=
		},=0A=
=0A=
		responseFields: {=0A=
			xml: "responseXML",=0A=
			text: "responseText",=0A=
			json: "responseJSON"=0A=
		},=0A=
=0A=
		// Data converters=0A=
		// Keys separate source (or catchall "*") and destination types with a =
single space=0A=
		converters: {=0A=
=0A=
			// Convert anything to text=0A=
			"* text": String,=0A=
=0A=
			// Text to html (true =3D no transformation)=0A=
			"text html": true,=0A=
=0A=
			// Evaluate text as a json expression=0A=
			"text json": jQuery.parseJSON,=0A=
=0A=
			// Parse text as xml=0A=
			"text xml": jQuery.parseXML=0A=
		},=0A=
=0A=
		// For options that shouldn't be deep extended:=0A=
		// you can add your own custom options here if=0A=
		// and when you create one that shouldn't be=0A=
		// deep extended (see ajaxExtend)=0A=
		flatOptions: {=0A=
			url: true,=0A=
			context: true=0A=
		}=0A=
	},=0A=
=0A=
	// Creates a full fledged settings object into target=0A=
	// with both ajaxSettings and settings fields.=0A=
	// If target is omitted, writes into ajaxSettings.=0A=
	ajaxSetup: function( target, settings ) {=0A=
		return settings ?=0A=
=0A=
			// Building a settings object=0A=
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :=0A=
=0A=
			// Extending ajaxSettings=0A=
			ajaxExtend( jQuery.ajaxSettings, target );=0A=
	},=0A=
=0A=
	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),=0A=
	ajaxTransport: addToPrefiltersOrTransports( transports ),=0A=
=0A=
	// Main method=0A=
	ajax: function( url, options ) {=0A=
=0A=
		// If url is an object, simulate pre-1.5 signature=0A=
		if ( typeof url =3D=3D=3D "object" ) {=0A=
			options =3D url;=0A=
			url =3D undefined;=0A=
		}=0A=
=0A=
		// Force options to be an object=0A=
		options =3D options || {};=0A=
=0A=
		var transport,=0A=
			// URL without anti-cache param=0A=
			cacheURL,=0A=
			// Response headers=0A=
			responseHeadersString,=0A=
			responseHeaders,=0A=
			// timeout handle=0A=
			timeoutTimer,=0A=
			// Cross-domain detection vars=0A=
			parts,=0A=
			// To know if global events are to be dispatched=0A=
			fireGlobals,=0A=
			// Loop variable=0A=
			i,=0A=
			// Create the final options object=0A=
			s =3D jQuery.ajaxSetup( {}, options ),=0A=
			// Callbacks context=0A=
			callbackContext =3D s.context || s,=0A=
			// Context for global events is callbackContext if it is a DOM node =
or jQuery collection=0A=
			globalEventContext =3D s.context && ( callbackContext.nodeType || =
callbackContext.jquery ) ?=0A=
				jQuery( callbackContext ) :=0A=
				jQuery.event,=0A=
			// Deferreds=0A=
			deferred =3D jQuery.Deferred(),=0A=
			completeDeferred =3D jQuery.Callbacks("once memory"),=0A=
			// Status-dependent callbacks=0A=
			statusCode =3D s.statusCode || {},=0A=
			// Headers (they are sent all at once)=0A=
			requestHeaders =3D {},=0A=
			requestHeadersNames =3D {},=0A=
			// The jqXHR state=0A=
			state =3D 0,=0A=
			// Default abort message=0A=
			strAbort =3D "canceled",=0A=
			// Fake xhr=0A=
			jqXHR =3D {=0A=
				readyState: 0,=0A=
=0A=
				// Builds headers hashtable if needed=0A=
				getResponseHeader: function( key ) {=0A=
					var match;=0A=
					if ( state =3D=3D=3D 2 ) {=0A=
						if ( !responseHeaders ) {=0A=
							responseHeaders =3D {};=0A=
							while ( (match =3D rheaders.exec( responseHeadersString )) ) {=0A=
								responseHeaders[ match[1].toLowerCase() ] =3D match[ 2 ];=0A=
							}=0A=
						}=0A=
						match =3D responseHeaders[ key.toLowerCase() ];=0A=
					}=0A=
					return match =3D=3D null ? null : match;=0A=
				},=0A=
=0A=
				// Raw string=0A=
				getAllResponseHeaders: function() {=0A=
					return state =3D=3D=3D 2 ? responseHeadersString : null;=0A=
				},=0A=
=0A=
				// Caches the header=0A=
				setRequestHeader: function( name, value ) {=0A=
					var lname =3D name.toLowerCase();=0A=
					if ( !state ) {=0A=
						name =3D requestHeadersNames[ lname ] =3D requestHeadersNames[ =
lname ] || name;=0A=
						requestHeaders[ name ] =3D value;=0A=
					}=0A=
					return this;=0A=
				},=0A=
=0A=
				// Overrides response content-type header=0A=
				overrideMimeType: function( type ) {=0A=
					if ( !state ) {=0A=
						s.mimeType =3D type;=0A=
					}=0A=
					return this;=0A=
				},=0A=
=0A=
				// Status-dependent callbacks=0A=
				statusCode: function( map ) {=0A=
					var code;=0A=
					if ( map ) {=0A=
						if ( state < 2 ) {=0A=
							for ( code in map ) {=0A=
								// Lazy-add the new callback in a way that preserves old ones=0A=
								statusCode[ code ] =3D [ statusCode[ code ], map[ code ] ];=0A=
							}=0A=
						} else {=0A=
							// Execute the appropriate callbacks=0A=
							jqXHR.always( map[ jqXHR.status ] );=0A=
						}=0A=
					}=0A=
					return this;=0A=
				},=0A=
=0A=
				// Cancel the request=0A=
				abort: function( statusText ) {=0A=
					var finalText =3D statusText || strAbort;=0A=
					if ( transport ) {=0A=
						transport.abort( finalText );=0A=
					}=0A=
					done( 0, finalText );=0A=
					return this;=0A=
				}=0A=
			};=0A=
=0A=
		// Attach deferreds=0A=
		deferred.promise( jqXHR ).complete =3D completeDeferred.add;=0A=
		jqXHR.success =3D jqXHR.done;=0A=
		jqXHR.error =3D jqXHR.fail;=0A=
=0A=
		// Remove hash character (#7531: and string promotion)=0A=
		// Add protocol if not provided (prefilters might expect it)=0A=
		// Handle falsy url in the settings object (#10093: consistency with =
old signature)=0A=
		// We also use the url parameter if available=0A=
		s.url =3D ( ( url || s.url || ajaxLocation ) + "" ).replace( rhash, "" =
)=0A=
			.replace( rprotocol, ajaxLocParts[ 1 ] + "//" );=0A=
=0A=
		// Alias method option to type as per ticket #12004=0A=
		s.type =3D options.method || options.type || s.method || s.type;=0A=
=0A=
		// Extract dataTypes list=0A=
		s.dataTypes =3D jQuery.trim( s.dataType || "*" ).toLowerCase().match( =
core_rnotwhite ) || [""];=0A=
=0A=
		// A cross-domain request is in order when we have a =
protocol:host:port mismatch=0A=
		if ( s.crossDomain =3D=3D null ) {=0A=
			parts =3D rurl.exec( s.url.toLowerCase() );=0A=
			s.crossDomain =3D !!( parts &&=0A=
				( parts[ 1 ] !=3D=3D ajaxLocParts[ 1 ] || parts[ 2 ] !=3D=3D =
ajaxLocParts[ 2 ] ||=0A=
					( parts[ 3 ] || ( parts[ 1 ] =3D=3D=3D "http:" ? "80" : "443" ) ) =
!=3D=3D=0A=
						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] =3D=3D=3D "http:" ? =
"80" : "443" ) ) )=0A=
			);=0A=
		}=0A=
=0A=
		// Convert data if not already a string=0A=
		if ( s.data && s.processData && typeof s.data !=3D=3D "string" ) {=0A=
			s.data =3D jQuery.param( s.data, s.traditional );=0A=
		}=0A=
=0A=
		// Apply prefilters=0A=
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );=0A=
=0A=
		// If request was aborted inside a prefilter, stop there=0A=
		if ( state =3D=3D=3D 2 ) {=0A=
			return jqXHR;=0A=
		}=0A=
=0A=
		// We can fire global events as of now if asked to=0A=
		fireGlobals =3D s.global;=0A=
=0A=
		// Watch for a new set of requests=0A=
		if ( fireGlobals && jQuery.active++ =3D=3D=3D 0 ) {=0A=
			jQuery.event.trigger("ajaxStart");=0A=
		}=0A=
=0A=
		// Uppercase the type=0A=
		s.type =3D s.type.toUpperCase();=0A=
=0A=
		// Determine if request has content=0A=
		s.hasContent =3D !rnoContent.test( s.type );=0A=
=0A=
		// Save the URL in case we're toying with the If-Modified-Since=0A=
		// and/or If-None-Match header later on=0A=
		cacheURL =3D s.url;=0A=
=0A=
		// More options handling for requests with no content=0A=
		if ( !s.hasContent ) {=0A=
=0A=
			// If data is available, append data to url=0A=
			if ( s.data ) {=0A=
				cacheURL =3D ( s.url +=3D ( ajax_rquery.test( cacheURL ) ? "&" : "?" =
) + s.data );=0A=
				// #9682: remove data so that it's not used in an eventual retry=0A=
				delete s.data;=0A=
			}=0A=
=0A=
			// Add anti-cache in url if needed=0A=
			if ( s.cache =3D=3D=3D false ) {=0A=
				s.url =3D rts.test( cacheURL ) ?=0A=
=0A=
					// If there is already a '_' parameter, set its value=0A=
					cacheURL.replace( rts, "$1_=3D" + ajax_nonce++ ) :=0A=
=0A=
					// Otherwise add one to the end=0A=
					cacheURL + ( ajax_rquery.test( cacheURL ) ? "&" : "?" ) + "_=3D" + =
ajax_nonce++;=0A=
			}=0A=
		}=0A=
=0A=
		// Set the If-Modified-Since and/or If-None-Match header, if in =
ifModified mode.=0A=
		if ( s.ifModified ) {=0A=
			if ( jQuery.lastModified[ cacheURL ] ) {=0A=
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ =
cacheURL ] );=0A=
			}=0A=
			if ( jQuery.etag[ cacheURL ] ) {=0A=
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );=0A=
			}=0A=
		}=0A=
=0A=
		// Set the correct header, if data is being sent=0A=
		if ( s.data && s.hasContent && s.contentType !=3D=3D false || =
options.contentType ) {=0A=
			jqXHR.setRequestHeader( "Content-Type", s.contentType );=0A=
		}=0A=
=0A=
		// Set the Accepts header for the server, depending on the dataType=0A=
		jqXHR.setRequestHeader(=0A=
			"Accept",=0A=
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?=0A=
				s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !=3D=3D "*" ? ", " =
+ allTypes + "; q=3D0.01" : "" ) :=0A=
				s.accepts[ "*" ]=0A=
		);=0A=
=0A=
		// Check for headers option=0A=
		for ( i in s.headers ) {=0A=
			jqXHR.setRequestHeader( i, s.headers[ i ] );=0A=
		}=0A=
=0A=
		// Allow custom headers/mimetypes and early abort=0A=
		if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) =
=3D=3D=3D false || state =3D=3D=3D 2 ) ) {=0A=
			// Abort if not done already and return=0A=
			return jqXHR.abort();=0A=
		}=0A=
=0A=
		// aborting is no longer a cancellation=0A=
		strAbort =3D "abort";=0A=
=0A=
		// Install callbacks on deferreds=0A=
		for ( i in { success: 1, error: 1, complete: 1 } ) {=0A=
			jqXHR[ i ]( s[ i ] );=0A=
		}=0A=
=0A=
		// Get transport=0A=
		transport =3D inspectPrefiltersOrTransports( transports, s, options, =
jqXHR );=0A=
=0A=
		// If no transport, we auto-abort=0A=
		if ( !transport ) {=0A=
			done( -1, "No Transport" );=0A=
		} else {=0A=
			jqXHR.readyState =3D 1;=0A=
=0A=
			// Send global event=0A=
			if ( fireGlobals ) {=0A=
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );=0A=
			}=0A=
			// Timeout=0A=
			if ( s.async && s.timeout > 0 ) {=0A=
				timeoutTimer =3D setTimeout(function() {=0A=
					jqXHR.abort("timeout");=0A=
				}, s.timeout );=0A=
			}=0A=
=0A=
			try {=0A=
				state =3D 1;=0A=
				transport.send( requestHeaders, done );=0A=
			} catch ( e ) {=0A=
				// Propagate exception as error if not done=0A=
				if ( state < 2 ) {=0A=
					done( -1, e );=0A=
				// Simply rethrow otherwise=0A=
				} else {=0A=
					throw e;=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		// Callback for when everything is done=0A=
		function done( status, nativeStatusText, responses, headers ) {=0A=
			var isSuccess, success, error, response, modified,=0A=
				statusText =3D nativeStatusText;=0A=
=0A=
			// Called once=0A=
			if ( state =3D=3D=3D 2 ) {=0A=
				return;=0A=
			}=0A=
=0A=
			// State is "done" now=0A=
			state =3D 2;=0A=
=0A=
			// Clear timeout if it exists=0A=
			if ( timeoutTimer ) {=0A=
				clearTimeout( timeoutTimer );=0A=
			}=0A=
=0A=
			// Dereference transport for early garbage collection=0A=
			// (no matter how long the jqXHR object will be used)=0A=
			transport =3D undefined;=0A=
=0A=
			// Cache response headers=0A=
			responseHeadersString =3D headers || "";=0A=
=0A=
			// Set readyState=0A=
			jqXHR.readyState =3D status > 0 ? 4 : 0;=0A=
=0A=
			// Determine if successful=0A=
			isSuccess =3D status >=3D 200 && status < 300 || status =3D=3D=3D 304;=0A=
=0A=
			// Get response data=0A=
			if ( responses ) {=0A=
				response =3D ajaxHandleResponses( s, jqXHR, responses );=0A=
			}=0A=
=0A=
			// Convert no matter what (that way responseXXX fields are always set)=0A=
			response =3D ajaxConvert( s, response, jqXHR, isSuccess );=0A=
=0A=
			// If successful, handle type chaining=0A=
			if ( isSuccess ) {=0A=
=0A=
				// Set the If-Modified-Since and/or If-None-Match header, if in =
ifModified mode.=0A=
				if ( s.ifModified ) {=0A=
					modified =3D jqXHR.getResponseHeader("Last-Modified");=0A=
					if ( modified ) {=0A=
						jQuery.lastModified[ cacheURL ] =3D modified;=0A=
					}=0A=
					modified =3D jqXHR.getResponseHeader("etag");=0A=
					if ( modified ) {=0A=
						jQuery.etag[ cacheURL ] =3D modified;=0A=
					}=0A=
				}=0A=
=0A=
				// if no content=0A=
				if ( status =3D=3D=3D 204 || s.type =3D=3D=3D "HEAD" ) {=0A=
					statusText =3D "nocontent";=0A=
=0A=
				// if not modified=0A=
				} else if ( status =3D=3D=3D 304 ) {=0A=
					statusText =3D "notmodified";=0A=
=0A=
				// If we have data, let's convert it=0A=
				} else {=0A=
					statusText =3D response.state;=0A=
					success =3D response.data;=0A=
					error =3D response.error;=0A=
					isSuccess =3D !error;=0A=
				}=0A=
			} else {=0A=
				// We extract error from statusText=0A=
				// then normalize statusText and status for non-aborts=0A=
				error =3D statusText;=0A=
				if ( status || !statusText ) {=0A=
					statusText =3D "error";=0A=
					if ( status < 0 ) {=0A=
						status =3D 0;=0A=
					}=0A=
				}=0A=
			}=0A=
=0A=
			// Set data for the fake xhr object=0A=
			jqXHR.status =3D status;=0A=
			jqXHR.statusText =3D ( nativeStatusText || statusText ) + "";=0A=
=0A=
			// Success/Error=0A=
			if ( isSuccess ) {=0A=
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR =
] );=0A=
			} else {=0A=
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );=0A=
			}=0A=
=0A=
			// Status-dependent callbacks=0A=
			jqXHR.statusCode( statusCode );=0A=
			statusCode =3D undefined;=0A=
=0A=
			if ( fireGlobals ) {=0A=
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",=0A=
					[ jqXHR, s, isSuccess ? success : error ] );=0A=
			}=0A=
=0A=
			// Complete=0A=
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );=0A=
=0A=
			if ( fireGlobals ) {=0A=
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );=0A=
				// Handle the global AJAX counter=0A=
				if ( !( --jQuery.active ) ) {=0A=
					jQuery.event.trigger("ajaxStop");=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		return jqXHR;=0A=
	},=0A=
=0A=
	getJSON: function( url, data, callback ) {=0A=
		return jQuery.get( url, data, callback, "json" );=0A=
	},=0A=
=0A=
	getScript: function( url, callback ) {=0A=
		return jQuery.get( url, undefined, callback, "script" );=0A=
	}=0A=
});=0A=
=0A=
jQuery.each( [ "get", "post" ], function( i, method ) {=0A=
	jQuery[ method ] =3D function( url, data, callback, type ) {=0A=
		// shift arguments if data argument was omitted=0A=
		if ( jQuery.isFunction( data ) ) {=0A=
			type =3D type || callback;=0A=
			callback =3D data;=0A=
			data =3D undefined;=0A=
		}=0A=
=0A=
		return jQuery.ajax({=0A=
			url: url,=0A=
			type: method,=0A=
			dataType: type,=0A=
			data: data,=0A=
			success: callback=0A=
		});=0A=
	};=0A=
});=0A=
=0A=
/* Handles responses to an ajax request:=0A=
 * - finds the right dataType (mediates between content-type and =
expected dataType)=0A=
 * - returns the corresponding response=0A=
 */=0A=
function ajaxHandleResponses( s, jqXHR, responses ) {=0A=
=0A=
	var ct, type, finalDataType, firstDataType,=0A=
		contents =3D s.contents,=0A=
		dataTypes =3D s.dataTypes;=0A=
=0A=
	// Remove auto dataType and get content-type in the process=0A=
	while( dataTypes[ 0 ] =3D=3D=3D "*" ) {=0A=
		dataTypes.shift();=0A=
		if ( ct =3D=3D=3D undefined ) {=0A=
			ct =3D s.mimeType || jqXHR.getResponseHeader("Content-Type");=0A=
		}=0A=
	}=0A=
=0A=
	// Check if we're dealing with a known content-type=0A=
	if ( ct ) {=0A=
		for ( type in contents ) {=0A=
			if ( contents[ type ] && contents[ type ].test( ct ) ) {=0A=
				dataTypes.unshift( type );=0A=
				break;=0A=
			}=0A=
		}=0A=
	}=0A=
=0A=
	// Check to see if we have a response for the expected dataType=0A=
	if ( dataTypes[ 0 ] in responses ) {=0A=
		finalDataType =3D dataTypes[ 0 ];=0A=
	} else {=0A=
		// Try convertible dataTypes=0A=
		for ( type in responses ) {=0A=
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {=0A=
				finalDataType =3D type;=0A=
				break;=0A=
			}=0A=
			if ( !firstDataType ) {=0A=
				firstDataType =3D type;=0A=
			}=0A=
		}=0A=
		// Or just use first one=0A=
		finalDataType =3D finalDataType || firstDataType;=0A=
	}=0A=
=0A=
	// If we found a dataType=0A=
	// We add the dataType to the list if needed=0A=
	// and return the corresponding response=0A=
	if ( finalDataType ) {=0A=
		if ( finalDataType !=3D=3D dataTypes[ 0 ] ) {=0A=
			dataTypes.unshift( finalDataType );=0A=
		}=0A=
		return responses[ finalDataType ];=0A=
	}=0A=
}=0A=
=0A=
/* Chain conversions given the request and the original response=0A=
 * Also sets the responseXXX fields on the jqXHR instance=0A=
 */=0A=
function ajaxConvert( s, response, jqXHR, isSuccess ) {=0A=
	var conv2, current, conv, tmp, prev,=0A=
		converters =3D {},=0A=
		// Work with a copy of dataTypes in case we need to modify it for =
conversion=0A=
		dataTypes =3D s.dataTypes.slice();=0A=
=0A=
	// Create converters map with lowercased keys=0A=
	if ( dataTypes[ 1 ] ) {=0A=
		for ( conv in s.converters ) {=0A=
			converters[ conv.toLowerCase() ] =3D s.converters[ conv ];=0A=
		}=0A=
	}=0A=
=0A=
	current =3D dataTypes.shift();=0A=
=0A=
	// Convert to each sequential dataType=0A=
	while ( current ) {=0A=
=0A=
		if ( s.responseFields[ current ] ) {=0A=
			jqXHR[ s.responseFields[ current ] ] =3D response;=0A=
		}=0A=
=0A=
		// Apply the dataFilter if provided=0A=
		if ( !prev && isSuccess && s.dataFilter ) {=0A=
			response =3D s.dataFilter( response, s.dataType );=0A=
		}=0A=
=0A=
		prev =3D current;=0A=
		current =3D dataTypes.shift();=0A=
=0A=
		if ( current ) {=0A=
=0A=
		// There's only work to do if current dataType is non-auto=0A=
			if ( current =3D=3D=3D "*" ) {=0A=
=0A=
				current =3D prev;=0A=
=0A=
			// Convert response if prev dataType is non-auto and differs from =
current=0A=
			} else if ( prev !=3D=3D "*" && prev !=3D=3D current ) {=0A=
=0A=
				// Seek a direct converter=0A=
				conv =3D converters[ prev + " " + current ] || converters[ "* " + =
current ];=0A=
=0A=
				// If none found, seek a pair=0A=
				if ( !conv ) {=0A=
					for ( conv2 in converters ) {=0A=
=0A=
						// If conv2 outputs current=0A=
						tmp =3D conv2.split( " " );=0A=
						if ( tmp[ 1 ] =3D=3D=3D current ) {=0A=
=0A=
							// If prev can be converted to accepted input=0A=
							conv =3D converters[ prev + " " + tmp[ 0 ] ] ||=0A=
								converters[ "* " + tmp[ 0 ] ];=0A=
							if ( conv ) {=0A=
								// Condense equivalence converters=0A=
								if ( conv =3D=3D=3D true ) {=0A=
									conv =3D converters[ conv2 ];=0A=
=0A=
								// Otherwise, insert the intermediate dataType=0A=
								} else if ( converters[ conv2 ] !=3D=3D true ) {=0A=
									current =3D tmp[ 0 ];=0A=
									dataTypes.unshift( tmp[ 1 ] );=0A=
								}=0A=
								break;=0A=
							}=0A=
						}=0A=
					}=0A=
				}=0A=
=0A=
				// Apply converter (if not an equivalence)=0A=
				if ( conv !=3D=3D true ) {=0A=
=0A=
					// Unless errors are allowed to bubble, catch and return them=0A=
					if ( conv && s[ "throws" ] ) {=0A=
						response =3D conv( response );=0A=
					} else {=0A=
						try {=0A=
							response =3D conv( response );=0A=
						} catch ( e ) {=0A=
							return { state: "parsererror", error: conv ? e : "No conversion =
from " + prev + " to " + current };=0A=
						}=0A=
					}=0A=
				}=0A=
			}=0A=
		}=0A=
	}=0A=
=0A=
	return { state: "success", data: response };=0A=
}=0A=
// Install script dataType=0A=
jQuery.ajaxSetup({=0A=
	accepts: {=0A=
		script: "text/javascript, application/javascript, =
application/ecmascript, application/x-ecmascript"=0A=
	},=0A=
	contents: {=0A=
		script: /(?:java|ecma)script/=0A=
	},=0A=
	converters: {=0A=
		"text script": function( text ) {=0A=
			jQuery.globalEval( text );=0A=
			return text;=0A=
		}=0A=
	}=0A=
});=0A=
=0A=
// Handle cache's special case and crossDomain=0A=
jQuery.ajaxPrefilter( "script", function( s ) {=0A=
	if ( s.cache =3D=3D=3D undefined ) {=0A=
		s.cache =3D false;=0A=
	}=0A=
	if ( s.crossDomain ) {=0A=
		s.type =3D "GET";=0A=
	}=0A=
});=0A=
=0A=
// Bind script tag hack transport=0A=
jQuery.ajaxTransport( "script", function( s ) {=0A=
	// This transport only deals with cross domain requests=0A=
	if ( s.crossDomain ) {=0A=
		var script, callback;=0A=
		return {=0A=
			send: function( _, complete ) {=0A=
				script =3D jQuery("<script>").prop({=0A=
					async: true,=0A=
					charset: s.scriptCharset,=0A=
					src: s.url=0A=
				}).on(=0A=
					"load error",=0A=
					callback =3D function( evt ) {=0A=
						script.remove();=0A=
						callback =3D null;=0A=
						if ( evt ) {=0A=
							complete( evt.type =3D=3D=3D "error" ? 404 : 200, evt.type );=0A=
						}=0A=
					}=0A=
				);=0A=
				document.head.appendChild( script[ 0 ] );=0A=
			},=0A=
			abort: function() {=0A=
				if ( callback ) {=0A=
					callback();=0A=
				}=0A=
			}=0A=
		};=0A=
	}=0A=
});=0A=
var oldCallbacks =3D [],=0A=
	rjsonp =3D /(=3D)\?(?=3D&|$)|\?\?/;=0A=
=0A=
// Default jsonp settings=0A=
jQuery.ajaxSetup({=0A=
	jsonp: "callback",=0A=
	jsonpCallback: function() {=0A=
		var callback =3D oldCallbacks.pop() || ( jQuery.expando + "_" + ( =
ajax_nonce++ ) );=0A=
		this[ callback ] =3D true;=0A=
		return callback;=0A=
	}=0A=
});=0A=
=0A=
// Detect, normalize options and install callbacks for jsonp requests=0A=
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR =
) {=0A=
=0A=
	var callbackName, overwritten, responseContainer,=0A=
		jsonProp =3D s.jsonp !=3D=3D false && ( rjsonp.test( s.url ) ?=0A=
			"url" :=0A=
			typeof s.data =3D=3D=3D "string" && !( s.contentType || "" =
).indexOf("application/x-www-form-urlencoded") && rjsonp.test( s.data ) =
&& "data"=0A=
		);=0A=
=0A=
	// Handle iff the expected data type is "jsonp" or we have a parameter =
to set=0A=
	if ( jsonProp || s.dataTypes[ 0 ] =3D=3D=3D "jsonp" ) {=0A=
=0A=
		// Get callback name, remembering preexisting value associated with it=0A=
		callbackName =3D s.jsonpCallback =3D jQuery.isFunction( =
s.jsonpCallback ) ?=0A=
			s.jsonpCallback() :=0A=
			s.jsonpCallback;=0A=
=0A=
		// Insert callback into url or form data=0A=
		if ( jsonProp ) {=0A=
			s[ jsonProp ] =3D s[ jsonProp ].replace( rjsonp, "$1" + callbackName =
);=0A=
		} else if ( s.jsonp !=3D=3D false ) {=0A=
			s.url +=3D ( ajax_rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + =
"=3D" + callbackName;=0A=
		}=0A=
=0A=
		// Use data converter to retrieve json after script execution=0A=
		s.converters["script json"] =3D function() {=0A=
			if ( !responseContainer ) {=0A=
				jQuery.error( callbackName + " was not called" );=0A=
			}=0A=
			return responseContainer[ 0 ];=0A=
		};=0A=
=0A=
		// force json dataType=0A=
		s.dataTypes[ 0 ] =3D "json";=0A=
=0A=
		// Install callback=0A=
		overwritten =3D window[ callbackName ];=0A=
		window[ callbackName ] =3D function() {=0A=
			responseContainer =3D arguments;=0A=
		};=0A=
=0A=
		// Clean-up function (fires after converters)=0A=
		jqXHR.always(function() {=0A=
			// Restore preexisting value=0A=
			window[ callbackName ] =3D overwritten;=0A=
=0A=
			// Save back as free=0A=
			if ( s[ callbackName ] ) {=0A=
				// make sure that re-using the options doesn't screw things around=0A=
				s.jsonpCallback =3D originalSettings.jsonpCallback;=0A=
=0A=
				// save the callback name for future use=0A=
				oldCallbacks.push( callbackName );=0A=
			}=0A=
=0A=
			// Call if it was a function and we have a response=0A=
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {=0A=
				overwritten( responseContainer[ 0 ] );=0A=
			}=0A=
=0A=
			responseContainer =3D overwritten =3D undefined;=0A=
		});=0A=
=0A=
		// Delegate to script=0A=
		return "script";=0A=
	}=0A=
});=0A=
jQuery.ajaxSettings.xhr =3D function() {=0A=
	try {=0A=
		return new XMLHttpRequest();=0A=
	} catch( e ) {}=0A=
};=0A=
=0A=
var xhrSupported =3D jQuery.ajaxSettings.xhr(),=0A=
	xhrSuccessStatus =3D {=0A=
		// file protocol always yields status code 0, assume 200=0A=
		0: 200,=0A=
		// Support: IE9=0A=
		// #1450: sometimes IE returns 1223 when it should be 204=0A=
		1223: 204=0A=
	},=0A=
	// Support: IE9=0A=
	// We need to keep track of outbound xhr and abort them manually=0A=
	// because IE is not smart enough to do it all by itself=0A=
	xhrId =3D 0,=0A=
	xhrCallbacks =3D {};=0A=
=0A=
if ( window.ActiveXObject ) {=0A=
	jQuery( window ).on( "unload", function() {=0A=
		for( var key in xhrCallbacks ) {=0A=
			xhrCallbacks[ key ]();=0A=
		}=0A=
		xhrCallbacks =3D undefined;=0A=
	});=0A=
}=0A=
=0A=
jQuery.support.cors =3D !!xhrSupported && ( "withCredentials" in =
xhrSupported );=0A=
jQuery.support.ajax =3D xhrSupported =3D !!xhrSupported;=0A=
=0A=
jQuery.ajaxTransport(function( options ) {=0A=
	var callback;=0A=
	// Cross domain only allowed if supported through XMLHttpRequest=0A=
	if ( jQuery.support.cors || xhrSupported && !options.crossDomain ) {=0A=
		return {=0A=
			send: function( headers, complete ) {=0A=
				var i, id,=0A=
					xhr =3D options.xhr();=0A=
				xhr.open( options.type, options.url, options.async, =
options.username, options.password );=0A=
				// Apply custom fields if provided=0A=
				if ( options.xhrFields ) {=0A=
					for ( i in options.xhrFields ) {=0A=
						xhr[ i ] =3D options.xhrFields[ i ];=0A=
					}=0A=
				}=0A=
				// Override mime type if needed=0A=
				if ( options.mimeType && xhr.overrideMimeType ) {=0A=
					xhr.overrideMimeType( options.mimeType );=0A=
				}=0A=
				// X-Requested-With header=0A=
				// For cross-domain requests, seeing as conditions for a preflight =
are=0A=
				// akin to a jigsaw puzzle, we simply never set it to be sure.=0A=
				// (it can always be set on a per-request basis or even using =
ajaxSetup)=0A=
				// For same-domain requests, won't change header if already provided.=0A=
				if ( !options.crossDomain && !headers["X-Requested-With"] ) {=0A=
					headers["X-Requested-With"] =3D "XMLHttpRequest";=0A=
				}=0A=
				// Set headers=0A=
				for ( i in headers ) {=0A=
					xhr.setRequestHeader( i, headers[ i ] );=0A=
				}=0A=
				// Callback=0A=
				callback =3D function( type ) {=0A=
					return function() {=0A=
						if ( callback ) {=0A=
							delete xhrCallbacks[ id ];=0A=
							callback =3D xhr.onload =3D xhr.onerror =3D null;=0A=
							if ( type =3D=3D=3D "abort" ) {=0A=
								xhr.abort();=0A=
							} else if ( type =3D=3D=3D "error" ) {=0A=
								complete(=0A=
									// file protocol always yields status 0, assume 404=0A=
									xhr.status || 404,=0A=
									xhr.statusText=0A=
								);=0A=
							} else {=0A=
								complete(=0A=
									xhrSuccessStatus[ xhr.status ] || xhr.status,=0A=
									xhr.statusText,=0A=
									// Support: IE9=0A=
									// #11426: When requesting binary data, IE9 will throw an =
exception=0A=
									// on any attempt to access responseText=0A=
									typeof xhr.responseText =3D=3D=3D "string" ? {=0A=
										text: xhr.responseText=0A=
									} : undefined,=0A=
									xhr.getAllResponseHeaders()=0A=
								);=0A=
							}=0A=
						}=0A=
					};=0A=
				};=0A=
				// Listen to events=0A=
				xhr.onload =3D callback();=0A=
				xhr.onerror =3D callback("error");=0A=
				// Create the abort callback=0A=
				callback =3D xhrCallbacks[( id =3D xhrId++ )] =3D callback("abort");=0A=
				// Do send the request=0A=
				// This may raise an exception which is actually=0A=
				// handled in jQuery.ajax (so no try/catch here)=0A=
				xhr.send( options.hasContent && options.data || null );=0A=
			},=0A=
			abort: function() {=0A=
				if ( callback ) {=0A=
					callback();=0A=
				}=0A=
			}=0A=
		};=0A=
	}=0A=
});=0A=
var fxNow, timerId,=0A=
	rfxtypes =3D /^(?:toggle|show|hide)$/,=0A=
	rfxnum =3D new RegExp( "^(?:([+-])=3D|)(" + core_pnum + ")([a-z%]*)$", =
"i" ),=0A=
	rrun =3D /queueHooks$/,=0A=
	animationPrefilters =3D [ defaultPrefilter ],=0A=
	tweeners =3D {=0A=
		"*": [function( prop, value ) {=0A=
			var tween =3D this.createTween( prop, value ),=0A=
				target =3D tween.cur(),=0A=
				parts =3D rfxnum.exec( value ),=0A=
				unit =3D parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : =
"px" ),=0A=
=0A=
				// Starting value computation is required for potential unit =
mismatches=0A=
				start =3D ( jQuery.cssNumber[ prop ] || unit !=3D=3D "px" && +target =
) &&=0A=
					rfxnum.exec( jQuery.css( tween.elem, prop ) ),=0A=
				scale =3D 1,=0A=
				maxIterations =3D 20;=0A=
=0A=
			if ( start && start[ 3 ] !=3D=3D unit ) {=0A=
				// Trust units reported by jQuery.css=0A=
				unit =3D unit || start[ 3 ];=0A=
=0A=
				// Make sure we update the tween properties later on=0A=
				parts =3D parts || [];=0A=
=0A=
				// Iteratively approximate from a nonzero starting point=0A=
				start =3D +target || 1;=0A=
=0A=
				do {=0A=
					// If previous iteration zeroed out, double until we get *something*=0A=
					// Use a string for doubling factor so we don't accidentally see =
scale as unchanged below=0A=
					scale =3D scale || ".5";=0A=
=0A=
					// Adjust and apply=0A=
					start =3D start / scale;=0A=
					jQuery.style( tween.elem, prop, start + unit );=0A=
=0A=
				// Update scale, tolerating zero or NaN from tween.cur()=0A=
				// And breaking the loop if scale is unchanged or perfect, or if =
we've just had enough=0A=
				} while ( scale !=3D=3D (scale =3D tween.cur() / target) && scale =
!=3D=3D 1 && --maxIterations );=0A=
			}=0A=
=0A=
			// Update tween properties=0A=
			if ( parts ) {=0A=
				start =3D tween.start =3D +start || +target || 0;=0A=
				tween.unit =3D unit;=0A=
				// If a +=3D/-=3D token was provided, we're doing a relative =
animation=0A=
				tween.end =3D parts[ 1 ] ?=0A=
					start + ( parts[ 1 ] + 1 ) * parts[ 2 ] :=0A=
					+parts[ 2 ];=0A=
			}=0A=
=0A=
			return tween;=0A=
		}]=0A=
	};=0A=
=0A=
// Animations created synchronously will run synchronously=0A=
function createFxNow() {=0A=
	setTimeout(function() {=0A=
		fxNow =3D undefined;=0A=
	});=0A=
	return ( fxNow =3D jQuery.now() );=0A=
}=0A=
=0A=
function createTween( value, prop, animation ) {=0A=
	var tween,=0A=
		collection =3D ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] ),=0A=
		index =3D 0,=0A=
		length =3D collection.length;=0A=
	for ( ; index < length; index++ ) {=0A=
		if ( (tween =3D collection[ index ].call( animation, prop, value )) ) {=0A=
=0A=
			// we're done with this property=0A=
			return tween;=0A=
		}=0A=
	}=0A=
}=0A=
=0A=
function Animation( elem, properties, options ) {=0A=
	var result,=0A=
		stopped,=0A=
		index =3D 0,=0A=
		length =3D animationPrefilters.length,=0A=
		deferred =3D jQuery.Deferred().always( function() {=0A=
			// don't match elem in the :animated selector=0A=
			delete tick.elem;=0A=
		}),=0A=
		tick =3D function() {=0A=
			if ( stopped ) {=0A=
				return false;=0A=
			}=0A=
			var currentTime =3D fxNow || createFxNow(),=0A=
				remaining =3D Math.max( 0, animation.startTime + animation.duration =
- currentTime ),=0A=
				// archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)=0A=
				temp =3D remaining / animation.duration || 0,=0A=
				percent =3D 1 - temp,=0A=
				index =3D 0,=0A=
				length =3D animation.tweens.length;=0A=
=0A=
			for ( ; index < length ; index++ ) {=0A=
				animation.tweens[ index ].run( percent );=0A=
			}=0A=
=0A=
			deferred.notifyWith( elem, [ animation, percent, remaining ]);=0A=
=0A=
			if ( percent < 1 && length ) {=0A=
				return remaining;=0A=
			} else {=0A=
				deferred.resolveWith( elem, [ animation ] );=0A=
				return false;=0A=
			}=0A=
		},=0A=
		animation =3D deferred.promise({=0A=
			elem: elem,=0A=
			props: jQuery.extend( {}, properties ),=0A=
			opts: jQuery.extend( true, { specialEasing: {} }, options ),=0A=
			originalProperties: properties,=0A=
			originalOptions: options,=0A=
			startTime: fxNow || createFxNow(),=0A=
			duration: options.duration,=0A=
			tweens: [],=0A=
			createTween: function( prop, end ) {=0A=
				var tween =3D jQuery.Tween( elem, animation.opts, prop, end,=0A=
						animation.opts.specialEasing[ prop ] || animation.opts.easing );=0A=
				animation.tweens.push( tween );=0A=
				return tween;=0A=
			},=0A=
			stop: function( gotoEnd ) {=0A=
				var index =3D 0,=0A=
					// if we are going to the end, we want to run all the tweens=0A=
					// otherwise we skip this part=0A=
					length =3D gotoEnd ? animation.tweens.length : 0;=0A=
				if ( stopped ) {=0A=
					return this;=0A=
				}=0A=
				stopped =3D true;=0A=
				for ( ; index < length ; index++ ) {=0A=
					animation.tweens[ index ].run( 1 );=0A=
				}=0A=
=0A=
				// resolve when we played the last frame=0A=
				// otherwise, reject=0A=
				if ( gotoEnd ) {=0A=
					deferred.resolveWith( elem, [ animation, gotoEnd ] );=0A=
				} else {=0A=
					deferred.rejectWith( elem, [ animation, gotoEnd ] );=0A=
				}=0A=
				return this;=0A=
			}=0A=
		}),=0A=
		props =3D animation.props;=0A=
=0A=
	propFilter( props, animation.opts.specialEasing );=0A=
=0A=
	for ( ; index < length ; index++ ) {=0A=
		result =3D animationPrefilters[ index ].call( animation, elem, props, =
animation.opts );=0A=
		if ( result ) {=0A=
			return result;=0A=
		}=0A=
	}=0A=
=0A=
	jQuery.map( props, createTween, animation );=0A=
=0A=
	if ( jQuery.isFunction( animation.opts.start ) ) {=0A=
		animation.opts.start.call( elem, animation );=0A=
	}=0A=
=0A=
	jQuery.fx.timer(=0A=
		jQuery.extend( tick, {=0A=
			elem: elem,=0A=
			anim: animation,=0A=
			queue: animation.opts.queue=0A=
		})=0A=
	);=0A=
=0A=
	// attach callbacks from options=0A=
	return animation.progress( animation.opts.progress )=0A=
		.done( animation.opts.done, animation.opts.complete )=0A=
		.fail( animation.opts.fail )=0A=
		.always( animation.opts.always );=0A=
}=0A=
=0A=
function propFilter( props, specialEasing ) {=0A=
	var index, name, easing, value, hooks;=0A=
=0A=
	// camelCase, specialEasing and expand cssHook pass=0A=
	for ( index in props ) {=0A=
		name =3D jQuery.camelCase( index );=0A=
		easing =3D specialEasing[ name ];=0A=
		value =3D props[ index ];=0A=
		if ( jQuery.isArray( value ) ) {=0A=
			easing =3D value[ 1 ];=0A=
			value =3D props[ index ] =3D value[ 0 ];=0A=
		}=0A=
=0A=
		if ( index !=3D=3D name ) {=0A=
			props[ name ] =3D value;=0A=
			delete props[ index ];=0A=
		}=0A=
=0A=
		hooks =3D jQuery.cssHooks[ name ];=0A=
		if ( hooks && "expand" in hooks ) {=0A=
			value =3D hooks.expand( value );=0A=
			delete props[ name ];=0A=
=0A=
			// not quite $.extend, this wont overwrite keys already present.=0A=
			// also - reusing 'index' from above because we have the correct =
"name"=0A=
			for ( index in value ) {=0A=
				if ( !( index in props ) ) {=0A=
					props[ index ] =3D value[ index ];=0A=
					specialEasing[ index ] =3D easing;=0A=
				}=0A=
			}=0A=
		} else {=0A=
			specialEasing[ name ] =3D easing;=0A=
		}=0A=
	}=0A=
}=0A=
=0A=
jQuery.Animation =3D jQuery.extend( Animation, {=0A=
=0A=
	tweener: function( props, callback ) {=0A=
		if ( jQuery.isFunction( props ) ) {=0A=
			callback =3D props;=0A=
			props =3D [ "*" ];=0A=
		} else {=0A=
			props =3D props.split(" ");=0A=
		}=0A=
=0A=
		var prop,=0A=
			index =3D 0,=0A=
			length =3D props.length;=0A=
=0A=
		for ( ; index < length ; index++ ) {=0A=
			prop =3D props[ index ];=0A=
			tweeners[ prop ] =3D tweeners[ prop ] || [];=0A=
			tweeners[ prop ].unshift( callback );=0A=
		}=0A=
	},=0A=
=0A=
	prefilter: function( callback, prepend ) {=0A=
		if ( prepend ) {=0A=
			animationPrefilters.unshift( callback );=0A=
		} else {=0A=
			animationPrefilters.push( callback );=0A=
		}=0A=
	}=0A=
});=0A=
=0A=
function defaultPrefilter( elem, props, opts ) {=0A=
	/* jshint validthis: true */=0A=
	var prop, value, toggle, tween, hooks, oldfire,=0A=
		anim =3D this,=0A=
		orig =3D {},=0A=
		style =3D elem.style,=0A=
		hidden =3D elem.nodeType && isHidden( elem ),=0A=
		dataShow =3D data_priv.get( elem, "fxshow" );=0A=
=0A=
	// handle queue: false promises=0A=
	if ( !opts.queue ) {=0A=
		hooks =3D jQuery._queueHooks( elem, "fx" );=0A=
		if ( hooks.unqueued =3D=3D null ) {=0A=
			hooks.unqueued =3D 0;=0A=
			oldfire =3D hooks.empty.fire;=0A=
			hooks.empty.fire =3D function() {=0A=
				if ( !hooks.unqueued ) {=0A=
					oldfire();=0A=
				}=0A=
			};=0A=
		}=0A=
		hooks.unqueued++;=0A=
=0A=
		anim.always(function() {=0A=
			// doing this makes sure that the complete handler will be called=0A=
			// before this completes=0A=
			anim.always(function() {=0A=
				hooks.unqueued--;=0A=
				if ( !jQuery.queue( elem, "fx" ).length ) {=0A=
					hooks.empty.fire();=0A=
				}=0A=
			});=0A=
		});=0A=
	}=0A=
=0A=
	// height/width overflow pass=0A=
	if ( elem.nodeType =3D=3D=3D 1 && ( "height" in props || "width" in =
props ) ) {=0A=
		// Make sure that nothing sneaks out=0A=
		// Record all 3 overflow attributes because IE9-10 do not=0A=
		// change the overflow attribute when overflowX and=0A=
		// overflowY are set to the same value=0A=
		opts.overflow =3D [ style.overflow, style.overflowX, style.overflowY ];=0A=
=0A=
		// Set display property to inline-block for height/width=0A=
		// animations on inline elements that are having width/height animated=0A=
		if ( jQuery.css( elem, "display" ) =3D=3D=3D "inline" &&=0A=
				jQuery.css( elem, "float" ) =3D=3D=3D "none" ) {=0A=
=0A=
			style.display =3D "inline-block";=0A=
		}=0A=
	}=0A=
=0A=
	if ( opts.overflow ) {=0A=
		style.overflow =3D "hidden";=0A=
		anim.always(function() {=0A=
			style.overflow =3D opts.overflow[ 0 ];=0A=
			style.overflowX =3D opts.overflow[ 1 ];=0A=
			style.overflowY =3D opts.overflow[ 2 ];=0A=
		});=0A=
	}=0A=
=0A=
=0A=
	// show/hide pass=0A=
	for ( prop in props ) {=0A=
		value =3D props[ prop ];=0A=
		if ( rfxtypes.exec( value ) ) {=0A=
			delete props[ prop ];=0A=
			toggle =3D toggle || value =3D=3D=3D "toggle";=0A=
			if ( value =3D=3D=3D ( hidden ? "hide" : "show" ) ) {=0A=
=0A=
				// If there is dataShow left over from a stopped hide or show and we =
are going to proceed with show, we should pretend to be hidden=0A=
				if ( value =3D=3D=3D "show" && dataShow && dataShow[ prop ] !=3D=3D =
undefined ) {=0A=
					hidden =3D true;=0A=
				} else {=0A=
					continue;=0A=
				}=0A=
			}=0A=
			orig[ prop ] =3D dataShow && dataShow[ prop ] || jQuery.style( elem, =
prop );=0A=
		}=0A=
	}=0A=
=0A=
	if ( !jQuery.isEmptyObject( orig ) ) {=0A=
		if ( dataShow ) {=0A=
			if ( "hidden" in dataShow ) {=0A=
				hidden =3D dataShow.hidden;=0A=
			}=0A=
		} else {=0A=
			dataShow =3D data_priv.access( elem, "fxshow", {} );=0A=
		}=0A=
=0A=
		// store state if its toggle - enables .stop().toggle() to "reverse"=0A=
		if ( toggle ) {=0A=
			dataShow.hidden =3D !hidden;=0A=
		}=0A=
		if ( hidden ) {=0A=
			jQuery( elem ).show();=0A=
		} else {=0A=
			anim.done(function() {=0A=
				jQuery( elem ).hide();=0A=
			});=0A=
		}=0A=
		anim.done(function() {=0A=
			var prop;=0A=
=0A=
			data_priv.remove( elem, "fxshow" );=0A=
			for ( prop in orig ) {=0A=
				jQuery.style( elem, prop, orig[ prop ] );=0A=
			}=0A=
		});=0A=
		for ( prop in orig ) {=0A=
			tween =3D createTween( hidden ? dataShow[ prop ] : 0, prop, anim );=0A=
=0A=
			if ( !( prop in dataShow ) ) {=0A=
				dataShow[ prop ] =3D tween.start;=0A=
				if ( hidden ) {=0A=
					tween.end =3D tween.start;=0A=
					tween.start =3D prop =3D=3D=3D "width" || prop =3D=3D=3D "height" ? =
1 : 0;=0A=
				}=0A=
			}=0A=
		}=0A=
	}=0A=
}=0A=
=0A=
function Tween( elem, options, prop, end, easing ) {=0A=
	return new Tween.prototype.init( elem, options, prop, end, easing );=0A=
}=0A=
jQuery.Tween =3D Tween;=0A=
=0A=
Tween.prototype =3D {=0A=
	constructor: Tween,=0A=
	init: function( elem, options, prop, end, easing, unit ) {=0A=
		this.elem =3D elem;=0A=
		this.prop =3D prop;=0A=
		this.easing =3D easing || "swing";=0A=
		this.options =3D options;=0A=
		this.start =3D this.now =3D this.cur();=0A=
		this.end =3D end;=0A=
		this.unit =3D unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );=0A=
	},=0A=
	cur: function() {=0A=
		var hooks =3D Tween.propHooks[ this.prop ];=0A=
=0A=
		return hooks && hooks.get ?=0A=
			hooks.get( this ) :=0A=
			Tween.propHooks._default.get( this );=0A=
	},=0A=
	run: function( percent ) {=0A=
		var eased,=0A=
			hooks =3D Tween.propHooks[ this.prop ];=0A=
=0A=
		if ( this.options.duration ) {=0A=
			this.pos =3D eased =3D jQuery.easing[ this.easing ](=0A=
				percent, this.options.duration * percent, 0, 1, this.options.duration=0A=
			);=0A=
		} else {=0A=
			this.pos =3D eased =3D percent;=0A=
		}=0A=
		this.now =3D ( this.end - this.start ) * eased + this.start;=0A=
=0A=
		if ( this.options.step ) {=0A=
			this.options.step.call( this.elem, this.now, this );=0A=
		}=0A=
=0A=
		if ( hooks && hooks.set ) {=0A=
			hooks.set( this );=0A=
		} else {=0A=
			Tween.propHooks._default.set( this );=0A=
		}=0A=
		return this;=0A=
	}=0A=
};=0A=
=0A=
Tween.prototype.init.prototype =3D Tween.prototype;=0A=
=0A=
Tween.propHooks =3D {=0A=
	_default: {=0A=
		get: function( tween ) {=0A=
			var result;=0A=
=0A=
			if ( tween.elem[ tween.prop ] !=3D null &&=0A=
				(!tween.elem.style || tween.elem.style[ tween.prop ] =3D=3D null) ) {=0A=
				return tween.elem[ tween.prop ];=0A=
			}=0A=
=0A=
			// passing an empty string as a 3rd parameter to .css will =
automatically=0A=
			// attempt a parseFloat and fallback to a string if the parse fails=0A=
			// so, simple values such as "10px" are parsed to Float.=0A=
			// complex values such as "rotate(1rad)" are returned as is.=0A=
			result =3D jQuery.css( tween.elem, tween.prop, "" );=0A=
			// Empty strings, null, undefined and "auto" are converted to 0.=0A=
			return !result || result =3D=3D=3D "auto" ? 0 : result;=0A=
		},=0A=
		set: function( tween ) {=0A=
			// use step hook for back compat - use cssHook if its there - use =
.style if its=0A=
			// available and use plain properties where available=0A=
			if ( jQuery.fx.step[ tween.prop ] ) {=0A=
				jQuery.fx.step[ tween.prop ]( tween );=0A=
			} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ =
tween.prop ] ] !=3D null || jQuery.cssHooks[ tween.prop ] ) ) {=0A=
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );=0A=
			} else {=0A=
				tween.elem[ tween.prop ] =3D tween.now;=0A=
			}=0A=
		}=0A=
	}=0A=
};=0A=
=0A=
// Support: IE9=0A=
// Panic based approach to setting things on disconnected nodes=0A=
=0A=
Tween.propHooks.scrollTop =3D Tween.propHooks.scrollLeft =3D {=0A=
	set: function( tween ) {=0A=
		if ( tween.elem.nodeType && tween.elem.parentNode ) {=0A=
			tween.elem[ tween.prop ] =3D tween.now;=0A=
		}=0A=
	}=0A=
};=0A=
=0A=
jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {=0A=
	var cssFn =3D jQuery.fn[ name ];=0A=
	jQuery.fn[ name ] =3D function( speed, easing, callback ) {=0A=
		return speed =3D=3D null || typeof speed =3D=3D=3D "boolean" ?=0A=
			cssFn.apply( this, arguments ) :=0A=
			this.animate( genFx( name, true ), speed, easing, callback );=0A=
	};=0A=
});=0A=
=0A=
jQuery.fn.extend({=0A=
	fadeTo: function( speed, to, easing, callback ) {=0A=
=0A=
		// show any hidden elements after setting opacity to 0=0A=
		return this.filter( isHidden ).css( "opacity", 0 ).show()=0A=
=0A=
			// animate to the value specified=0A=
			.end().animate({ opacity: to }, speed, easing, callback );=0A=
	},=0A=
	animate: function( prop, speed, easing, callback ) {=0A=
		var empty =3D jQuery.isEmptyObject( prop ),=0A=
			optall =3D jQuery.speed( speed, easing, callback ),=0A=
			doAnimation =3D function() {=0A=
				// Operate on a copy of prop so per-property easing won't be lost=0A=
				var anim =3D Animation( this, jQuery.extend( {}, prop ), optall );=0A=
=0A=
				// Empty animations, or finishing resolves immediately=0A=
				if ( empty || data_priv.get( this, "finish" ) ) {=0A=
					anim.stop( true );=0A=
				}=0A=
			};=0A=
			doAnimation.finish =3D doAnimation;=0A=
=0A=
		return empty || optall.queue =3D=3D=3D false ?=0A=
			this.each( doAnimation ) :=0A=
			this.queue( optall.queue, doAnimation );=0A=
	},=0A=
	stop: function( type, clearQueue, gotoEnd ) {=0A=
		var stopQueue =3D function( hooks ) {=0A=
			var stop =3D hooks.stop;=0A=
			delete hooks.stop;=0A=
			stop( gotoEnd );=0A=
		};=0A=
=0A=
		if ( typeof type !=3D=3D "string" ) {=0A=
			gotoEnd =3D clearQueue;=0A=
			clearQueue =3D type;=0A=
			type =3D undefined;=0A=
		}=0A=
		if ( clearQueue && type !=3D=3D false ) {=0A=
			this.queue( type || "fx", [] );=0A=
		}=0A=
=0A=
		return this.each(function() {=0A=
			var dequeue =3D true,=0A=
				index =3D type !=3D null && type + "queueHooks",=0A=
				timers =3D jQuery.timers,=0A=
				data =3D data_priv.get( this );=0A=
=0A=
			if ( index ) {=0A=
				if ( data[ index ] && data[ index ].stop ) {=0A=
					stopQueue( data[ index ] );=0A=
				}=0A=
			} else {=0A=
				for ( index in data ) {=0A=
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {=0A=
						stopQueue( data[ index ] );=0A=
					}=0A=
				}=0A=
			}=0A=
=0A=
			for ( index =3D timers.length; index--; ) {=0A=
				if ( timers[ index ].elem =3D=3D=3D this && (type =3D=3D null || =
timers[ index ].queue =3D=3D=3D type) ) {=0A=
					timers[ index ].anim.stop( gotoEnd );=0A=
					dequeue =3D false;=0A=
					timers.splice( index, 1 );=0A=
				}=0A=
			}=0A=
=0A=
			// start the next in the queue if the last step wasn't forced=0A=
			// timers currently will call their complete callbacks, which will =
dequeue=0A=
			// but only if they were gotoEnd=0A=
			if ( dequeue || !gotoEnd ) {=0A=
				jQuery.dequeue( this, type );=0A=
			}=0A=
		});=0A=
	},=0A=
	finish: function( type ) {=0A=
		if ( type !=3D=3D false ) {=0A=
			type =3D type || "fx";=0A=
		}=0A=
		return this.each(function() {=0A=
			var index,=0A=
				data =3D data_priv.get( this ),=0A=
				queue =3D data[ type + "queue" ],=0A=
				hooks =3D data[ type + "queueHooks" ],=0A=
				timers =3D jQuery.timers,=0A=
				length =3D queue ? queue.length : 0;=0A=
=0A=
			// enable finishing flag on private data=0A=
			data.finish =3D true;=0A=
=0A=
			// empty the queue first=0A=
			jQuery.queue( this, type, [] );=0A=
=0A=
			if ( hooks && hooks.stop ) {=0A=
				hooks.stop.call( this, true );=0A=
			}=0A=
=0A=
			// look for any active animations, and finish them=0A=
			for ( index =3D timers.length; index--; ) {=0A=
				if ( timers[ index ].elem =3D=3D=3D this && timers[ index ].queue =
=3D=3D=3D type ) {=0A=
					timers[ index ].anim.stop( true );=0A=
					timers.splice( index, 1 );=0A=
				}=0A=
			}=0A=
=0A=
			// look for any animations in the old queue and finish them=0A=
			for ( index =3D 0; index < length; index++ ) {=0A=
				if ( queue[ index ] && queue[ index ].finish ) {=0A=
					queue[ index ].finish.call( this );=0A=
				}=0A=
			}=0A=
=0A=
			// turn off finishing flag=0A=
			delete data.finish;=0A=
		});=0A=
	}=0A=
});=0A=
=0A=
// Generate parameters to create a standard animation=0A=
function genFx( type, includeWidth ) {=0A=
	var which,=0A=
		attrs =3D { height: type },=0A=
		i =3D 0;=0A=
=0A=
	// if we include width, step value is 1 to do all cssExpand values,=0A=
	// if we don't include width, step value is 2 to skip over Left and =
Right=0A=
	includeWidth =3D includeWidth? 1 : 0;=0A=
	for( ; i < 4 ; i +=3D 2 - includeWidth ) {=0A=
		which =3D cssExpand[ i ];=0A=
		attrs[ "margin" + which ] =3D attrs[ "padding" + which ] =3D type;=0A=
	}=0A=
=0A=
	if ( includeWidth ) {=0A=
		attrs.opacity =3D attrs.width =3D type;=0A=
	}=0A=
=0A=
	return attrs;=0A=
}=0A=
=0A=
// Generate shortcuts for custom animations=0A=
jQuery.each({=0A=
	slideDown: genFx("show"),=0A=
	slideUp: genFx("hide"),=0A=
	slideToggle: genFx("toggle"),=0A=
	fadeIn: { opacity: "show" },=0A=
	fadeOut: { opacity: "hide" },=0A=
	fadeToggle: { opacity: "toggle" }=0A=
}, function( name, props ) {=0A=
	jQuery.fn[ name ] =3D function( speed, easing, callback ) {=0A=
		return this.animate( props, speed, easing, callback );=0A=
	};=0A=
});=0A=
=0A=
jQuery.speed =3D function( speed, easing, fn ) {=0A=
	var opt =3D speed && typeof speed =3D=3D=3D "object" ? jQuery.extend( =
{}, speed ) : {=0A=
		complete: fn || !fn && easing ||=0A=
			jQuery.isFunction( speed ) && speed,=0A=
		duration: speed,=0A=
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && =
easing=0A=
	};=0A=
=0A=
	opt.duration =3D jQuery.fx.off ? 0 : typeof opt.duration =3D=3D=3D =
"number" ? opt.duration :=0A=
		opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : =
jQuery.fx.speeds._default;=0A=
=0A=
	// normalize opt.queue - true/undefined/null -> "fx"=0A=
	if ( opt.queue =3D=3D null || opt.queue =3D=3D=3D true ) {=0A=
		opt.queue =3D "fx";=0A=
	}=0A=
=0A=
	// Queueing=0A=
	opt.old =3D opt.complete;=0A=
=0A=
	opt.complete =3D function() {=0A=
		if ( jQuery.isFunction( opt.old ) ) {=0A=
			opt.old.call( this );=0A=
		}=0A=
=0A=
		if ( opt.queue ) {=0A=
			jQuery.dequeue( this, opt.queue );=0A=
		}=0A=
	};=0A=
=0A=
	return opt;=0A=
};=0A=
=0A=
jQuery.easing =3D {=0A=
	linear: function( p ) {=0A=
		return p;=0A=
	},=0A=
	swing: function( p ) {=0A=
		return 0.5 - Math.cos( p*Math.PI ) / 2;=0A=
	}=0A=
};=0A=
=0A=
jQuery.timers =3D [];=0A=
jQuery.fx =3D Tween.prototype.init;=0A=
jQuery.fx.tick =3D function() {=0A=
	var timer,=0A=
		timers =3D jQuery.timers,=0A=
		i =3D 0;=0A=
=0A=
	fxNow =3D jQuery.now();=0A=
=0A=
	for ( ; i < timers.length; i++ ) {=0A=
		timer =3D timers[ i ];=0A=
		// Checks the timer has not already been removed=0A=
		if ( !timer() && timers[ i ] =3D=3D=3D timer ) {=0A=
			timers.splice( i--, 1 );=0A=
		}=0A=
	}=0A=
=0A=
	if ( !timers.length ) {=0A=
		jQuery.fx.stop();=0A=
	}=0A=
	fxNow =3D undefined;=0A=
};=0A=
=0A=
jQuery.fx.timer =3D function( timer ) {=0A=
	if ( timer() && jQuery.timers.push( timer ) ) {=0A=
		jQuery.fx.start();=0A=
	}=0A=
};=0A=
=0A=
jQuery.fx.interval =3D 13;=0A=
=0A=
jQuery.fx.start =3D function() {=0A=
	if ( !timerId ) {=0A=
		timerId =3D setInterval( jQuery.fx.tick, jQuery.fx.interval );=0A=
	}=0A=
};=0A=
=0A=
jQuery.fx.stop =3D function() {=0A=
	clearInterval( timerId );=0A=
	timerId =3D null;=0A=
};=0A=
=0A=
jQuery.fx.speeds =3D {=0A=
	slow: 600,=0A=
	fast: 200,=0A=
	// Default speed=0A=
	_default: 400=0A=
};=0A=
=0A=
// Back Compat <1.8 extension point=0A=
jQuery.fx.step =3D {};=0A=
=0A=
if ( jQuery.expr && jQuery.expr.filters ) {=0A=
	jQuery.expr.filters.animated =3D function( elem ) {=0A=
		return jQuery.grep(jQuery.timers, function( fn ) {=0A=
			return elem =3D=3D=3D fn.elem;=0A=
		}).length;=0A=
	};=0A=
}=0A=
jQuery.fn.offset =3D function( options ) {=0A=
	if ( arguments.length ) {=0A=
		return options =3D=3D=3D undefined ?=0A=
			this :=0A=
			this.each(function( i ) {=0A=
				jQuery.offset.setOffset( this, options, i );=0A=
			});=0A=
	}=0A=
=0A=
	var docElem, win,=0A=
		elem =3D this[ 0 ],=0A=
		box =3D { top: 0, left: 0 },=0A=
		doc =3D elem && elem.ownerDocument;=0A=
=0A=
	if ( !doc ) {=0A=
		return;=0A=
	}=0A=
=0A=
	docElem =3D doc.documentElement;=0A=
=0A=
	// Make sure it's not a disconnected DOM node=0A=
	if ( !jQuery.contains( docElem, elem ) ) {=0A=
		return box;=0A=
	}=0A=
=0A=
	// If we don't have gBCR, just use 0,0 rather than error=0A=
	// BlackBerry 5, iOS 3 (original iPhone)=0A=
	if ( typeof elem.getBoundingClientRect !=3D=3D core_strundefined ) {=0A=
		box =3D elem.getBoundingClientRect();=0A=
	}=0A=
	win =3D getWindow( doc );=0A=
	return {=0A=
		top: box.top + win.pageYOffset - docElem.clientTop,=0A=
		left: box.left + win.pageXOffset - docElem.clientLeft=0A=
	};=0A=
};=0A=
=0A=
jQuery.offset =3D {=0A=
=0A=
	setOffset: function( elem, options, i ) {=0A=
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, =
calculatePosition,=0A=
			position =3D jQuery.css( elem, "position" ),=0A=
			curElem =3D jQuery( elem ),=0A=
			props =3D {};=0A=
=0A=
		// Set position first, in-case top/left are set even on static elem=0A=
		if ( position =3D=3D=3D "static" ) {=0A=
			elem.style.position =3D "relative";=0A=
		}=0A=
=0A=
		curOffset =3D curElem.offset();=0A=
		curCSSTop =3D jQuery.css( elem, "top" );=0A=
		curCSSLeft =3D jQuery.css( elem, "left" );=0A=
		calculatePosition =3D ( position =3D=3D=3D "absolute" || position =
=3D=3D=3D "fixed" ) && ( curCSSTop + curCSSLeft ).indexOf("auto") > -1;=0A=
=0A=
		// Need to be able to calculate position if either top or left is auto =
and position is either absolute or fixed=0A=
		if ( calculatePosition ) {=0A=
			curPosition =3D curElem.position();=0A=
			curTop =3D curPosition.top;=0A=
			curLeft =3D curPosition.left;=0A=
=0A=
		} else {=0A=
			curTop =3D parseFloat( curCSSTop ) || 0;=0A=
			curLeft =3D parseFloat( curCSSLeft ) || 0;=0A=
		}=0A=
=0A=
		if ( jQuery.isFunction( options ) ) {=0A=
			options =3D options.call( elem, i, curOffset );=0A=
		}=0A=
=0A=
		if ( options.top !=3D null ) {=0A=
			props.top =3D ( options.top - curOffset.top ) + curTop;=0A=
		}=0A=
		if ( options.left !=3D null ) {=0A=
			props.left =3D ( options.left - curOffset.left ) + curLeft;=0A=
		}=0A=
=0A=
		if ( "using" in options ) {=0A=
			options.using.call( elem, props );=0A=
=0A=
		} else {=0A=
			curElem.css( props );=0A=
		}=0A=
	}=0A=
};=0A=
=0A=
=0A=
jQuery.fn.extend({=0A=
=0A=
	position: function() {=0A=
		if ( !this[ 0 ] ) {=0A=
			return;=0A=
		}=0A=
=0A=
		var offsetParent, offset,=0A=
			elem =3D this[ 0 ],=0A=
			parentOffset =3D { top: 0, left: 0 };=0A=
=0A=
		// Fixed elements are offset from window (parentOffset =3D {top:0, =
left: 0}, because it is it's only offset parent=0A=
		if ( jQuery.css( elem, "position" ) =3D=3D=3D "fixed" ) {=0A=
			// We assume that getBoundingClientRect is available when computed =
position is fixed=0A=
			offset =3D elem.getBoundingClientRect();=0A=
=0A=
		} else {=0A=
			// Get *real* offsetParent=0A=
			offsetParent =3D this.offsetParent();=0A=
=0A=
			// Get correct offsets=0A=
			offset =3D this.offset();=0A=
			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {=0A=
				parentOffset =3D offsetParent.offset();=0A=
			}=0A=
=0A=
			// Add offsetParent borders=0A=
			parentOffset.top +=3D jQuery.css( offsetParent[ 0 ], =
"borderTopWidth", true );=0A=
			parentOffset.left +=3D jQuery.css( offsetParent[ 0 ], =
"borderLeftWidth", true );=0A=
		}=0A=
=0A=
		// Subtract parent offsets and element margins=0A=
		return {=0A=
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", =
true ),=0A=
			left: offset.left - parentOffset.left - jQuery.css( elem, =
"marginLeft", true )=0A=
		};=0A=
	},=0A=
=0A=
	offsetParent: function() {=0A=
		return this.map(function() {=0A=
			var offsetParent =3D this.offsetParent || docElem;=0A=
=0A=
			while ( offsetParent && ( !jQuery.nodeName( offsetParent, "html" ) && =
jQuery.css( offsetParent, "position") =3D=3D=3D "static" ) ) {=0A=
				offsetParent =3D offsetParent.offsetParent;=0A=
			}=0A=
=0A=
			return offsetParent || docElem;=0A=
		});=0A=
	}=0A=
});=0A=
=0A=
=0A=
// Create scrollLeft and scrollTop methods=0A=
jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, =
function( method, prop ) {=0A=
	var top =3D "pageYOffset" =3D=3D=3D prop;=0A=
=0A=
	jQuery.fn[ method ] =3D function( val ) {=0A=
		return jQuery.access( this, function( elem, method, val ) {=0A=
			var win =3D getWindow( elem );=0A=
=0A=
			if ( val =3D=3D=3D undefined ) {=0A=
				return win ? win[ prop ] : elem[ method ];=0A=
			}=0A=
=0A=
			if ( win ) {=0A=
				win.scrollTo(=0A=
					!top ? val : window.pageXOffset,=0A=
					top ? val : window.pageYOffset=0A=
				);=0A=
=0A=
			} else {=0A=
				elem[ method ] =3D val;=0A=
			}=0A=
		}, method, val, arguments.length, null );=0A=
	};=0A=
});=0A=
=0A=
function getWindow( elem ) {=0A=
	return jQuery.isWindow( elem ) ? elem : elem.nodeType =3D=3D=3D 9 && =
elem.defaultView;=0A=
}=0A=
// Create innerHeight, innerWidth, height, width, outerHeight and =
outerWidth methods=0A=
jQuery.each( { Height: "height", Width: "width" }, function( name, type =
) {=0A=
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + =
name }, function( defaultExtra, funcName ) {=0A=
		// margin is only for outerHeight, outerWidth=0A=
		jQuery.fn[ funcName ] =3D function( margin, value ) {=0A=
			var chainable =3D arguments.length && ( defaultExtra || typeof margin =
!=3D=3D "boolean" ),=0A=
				extra =3D defaultExtra || ( margin =3D=3D=3D true || value =3D=3D=3D =
true ? "margin" : "border" );=0A=
=0A=
			return jQuery.access( this, function( elem, type, value ) {=0A=
				var doc;=0A=
=0A=
				if ( jQuery.isWindow( elem ) ) {=0A=
					// As of 5/8/2012 this will yield incorrect results for Mobile =
Safari, but there=0A=
					// isn't a whole lot we can do. See pull request at this URL for =
discussion:=0A=
					// https://github.com/jquery/jquery/pull/764=0A=
					return elem.document.documentElement[ "client" + name ];=0A=
				}=0A=
=0A=
				// Get document width or height=0A=
				if ( elem.nodeType =3D=3D=3D 9 ) {=0A=
					doc =3D elem.documentElement;=0A=
=0A=
					// Either scroll[Width/Height] or offset[Width/Height] or =
client[Width/Height],=0A=
					// whichever is greatest=0A=
					return Math.max(=0A=
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],=0A=
						elem.body[ "offset" + name ], doc[ "offset" + name ],=0A=
						doc[ "client" + name ]=0A=
					);=0A=
				}=0A=
=0A=
				return value =3D=3D=3D undefined ?=0A=
					// Get width or height on the element, requesting but not forcing =
parseFloat=0A=
					jQuery.css( elem, type, extra ) :=0A=
=0A=
					// Set width or height on the element=0A=
					jQuery.style( elem, type, value, extra );=0A=
			}, type, chainable ? margin : undefined, chainable, null );=0A=
		};=0A=
	});=0A=
});=0A=
// Limit scope pollution from any deprecated API=0A=
// (function() {=0A=
=0A=
// The number of elements contained in the matched element set=0A=
jQuery.fn.size =3D function() {=0A=
	return this.length;=0A=
};=0A=
=0A=
jQuery.fn.andSelf =3D jQuery.fn.addBack;=0A=
=0A=
// })();=0A=
if ( typeof module =3D=3D=3D "object" && module && typeof module.exports =
=3D=3D=3D "object" ) {=0A=
	// Expose jQuery as module.exports in loaders that implement the Node=0A=
	// module pattern (including browserify). Do not create the global, =
since=0A=
	// the user will be storing it themselves locally, and globals are =
frowned=0A=
	// upon in the Node module world.=0A=
	module.exports =3D jQuery;=0A=
} else {=0A=
	// Register as a named AMD module, since jQuery can be concatenated =
with other=0A=
	// files that may use define, but not via a proper concatenation script =
that=0A=
	// understands anonymous AMD modules. A named AMD is safest and most =
robust=0A=
	// way to register. Lowercase jquery is used because AMD module names =
are=0A=
	// derived from file names, and jQuery is normally delivered in a =
lowercase=0A=
	// file name. Do this after creating the global so that if an AMD =
module wants=0A=
	// to call noConflict to hide this version of jQuery, it will work.=0A=
	if ( typeof define =3D=3D=3D "function" && define.amd ) {=0A=
		define( "jquery", [], function () { return jQuery; } );=0A=
	}=0A=
}=0A=
=0A=
// If there is a window object, that at least has a document property,=0A=
// define jQuery and $ identifiers=0A=
if ( typeof window =3D=3D=3D "object" && typeof window.document =
=3D=3D=3D "object" ) {=0A=
	window.jQuery =3D window.$ =3D jQuery;=0A=
}=0A=
=0A=
})( window );=0A=

------=_NextPart_000_00AA_01D3A745.B2D630C0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cardwizard-web:444/Scripts/panel_boxes.js

// Copyright (c) 1996-2014 Entrust Datacard Corporation.  All rights =
reserved.
// Warning:  This computer program is protected by copyright law and
// international treaties.  Unauthorized reproduction or distribution
// of this program, or any portion of it, may result in severe civil
// and criminal penalties, and will be prosecuted to the maximum
// extent possible under the law.
/*****************************************************
*  PANEL_BOXES.JS
******************************************************/

var cw =3D {
    init: function () {
        this.initPanelBox();
    },
    initPanelBox: function () {



        $(".panel_box h3").click(function () {
            $(this).siblings(".content").slideToggle("fast");
            $(this).parent().toggleClass("open");
        });
    }
}

$(document).ready(function () {
    cw.init();
});

------=_NextPart_000_00AA_01D3A745.B2D630C0--
